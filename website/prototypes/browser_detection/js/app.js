// Generated by CoffeeScript 1.4.0
(function() {
  var BrowserDetection,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  BrowserDetection = (function() {
    var browser, browserVersion, webGL;

    browser = null;

    browserVersion = null;

    webGL = Modernizr.webgl;

    function BrowserDetection() {
      this.onError = __bind(this.onError, this);

      this.onSuccess = __bind(this.onSuccess, this);

      this.compare = __bind(this.compare, this);
      this.browser = BrowserDetect.browser;
      this.browserVersion = BrowserDetect.version;
      this.compare();
    }

    BrowserDetection.prototype.compare = function() {
      var gl;
      if (this.browser === 'Chrome' && webGL) {
        return this.onSuccess();
      } else if (this.browser === 'Chrome' && !webGL) {
        return this.onError(1);
      } else if (this.browser === 'Firefox' && webGL) {
        return this.onError(2);
      } else if (this.browser === 'Firefox' && !webGL) {
        return this.onError(3);
      } else if (this.browser === 'Explorer' && (this.browserVersion === 6 || this.browserVersion === 7 || this.browserVersion === 8 || this.browserVersion === 9)) {
        alert("I don't want to live on this planet anymore");
        return this.onError(4);
      } else if (this.browser === 'Safari') {
        return this.onError(5);
      } else {
        if (!window.WebGLRenderingContext) {
          this.onError(6);
        }
        gl = canvas.getContext("webgl");
        if (!gl) {
          return this.onError(7);
        }
      }
    };

    BrowserDetection.prototype.onSuccess = function() {};

    BrowserDetection.prototype.onError = function(error) {};

    return BrowserDetection;

  })();

  $(function() {
    var detect,
      _this = this;
    detect = new BrowserDetection('en');
    detect.onSuccess = function() {
      return console.log('everything is ok');
    };
    return detect.onError = function(error) {
      return console.log(error);
    };
  });

}).call(this);
