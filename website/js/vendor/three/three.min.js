var THREE=THREE||{REVISION:"51 Oz Mod"};void 0===self.console&&(self.console={info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}}),void 0===self.Int32Array&&(self.Int32Array=Array,self.Float32Array=Array),void 0===String.prototype.startsWith&&(String.prototype.startsWith=function(str){return this.slice(0,str.length)===str}),void 0===String.prototype.endsWith&&(String.prototype.endsWith=function(str){var t=str+"",index=this.lastIndexOf(t);return index>=0&&index===this.length-t.length}),void 0===!String.prototype.trim&&(String.prototype.trim=function(){return this.replace(/^\s+|\s+$/g,"")}),function(){for(var lastTime=0,vendors=["ms","moz","webkit","o"],x=0;vendors.length>x&&!window.requestAnimationFrame;++x)window.requestAnimationFrame=window[vendors[x]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[vendors[x]+"CancelAnimationFrame"]||window[vendors[x]+"CancelRequestAnimationFrame"];void 0===window.requestAnimationFrame&&(window.requestAnimationFrame=function(callback){var currTime=Date.now(),timeToCall=Math.max(0,16-(currTime-lastTime)),id=window.setTimeout(function(){callback(currTime+timeToCall)},timeToCall);return lastTime=currTime+timeToCall,id}),void 0===window.cancelAnimationFrame&&(window.cancelAnimationFrame=function(id){clearTimeout(id)})}(),THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.UVMapping=function(){},THREE.CubeReflectionMapping=function(){},THREE.CubeRefractionMapping=function(){},THREE.SphericalReflectionMapping=function(){},THREE.SphericalRefractionMapping=function(){},THREE.RepeatWrapping=1e3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.Vector2=function(x,y){this.x=x||0,this.y=y||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(x,y){return this.x=x,this.y=y,this},copy:function(v){return this.x=v.x,this.y=v.y,this},add:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this},addSelf:function(v){return this.x+=v.x,this.y+=v.y,this},sub:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this},subSelf:function(v){return this.x-=v.x,this.y-=v.y,this},multiplyScalar:function(s){return this.x*=s,this.y*=s,this},divideScalar:function(s){return s?(this.x/=s,this.y/=s):this.set(0,0),this},negate:function(){return this.multiplyScalar(-1)},dot:function(v){return this.x*v.x+this.y*v.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(v){return Math.sqrt(this.distanceToSquared(v))},distanceToSquared:function(v){var dx=this.x-v.x,dy=this.y-v.y;return dx*dx+dy*dy},setLength:function(l){return this.normalize().multiplyScalar(l)},lerpSelf:function(v,alpha){return this.x+=(v.x-this.x)*alpha,this.y+=(v.y-this.y)*alpha,this},equals:function(v){return v.x===this.x&&v.y===this.y},isZero:function(){return 1e-4>this.lengthSq()},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Vector3=function(x,y,z){this.x=x||0,this.y=y||0,this.z=z||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(x,y,z){return this.x=x,this.y=y,this.z=z,this},setX:function(x){return this.x=x,this},setY:function(y){return this.y=y,this},setZ:function(z){return this.z=z,this},copy:function(v){return this.x=v.x,this.y=v.y,this.z=v.z,this},add:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this},addSelf:function(v){return this.x+=v.x,this.y+=v.y,this.z+=v.z,this},addScalar:function(s){return this.x+=s,this.y+=s,this.z+=s,this},sub:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this},subSelf:function(v){return this.x-=v.x,this.y-=v.y,this.z-=v.z,this},multiply:function(a,b){return this.x=a.x*b.x,this.y=a.y*b.y,this.z=a.z*b.z,this},multiplySelf:function(v){return this.x*=v.x,this.y*=v.y,this.z*=v.z,this},multiplyScalar:function(s){return this.x*=s,this.y*=s,this.z*=s,this},divideSelf:function(v){return this.x/=v.x,this.y/=v.y,this.z/=v.z,this},divideScalar:function(s){return s?(this.x/=s,this.y/=s,this.z/=s):(this.x=0,this.y=0,this.z=0),this},negate:function(){return this.multiplyScalar(-1)},dot:function(v){return this.x*v.x+this.y*v.y+this.z*v.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(l){return this.normalize().multiplyScalar(l)},lerpSelf:function(v,alpha){return this.x+=(v.x-this.x)*alpha,this.y+=(v.y-this.y)*alpha,this.z+=(v.z-this.z)*alpha,this},cross:function(a,b){return this.x=a.y*b.z-a.z*b.y,this.y=a.z*b.x-a.x*b.z,this.z=a.x*b.y-a.y*b.x,this},crossSelf:function(v){var x=this.x,y=this.y,z=this.z;return this.x=y*v.z-z*v.y,this.y=z*v.x-x*v.z,this.z=x*v.y-y*v.x,this},distanceTo:function(v){return Math.sqrt(this.distanceToSquared(v))},distanceToSquared:function(v){return(new THREE.Vector3).sub(this,v).lengthSq()},getPositionFromMatrix:function(m){return this.x=m.elements[12],this.y=m.elements[13],this.z=m.elements[14],this},setEulerFromRotationMatrix:function(m,order){function clamp(x){return Math.min(Math.max(x,-1),1)}var te=m.elements,m11=te[0],m12=te[4],m13=te[8],m21=te[1],m22=te[5],m23=te[9],m31=te[2],m32=te[6],m33=te[10];return void 0===order||"XYZ"===order?(this.y=Math.asin(clamp(m13)),.99999>Math.abs(m13)?(this.x=Math.atan2(-m23,m33),this.z=Math.atan2(-m12,m11)):(this.x=Math.atan2(m32,m22),this.z=0)):"YXZ"===order?(this.x=Math.asin(-clamp(m23)),.99999>Math.abs(m23)?(this.y=Math.atan2(m13,m33),this.z=Math.atan2(m21,m22)):(this.y=Math.atan2(-m31,m11),this.z=0)):"ZXY"===order?(this.x=Math.asin(clamp(m32)),.99999>Math.abs(m32)?(this.y=Math.atan2(-m31,m33),this.z=Math.atan2(-m12,m22)):(this.y=0,this.z=Math.atan2(m21,m11))):"ZYX"===order?(this.y=Math.asin(-clamp(m31)),.99999>Math.abs(m31)?(this.x=Math.atan2(m32,m33),this.z=Math.atan2(m21,m11)):(this.x=0,this.z=Math.atan2(-m12,m22))):"YZX"===order?(this.z=Math.asin(clamp(m21)),.99999>Math.abs(m21)?(this.x=Math.atan2(-m23,m22),this.y=Math.atan2(-m31,m11)):(this.x=0,this.y=Math.atan2(m13,m33))):"XZY"===order&&(this.z=Math.asin(-clamp(m12)),.99999>Math.abs(m12)?(this.x=Math.atan2(m32,m22),this.y=Math.atan2(m13,m11)):(this.x=Math.atan2(-m23,m33),this.y=0)),this},setEulerFromQuaternion:function(q,order){function clamp(x){return Math.min(Math.max(x,-1),1)}var sqx=q.x*q.x,sqy=q.y*q.y,sqz=q.z*q.z,sqw=q.w*q.w;return void 0===order||"XYZ"===order?(this.x=Math.atan2(2*(q.x*q.w-q.y*q.z),sqw-sqx-sqy+sqz),this.y=Math.asin(clamp(2*(q.x*q.z+q.y*q.w))),this.z=Math.atan2(2*(q.z*q.w-q.x*q.y),sqw+sqx-sqy-sqz)):"YXZ"===order?(this.x=Math.asin(clamp(2*(q.x*q.w-q.y*q.z))),this.y=Math.atan2(2*(q.x*q.z+q.y*q.w),sqw-sqx-sqy+sqz),this.z=Math.atan2(2*(q.x*q.y+q.z*q.w),sqw-sqx+sqy-sqz)):"ZXY"===order?(this.x=Math.asin(clamp(2*(q.x*q.w+q.y*q.z))),this.y=Math.atan2(2*(q.y*q.w-q.z*q.x),sqw-sqx-sqy+sqz),this.z=Math.atan2(2*(q.z*q.w-q.x*q.y),sqw-sqx+sqy-sqz)):"ZYX"===order?(this.x=Math.atan2(2*(q.x*q.w+q.z*q.y),sqw-sqx-sqy+sqz),this.y=Math.asin(clamp(2*(q.y*q.w-q.x*q.z))),this.z=Math.atan2(2*(q.x*q.y+q.z*q.w),sqw+sqx-sqy-sqz)):"YZX"===order?(this.x=Math.atan2(2*(q.x*q.w-q.z*q.y),sqw-sqx+sqy-sqz),this.y=Math.atan2(2*(q.y*q.w-q.x*q.z),sqw+sqx-sqy-sqz),this.z=Math.asin(clamp(2*(q.x*q.y+q.z*q.w)))):"XZY"===order&&(this.x=Math.atan2(2*(q.x*q.w+q.y*q.z),sqw-sqx+sqy-sqz),this.y=Math.atan2(2*(q.x*q.z+q.y*q.w),sqw+sqx-sqy-sqz),this.z=Math.asin(clamp(2*(q.z*q.w-q.x*q.y)))),this},getScaleFromMatrix:function(m){var sx=this.set(m.elements[0],m.elements[1],m.elements[2]).length(),sy=this.set(m.elements[4],m.elements[5],m.elements[6]).length(),sz=this.set(m.elements[8],m.elements[9],m.elements[10]).length();return this.x=sx,this.y=sy,this.z=sz,this},equals:function(v){return v.x===this.x&&v.y===this.y&&v.z===this.z},isZero:function(){return 1e-4>this.lengthSq()},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.Vector4=function(x,y,z,w){this.x=x||0,this.y=y||0,this.z=z||0,this.w=void 0!==w?w:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(x,y,z,w){return this.x=x,this.y=y,this.z=z,this.w=w,this},copy:function(v){return this.x=v.x,this.y=v.y,this.z=v.z,this.w=void 0!==v.w?v.w:1,this},add:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this.w=a.w+b.w,this},addSelf:function(v){return this.x+=v.x,this.y+=v.y,this.z+=v.z,this.w+=v.w,this},sub:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this.w=a.w-b.w,this},subSelf:function(v){return this.x-=v.x,this.y-=v.y,this.z-=v.z,this.w-=v.w,this},multiplyScalar:function(s){return this.x*=s,this.y*=s,this.z*=s,this.w*=s,this},divideScalar:function(s){return s?(this.x/=s,this.y/=s,this.z/=s,this.w/=s):(this.x=0,this.y=0,this.z=0,this.w=1),this},negate:function(){return this.multiplyScalar(-1)},dot:function(v){return this.x*v.x+this.y*v.y+this.z*v.z+this.w*v.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(l){return this.normalize().multiplyScalar(l)},lerpSelf:function(v,alpha){return this.x+=(v.x-this.x)*alpha,this.y+=(v.y-this.y)*alpha,this.z+=(v.z-this.z)*alpha,this.w+=(v.w-this.w)*alpha,this},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},setAxisAngleFromQuaternion:function(q){this.w=2*Math.acos(q.w);var s=Math.sqrt(1-q.w*q.w);return 1e-4>s?(this.x=1,this.y=0,this.z=0):(this.x=q.x/s,this.y=q.y/s,this.z=q.z/s),this},setAxisAngleFromRotationMatrix:function(m){var angle,x,y,z,epsilon=.01,epsilon2=.1,te=m.elements,m11=te[0],m12=te[4],m13=te[8],m21=te[1],m22=te[5],m23=te[9],m31=te[2],m32=te[6],m33=te[10];if(epsilon>Math.abs(m12-m21)&&epsilon>Math.abs(m13-m31)&&epsilon>Math.abs(m23-m32)){if(epsilon2>Math.abs(m12+m21)&&epsilon2>Math.abs(m13+m31)&&epsilon2>Math.abs(m23+m32)&&epsilon2>Math.abs(m11+m22+m33-3))return this.set(1,0,0,0),this;angle=Math.PI;var xx=(m11+1)/2,yy=(m22+1)/2,zz=(m33+1)/2,xy=(m12+m21)/4,xz=(m13+m31)/4,yz=(m23+m32)/4;return xx>yy&&xx>zz?epsilon>xx?(x=0,y=.707106781,z=.707106781):(x=Math.sqrt(xx),y=xy/x,z=xz/x):yy>zz?epsilon>yy?(x=.707106781,y=0,z=.707106781):(y=Math.sqrt(yy),x=xy/y,z=yz/y):epsilon>zz?(x=.707106781,y=.707106781,z=0):(z=Math.sqrt(zz),x=xz/z,y=yz/z),this.set(x,y,z,angle),this}var s=Math.sqrt((m32-m23)*(m32-m23)+(m13-m31)*(m13-m31)+(m21-m12)*(m21-m12));return.001>Math.abs(s)&&(s=1),this.x=(m32-m23)/s,this.y=(m13-m31)/s,this.z=(m21-m12)/s,this.w=Math.acos((m11+m22+m33-1)/2),this}},THREE.Vertex=function(v){return console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead."),v},THREE.Matrix3=function(){this.elements=new Float32Array(9)},THREE.Matrix3.prototype={constructor:THREE.Matrix3,getInverse:function(matrix){var me=matrix.elements,a11=me[10]*me[5]-me[6]*me[9],a21=-me[10]*me[1]+me[2]*me[9],a31=me[6]*me[1]-me[2]*me[5],a12=-me[10]*me[4]+me[6]*me[8],a22=me[10]*me[0]-me[2]*me[8],a32=-me[6]*me[0]+me[2]*me[4],a13=me[9]*me[4]-me[5]*me[8],a23=-me[9]*me[0]+me[1]*me[8],a33=me[5]*me[0]-me[1]*me[4],det=me[0]*a11+me[1]*a12+me[2]*a13;0===det&&console.warn("Matrix3.getInverse(): determinant == 0");var idet=1/det,m=this.elements;return m[0]=idet*a11,m[1]=idet*a21,m[2]=idet*a31,m[3]=idet*a12,m[4]=idet*a22,m[5]=idet*a32,m[6]=idet*a13,m[7]=idet*a23,m[8]=idet*a33,this},transpose:function(){var tmp,m=this.elements;return tmp=m[1],m[1]=m[3],m[3]=tmp,tmp=m[2],m[2]=m[6],m[6]=tmp,tmp=m[5],m[5]=m[7],m[7]=tmp,this},transposeIntoArray:function(r){var m=this.m;return r[0]=m[0],r[1]=m[3],r[2]=m[6],r[3]=m[1],r[4]=m[4],r[5]=m[7],r[6]=m[2],r[7]=m[5],r[8]=m[8],this}},THREE.Matrix4=function(n11,n12,n13,n14,n21,n22,n23,n24,n31,n32,n33,n34,n41,n42,n43,n44){this.elements=new Float32Array(16),this.set(void 0!==n11?n11:1,n12||0,n13||0,n14||0,n21||0,void 0!==n22?n22:1,n23||0,n24||0,n31||0,n32||0,void 0!==n33?n33:1,n34||0,n41||0,n42||0,n43||0,void 0!==n44?n44:1)},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(n11,n12,n13,n14,n21,n22,n23,n24,n31,n32,n33,n34,n41,n42,n43,n44){var te=this.elements;return te[0]=n11,te[4]=n12,te[8]=n13,te[12]=n14,te[1]=n21,te[5]=n22,te[9]=n23,te[13]=n24,te[2]=n31,te[6]=n32,te[10]=n33,te[14]=n34,te[3]=n41,te[7]=n42,te[11]=n43,te[15]=n44,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(m){var me=m.elements;return this.set(me[0],me[4],me[8],me[12],me[1],me[5],me[9],me[13],me[2],me[6],me[10],me[14],me[3],me[7],me[11],me[15]),this},lookAt:function(eye,target,up){var te=this.elements,x=THREE.Matrix4.__v1,y=THREE.Matrix4.__v2,z=THREE.Matrix4.__v3;return z.sub(eye,target).normalize(),0===z.length()&&(z.z=1),x.cross(up,z).normalize(),0===x.length()&&(z.x+=1e-4,x.cross(up,z).normalize()),y.cross(z,x),te[0]=x.x,te[4]=y.x,te[8]=z.x,te[1]=x.y,te[5]=y.y,te[9]=z.y,te[2]=x.z,te[6]=y.z,te[10]=z.z,this},multiply:function(a,b){var ae=a.elements,be=b.elements,te=this.elements,a11=ae[0],a12=ae[4],a13=ae[8],a14=ae[12],a21=ae[1],a22=ae[5],a23=ae[9],a24=ae[13],a31=ae[2],a32=ae[6],a33=ae[10],a34=ae[14],a41=ae[3],a42=ae[7],a43=ae[11],a44=ae[15],b11=be[0],b12=be[4],b13=be[8],b14=be[12],b21=be[1],b22=be[5],b23=be[9],b24=be[13],b31=be[2],b32=be[6],b33=be[10],b34=be[14],b41=be[3],b42=be[7],b43=be[11],b44=be[15];return te[0]=a11*b11+a12*b21+a13*b31+a14*b41,te[4]=a11*b12+a12*b22+a13*b32+a14*b42,te[8]=a11*b13+a12*b23+a13*b33+a14*b43,te[12]=a11*b14+a12*b24+a13*b34+a14*b44,te[1]=a21*b11+a22*b21+a23*b31+a24*b41,te[5]=a21*b12+a22*b22+a23*b32+a24*b42,te[9]=a21*b13+a22*b23+a23*b33+a24*b43,te[13]=a21*b14+a22*b24+a23*b34+a24*b44,te[2]=a31*b11+a32*b21+a33*b31+a34*b41,te[6]=a31*b12+a32*b22+a33*b32+a34*b42,te[10]=a31*b13+a32*b23+a33*b33+a34*b43,te[14]=a31*b14+a32*b24+a33*b34+a34*b44,te[3]=a41*b11+a42*b21+a43*b31+a44*b41,te[7]=a41*b12+a42*b22+a43*b32+a44*b42,te[11]=a41*b13+a42*b23+a43*b33+a44*b43,te[15]=a41*b14+a42*b24+a43*b34+a44*b44,this},multiplySelf:function(m){return this.multiply(this,m)},multiplyToArray:function(a,b,r){var te=this.elements;return this.multiply(a,b),r[0]=te[0],r[1]=te[1],r[2]=te[2],r[3]=te[3],r[4]=te[4],r[5]=te[5],r[6]=te[6],r[7]=te[7],r[8]=te[8],r[9]=te[9],r[10]=te[10],r[11]=te[11],r[12]=te[12],r[13]=te[13],r[14]=te[14],r[15]=te[15],this},multiplyScalar:function(s){var te=this.elements;return te[0]*=s,te[4]*=s,te[8]*=s,te[12]*=s,te[1]*=s,te[5]*=s,te[9]*=s,te[13]*=s,te[2]*=s,te[6]*=s,te[10]*=s,te[14]*=s,te[3]*=s,te[7]*=s,te[11]*=s,te[15]*=s,this},multiplyVector3:function(v){var te=this.elements,vx=v.x,vy=v.y,vz=v.z,d=1/(te[3]*vx+te[7]*vy+te[11]*vz+te[15]);return v.x=(te[0]*vx+te[4]*vy+te[8]*vz+te[12])*d,v.y=(te[1]*vx+te[5]*vy+te[9]*vz+te[13])*d,v.z=(te[2]*vx+te[6]*vy+te[10]*vz+te[14])*d,v},multiplyVector4:function(v){var te=this.elements,vx=v.x,vy=v.y,vz=v.z,vw=v.w;return v.x=te[0]*vx+te[4]*vy+te[8]*vz+te[12]*vw,v.y=te[1]*vx+te[5]*vy+te[9]*vz+te[13]*vw,v.z=te[2]*vx+te[6]*vy+te[10]*vz+te[14]*vw,v.w=te[3]*vx+te[7]*vy+te[11]*vz+te[15]*vw,v},multiplyVector3Array:function(a){for(var tmp=THREE.Matrix4.__v1,i=0,il=a.length;il>i;i+=3)tmp.x=a[i],tmp.y=a[i+1],tmp.z=a[i+2],this.multiplyVector3(tmp),a[i]=tmp.x,a[i+1]=tmp.y,a[i+2]=tmp.z;return a},rotateAxis:function(v){var te=this.elements,vx=v.x,vy=v.y,vz=v.z;return v.x=vx*te[0]+vy*te[4]+vz*te[8],v.y=vx*te[1]+vy*te[5]+vz*te[9],v.z=vx*te[2]+vy*te[6]+vz*te[10],v.normalize(),v},crossVector:function(a){var te=this.elements,v=new THREE.Vector4;return v.x=te[0]*a.x+te[4]*a.y+te[8]*a.z+te[12]*a.w,v.y=te[1]*a.x+te[5]*a.y+te[9]*a.z+te[13]*a.w,v.z=te[2]*a.x+te[6]*a.y+te[10]*a.z+te[14]*a.w,v.w=a.w?te[3]*a.x+te[7]*a.y+te[11]*a.z+te[15]*a.w:1,v},determinant:function(){var te=this.elements,n11=te[0],n12=te[4],n13=te[8],n14=te[12],n21=te[1],n22=te[5],n23=te[9],n24=te[13],n31=te[2],n32=te[6],n33=te[10],n34=te[14],n41=te[3],n42=te[7],n43=te[11],n44=te[15];return n14*n23*n32*n41-n13*n24*n32*n41-n14*n22*n33*n41+n12*n24*n33*n41+n13*n22*n34*n41-n12*n23*n34*n41-n14*n23*n31*n42+n13*n24*n31*n42+n14*n21*n33*n42-n11*n24*n33*n42-n13*n21*n34*n42+n11*n23*n34*n42+n14*n22*n31*n43-n12*n24*n31*n43-n14*n21*n32*n43+n11*n24*n32*n43+n12*n21*n34*n43-n11*n22*n34*n43-n13*n22*n31*n44+n12*n23*n31*n44+n13*n21*n32*n44-n11*n23*n32*n44-n12*n21*n33*n44+n11*n22*n33*n44},transpose:function(){var tmp,te=this.elements;return tmp=te[1],te[1]=te[4],te[4]=tmp,tmp=te[2],te[2]=te[8],te[8]=tmp,tmp=te[6],te[6]=te[9],te[9]=tmp,tmp=te[3],te[3]=te[12],te[12]=tmp,tmp=te[7],te[7]=te[13],te[13]=tmp,tmp=te[11],te[11]=te[14],te[14]=tmp,this},flattenToArray:function(flat){var te=this.elements;return flat[0]=te[0],flat[1]=te[1],flat[2]=te[2],flat[3]=te[3],flat[4]=te[4],flat[5]=te[5],flat[6]=te[6],flat[7]=te[7],flat[8]=te[8],flat[9]=te[9],flat[10]=te[10],flat[11]=te[11],flat[12]=te[12],flat[13]=te[13],flat[14]=te[14],flat[15]=te[15],flat},flattenToArrayOffset:function(flat,offset){var te=this.elements;return flat[offset]=te[0],flat[offset+1]=te[1],flat[offset+2]=te[2],flat[offset+3]=te[3],flat[offset+4]=te[4],flat[offset+5]=te[5],flat[offset+6]=te[6],flat[offset+7]=te[7],flat[offset+8]=te[8],flat[offset+9]=te[9],flat[offset+10]=te[10],flat[offset+11]=te[11],flat[offset+12]=te[12],flat[offset+13]=te[13],flat[offset+14]=te[14],flat[offset+15]=te[15],flat},getPosition:function(){var te=this.elements;return THREE.Matrix4.__v1.set(te[12],te[13],te[14])},setPosition:function(v){var te=this.elements;return te[12]=v.x,te[13]=v.y,te[14]=v.z,this},getColumnX:function(){var te=this.elements;return THREE.Matrix4.__v1.set(te[0],te[1],te[2])},getColumnY:function(){var te=this.elements;return THREE.Matrix4.__v1.set(te[4],te[5],te[6])},getColumnZ:function(){var te=this.elements;return THREE.Matrix4.__v1.set(te[8],te[9],te[10])},getInverse:function(m){var te=this.elements,me=m.elements,n11=me[0],n12=me[4],n13=me[8],n14=me[12],n21=me[1],n22=me[5],n23=me[9],n24=me[13],n31=me[2],n32=me[6],n33=me[10],n34=me[14],n41=me[3],n42=me[7],n43=me[11],n44=me[15];return te[0]=n23*n34*n42-n24*n33*n42+n24*n32*n43-n22*n34*n43-n23*n32*n44+n22*n33*n44,te[4]=n14*n33*n42-n13*n34*n42-n14*n32*n43+n12*n34*n43+n13*n32*n44-n12*n33*n44,te[8]=n13*n24*n42-n14*n23*n42+n14*n22*n43-n12*n24*n43-n13*n22*n44+n12*n23*n44,te[12]=n14*n23*n32-n13*n24*n32-n14*n22*n33+n12*n24*n33+n13*n22*n34-n12*n23*n34,te[1]=n24*n33*n41-n23*n34*n41-n24*n31*n43+n21*n34*n43+n23*n31*n44-n21*n33*n44,te[5]=n13*n34*n41-n14*n33*n41+n14*n31*n43-n11*n34*n43-n13*n31*n44+n11*n33*n44,te[9]=n14*n23*n41-n13*n24*n41-n14*n21*n43+n11*n24*n43+n13*n21*n44-n11*n23*n44,te[13]=n13*n24*n31-n14*n23*n31+n14*n21*n33-n11*n24*n33-n13*n21*n34+n11*n23*n34,te[2]=n22*n34*n41-n24*n32*n41+n24*n31*n42-n21*n34*n42-n22*n31*n44+n21*n32*n44,te[6]=n14*n32*n41-n12*n34*n41-n14*n31*n42+n11*n34*n42+n12*n31*n44-n11*n32*n44,te[10]=n12*n24*n41-n14*n22*n41+n14*n21*n42-n11*n24*n42-n12*n21*n44+n11*n22*n44,te[14]=n14*n22*n31-n12*n24*n31-n14*n21*n32+n11*n24*n32+n12*n21*n34-n11*n22*n34,te[3]=n23*n32*n41-n22*n33*n41-n23*n31*n42+n21*n33*n42+n22*n31*n43-n21*n32*n43,te[7]=n12*n33*n41-n13*n32*n41+n13*n31*n42-n11*n33*n42-n12*n31*n43+n11*n32*n43,te[11]=n13*n22*n41-n12*n23*n41-n13*n21*n42+n11*n23*n42+n12*n21*n43-n11*n22*n43,te[15]=n12*n23*n31-n13*n22*n31+n13*n21*n32-n11*n23*n32-n12*n21*n33+n11*n22*n33,this.multiplyScalar(1/m.determinant()),this},setRotationFromEuler:function(v,order){var te=this.elements,x=v.x,y=v.y,z=v.z,a=Math.cos(x),b=Math.sin(x),c=Math.cos(y),d=Math.sin(y),e=Math.cos(z),f=Math.sin(z);if(void 0===order||"XYZ"===order){var ae=a*e,af=a*f,be=b*e,bf=b*f;te[0]=c*e,te[4]=-c*f,te[8]=d,te[1]=af+be*d,te[5]=ae-bf*d,te[9]=-b*c,te[2]=bf-ae*d,te[6]=be+af*d,te[10]=a*c}else if("YXZ"===order){var ce=c*e,cf=c*f,de=d*e,df=d*f;te[0]=ce+df*b,te[4]=de*b-cf,te[8]=a*d,te[1]=a*f,te[5]=a*e,te[9]=-b,te[2]=cf*b-de,te[6]=df+ce*b,te[10]=a*c}else if("ZXY"===order){var ce=c*e,cf=c*f,de=d*e,df=d*f;te[0]=ce-df*b,te[4]=-a*f,te[8]=de+cf*b,te[1]=cf+de*b,te[5]=a*e,te[9]=df-ce*b,te[2]=-a*d,te[6]=b,te[10]=a*c}else if("ZYX"===order){var ae=a*e,af=a*f,be=b*e,bf=b*f;te[0]=c*e,te[4]=be*d-af,te[8]=ae*d+bf,te[1]=c*f,te[5]=bf*d+ae,te[9]=af*d-be,te[2]=-d,te[6]=b*c,te[10]=a*c}else if("YZX"===order){var ac=a*c,ad=a*d,bc=b*c,bd=b*d;te[0]=c*e,te[4]=bd-ac*f,te[8]=bc*f+ad,te[1]=f,te[5]=a*e,te[9]=-b*e,te[2]=-d*e,te[6]=ad*f+bc,te[10]=ac-bd*f}else if("XZY"===order){var ac=a*c,ad=a*d,bc=b*c,bd=b*d;te[0]=c*e,te[4]=-f,te[8]=d*e,te[1]=ac*f+bd,te[5]=a*e,te[9]=ad*f-bc,te[2]=bc*f-ad,te[6]=b*e,te[10]=bd*f+ac}return this},setRotationFromQuaternion:function(q){var te=this.elements,x=q.x,y=q.y,z=q.z,w=q.w,x2=x+x,y2=y+y,z2=z+z,xx=x*x2,xy=x*y2,xz=x*z2,yy=y*y2,yz=y*z2,zz=z*z2,wx=w*x2,wy=w*y2,wz=w*z2;return te[0]=1-(yy+zz),te[4]=xy-wz,te[8]=xz+wy,te[1]=xy+wz,te[5]=1-(xx+zz),te[9]=yz-wx,te[2]=xz-wy,te[6]=yz+wx,te[10]=1-(xx+yy),this},compose:function(translation,rotation,scale){var te=this.elements,mRotation=THREE.Matrix4.__m1,mScale=THREE.Matrix4.__m2;return mRotation.identity(),mRotation.setRotationFromQuaternion(rotation),mScale.makeScale(scale.x,scale.y,scale.z),this.multiply(mRotation,mScale),te[12]=translation.x,te[13]=translation.y,te[14]=translation.z,this},decompose:function(translation,rotation,scale){var te=this.elements,x=THREE.Matrix4.__v1,y=THREE.Matrix4.__v2,z=THREE.Matrix4.__v3;x.set(te[0],te[1],te[2]),y.set(te[4],te[5],te[6]),z.set(te[8],te[9],te[10]),translation=translation instanceof THREE.Vector3?translation:new THREE.Vector3,rotation=rotation instanceof THREE.Quaternion?rotation:new THREE.Quaternion,scale=scale instanceof THREE.Vector3?scale:new THREE.Vector3,scale.x=x.length(),scale.y=y.length(),scale.z=z.length(),translation.x=te[12],translation.y=te[13],translation.z=te[14];var matrix=THREE.Matrix4.__m1;return matrix.copy(this),matrix.elements[0]/=scale.x,matrix.elements[1]/=scale.x,matrix.elements[2]/=scale.x,matrix.elements[4]/=scale.y,matrix.elements[5]/=scale.y,matrix.elements[6]/=scale.y,matrix.elements[8]/=scale.z,matrix.elements[9]/=scale.z,matrix.elements[10]/=scale.z,rotation.setFromRotationMatrix(matrix),[translation,rotation,scale]},extractPosition:function(m){var te=this.elements,me=m.elements;return te[12]=me[12],te[13]=me[13],te[14]=me[14],this},extractRotation:function(m){var te=this.elements,me=m.elements,vector=THREE.Matrix4.__v1,scaleX=1/vector.set(me[0],me[1],me[2]).length(),scaleY=1/vector.set(me[4],me[5],me[6]).length(),scaleZ=1/vector.set(me[8],me[9],me[10]).length();return te[0]=me[0]*scaleX,te[1]=me[1]*scaleX,te[2]=me[2]*scaleX,te[4]=me[4]*scaleY,te[5]=me[5]*scaleY,te[6]=me[6]*scaleY,te[8]=me[8]*scaleZ,te[9]=me[9]*scaleZ,te[10]=me[10]*scaleZ,this},translate:function(v){var te=this.elements,x=v.x,y=v.y,z=v.z;return te[12]=te[0]*x+te[4]*y+te[8]*z+te[12],te[13]=te[1]*x+te[5]*y+te[9]*z+te[13],te[14]=te[2]*x+te[6]*y+te[10]*z+te[14],te[15]=te[3]*x+te[7]*y+te[11]*z+te[15],this},rotateX:function(angle){var te=this.elements,m12=te[4],m22=te[5],m32=te[6],m42=te[7],m13=te[8],m23=te[9],m33=te[10],m43=te[11],c=Math.cos(angle),s=Math.sin(angle);return te[4]=c*m12+s*m13,te[5]=c*m22+s*m23,te[6]=c*m32+s*m33,te[7]=c*m42+s*m43,te[8]=c*m13-s*m12,te[9]=c*m23-s*m22,te[10]=c*m33-s*m32,te[11]=c*m43-s*m42,this},rotateY:function(angle){var te=this.elements,m11=te[0],m21=te[1],m31=te[2],m41=te[3],m13=te[8],m23=te[9],m33=te[10],m43=te[11],c=Math.cos(angle),s=Math.sin(angle);return te[0]=c*m11-s*m13,te[1]=c*m21-s*m23,te[2]=c*m31-s*m33,te[3]=c*m41-s*m43,te[8]=c*m13+s*m11,te[9]=c*m23+s*m21,te[10]=c*m33+s*m31,te[11]=c*m43+s*m41,this},rotateZ:function(angle){var te=this.elements,m11=te[0],m21=te[1],m31=te[2],m41=te[3],m12=te[4],m22=te[5],m32=te[6],m42=te[7],c=Math.cos(angle),s=Math.sin(angle);return te[0]=c*m11+s*m12,te[1]=c*m21+s*m22,te[2]=c*m31+s*m32,te[3]=c*m41+s*m42,te[4]=c*m12-s*m11,te[5]=c*m22-s*m21,te[6]=c*m32-s*m31,te[7]=c*m42-s*m41,this},rotateByAxis:function(axis,angle){var te=this.elements;if(1===axis.x&&0===axis.y&&0===axis.z)return this.rotateX(angle);if(0===axis.x&&1===axis.y&&0===axis.z)return this.rotateY(angle);if(0===axis.x&&0===axis.y&&1===axis.z)return this.rotateZ(angle);var x=axis.x,y=axis.y,z=axis.z,n=Math.sqrt(x*x+y*y+z*z);x/=n,y/=n,z/=n;var xx=x*x,yy=y*y,zz=z*z,c=Math.cos(angle),s=Math.sin(angle),oneMinusCosine=1-c,xy=x*y*oneMinusCosine,xz=x*z*oneMinusCosine,yz=y*z*oneMinusCosine,xs=x*s,ys=y*s,zs=z*s,r11=xx+(1-xx)*c,r21=xy+zs,r31=xz-ys,r12=xy-zs,r22=yy+(1-yy)*c,r32=yz+xs,r13=xz+ys,r23=yz-xs,r33=zz+(1-zz)*c,m11=te[0],m21=te[1],m31=te[2],m41=te[3],m12=te[4],m22=te[5],m32=te[6],m42=te[7],m13=te[8],m23=te[9],m33=te[10],m43=te[11];return te[12],te[13],te[14],te[15],te[0]=r11*m11+r21*m12+r31*m13,te[1]=r11*m21+r21*m22+r31*m23,te[2]=r11*m31+r21*m32+r31*m33,te[3]=r11*m41+r21*m42+r31*m43,te[4]=r12*m11+r22*m12+r32*m13,te[5]=r12*m21+r22*m22+r32*m23,te[6]=r12*m31+r22*m32+r32*m33,te[7]=r12*m41+r22*m42+r32*m43,te[8]=r13*m11+r23*m12+r33*m13,te[9]=r13*m21+r23*m22+r33*m23,te[10]=r13*m31+r23*m32+r33*m33,te[11]=r13*m41+r23*m42+r33*m43,this},scale:function(v){var te=this.elements,x=v.x,y=v.y,z=v.z;return te[0]*=x,te[4]*=y,te[8]*=z,te[1]*=x,te[5]*=y,te[9]*=z,te[2]*=x,te[6]*=y,te[10]*=z,te[3]*=x,te[7]*=y,te[11]*=z,this},getMaxScaleOnAxis:function(){var te=this.elements,scaleXSq=te[0]*te[0]+te[1]*te[1]+te[2]*te[2],scaleYSq=te[4]*te[4]+te[5]*te[5]+te[6]*te[6],scaleZSq=te[8]*te[8]+te[9]*te[9]+te[10]*te[10];return Math.sqrt(Math.max(scaleXSq,Math.max(scaleYSq,scaleZSq)))},makeTranslation:function(x,y,z){return this.set(1,0,0,x,0,1,0,y,0,0,1,z,0,0,0,1),this},makeRotationX:function(theta){var c=Math.cos(theta),s=Math.sin(theta);return this.set(1,0,0,0,0,c,-s,0,0,s,c,0,0,0,0,1),this},makeRotationY:function(theta){var c=Math.cos(theta),s=Math.sin(theta);return this.set(c,0,s,0,0,1,0,0,-s,0,c,0,0,0,0,1),this},makeRotationZ:function(theta){var c=Math.cos(theta),s=Math.sin(theta);return this.set(c,-s,0,0,s,c,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(axis,angle){var c=Math.cos(angle),s=Math.sin(angle),t=1-c,x=axis.x,y=axis.y,z=axis.z,tx=t*x,ty=t*y;return this.set(tx*x+c,tx*y-s*z,tx*z+s*y,0,tx*y+s*z,ty*y+c,ty*z-s*x,0,tx*z-s*y,ty*z+s*x,t*z*z+c,0,0,0,0,1),this},makeScale:function(x,y,z){return this.set(x,0,0,0,0,y,0,0,0,0,z,0,0,0,0,1),this},makeFrustum:function(left,right,bottom,top,near,far){var te=this.elements,x=2*near/(right-left),y=2*near/(top-bottom),a=(right+left)/(right-left),b=(top+bottom)/(top-bottom),c=-(far+near)/(far-near),d=-2*far*near/(far-near);return te[0]=x,te[4]=0,te[8]=a,te[12]=0,te[1]=0,te[5]=y,te[9]=b,te[13]=0,te[2]=0,te[6]=0,te[10]=c,te[14]=d,te[3]=0,te[7]=0,te[11]=-1,te[15]=0,this},makePerspective:function(fov,aspect,near,far){var ymax=near*Math.tan(fov*Math.PI/360),ymin=-ymax,xmin=ymin*aspect,xmax=ymax*aspect;return this.makeFrustum(xmin,xmax,ymin,ymax,near,far)},makeOrthographic:function(left,right,top,bottom,near,far){var te=this.elements,w=right-left,h=top-bottom,p=far-near,x=(right+left)/w,y=(top+bottom)/h,z=(far+near)/p;return te[0]=2/w,te[4]=0,te[8]=0,te[12]=-x,te[1]=0,te[5]=2/h,te[9]=0,te[13]=-y,te[2]=0,te[6]=0,te[10]=-2/p,te[14]=-z,te[3]=0,te[7]=0,te[11]=0,te[15]=1,this},clone:function(){var te=this.elements;return new THREE.Matrix4(te[0],te[4],te[8],te[12],te[1],te[5],te[9],te[13],te[2],te[6],te[10],te[14],te[3],te[7],te[11],te[15])}},THREE.Matrix4.__v1=new THREE.Vector3,THREE.Matrix4.__v2=new THREE.Vector3,THREE.Matrix4.__v3=new THREE.Vector3,THREE.Matrix4.__m1=new THREE.Matrix4,THREE.Matrix4.__m2=new THREE.Matrix4,THREE.Clock=function(autoStart){this.autoStart=void 0!==autoStart?autoStart:!0,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1},THREE.Clock.prototype.start=function(){this.startTime=Date.now(),this.oldTime=this.startTime,this.running=!0},THREE.Clock.prototype.stop=function(){this.getElapsedTime(),this.running=!1},THREE.Clock.prototype.getElapsedTime=function(){return this.elapsedTime+=this.getDelta(),this.elapsedTime},THREE.Clock.prototype.getDelta=function(){var diff=0;if(this.autoStart&&!this.running&&this.start(),this.running){var newTime=Date.now();diff=.001*(newTime-this.oldTime),this.oldTime=newTime,this.elapsedTime+=diff}return diff},THREE.Color=function(hex){return void 0!==hex&&this.setHex(hex),this},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(color){return this.r=color.r,this.g=color.g,this.b=color.b,this},copyGammaToLinear:function(color){return this.r=color.r*color.r,this.g=color.g*color.g,this.b=color.b*color.b,this},copyLinearToGamma:function(color){return this.r=Math.sqrt(color.r),this.g=Math.sqrt(color.g),this.b=Math.sqrt(color.b),this},convertGammaToLinear:function(){var r=this.r,g=this.g,b=this.b;return this.r=r*r,this.g=g*g,this.b=b*b,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},setRGB:function(r,g,b){return this.r=r,this.g=g,this.b=b,this},setHSV:function(h,s,v){var i,f,p,q,t;return 0===v?this.r=this.g=this.b=0:(i=Math.floor(6*h),f=6*h-i,p=v*(1-s),q=v*(1-s*f),t=v*(1-s*(1-f)),0===i?(this.r=v,this.g=t,this.b=p):1===i?(this.r=q,this.g=v,this.b=p):2===i?(this.r=p,this.g=v,this.b=t):3===i?(this.r=p,this.g=q,this.b=v):4===i?(this.r=t,this.g=p,this.b=v):5===i&&(this.r=v,this.g=p,this.b=q)),this},setHex:function(hex){return hex=Math.floor(hex),this.r=(255&hex>>16)/255,this.g=(255&hex>>8)/255,this.b=(255&hex)/255,this},lerpSelf:function(color,alpha){return this.r+=(color.r-this.r)*alpha,this.g+=(color.g-this.g)*alpha,this.b+=(color.b-this.b)*alpha,this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getContextStyle:function(){return"rgb("+(0|255*this.r)+","+(0|255*this.g)+","+(0|255*this.b)+")"},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}},THREE.EventTarget=function(){var listeners={};this.addEventListener=function(type,listener){void 0===listeners[type]&&(listeners[type]=[]),-1===listeners[type].indexOf(listener)&&listeners[type].push(listener)},this.dispatchEvent=function(event){for(var listener in listeners[event.type])listeners[event.type][listener](event)},this.removeEventListener=function(type,listener){var index=listeners[type].indexOf(listener);-1!==index&&listeners[type].splice(index,1)}},THREE.Face3=function(a,b,c,normal,color,materialIndex){this.a=a,this.b=b,this.c=c,this.normal=normal instanceof THREE.Vector3?normal:new THREE.Vector3,this.vertexNormals=normal instanceof Array?normal:[],this.color=color instanceof THREE.Color?color:new THREE.Color,this.vertexColors=color instanceof Array?color:[],this.vertexTangents=[],this.materialIndex=materialIndex,this.centroid=new THREE.Vector3},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var face=new THREE.Face3(this.a,this.b,this.c);
face.normal.copy(this.normal),face.color.copy(this.color),face.centroid.copy(this.centroid),face.materialIndex=this.materialIndex;var i,il;for(i=0,il=this.vertexNormals.length;il>i;i++)face.vertexNormals[i]=this.vertexNormals[i].clone();for(i=0,il=this.vertexColors.length;il>i;i++)face.vertexColors[i]=this.vertexColors[i].clone();for(i=0,il=this.vertexTangents.length;il>i;i++)face.vertexTangents[i]=this.vertexTangents[i].clone();return face}},THREE.Face4=function(a,b,c,d,normal,color,materialIndex){this.a=a,this.b=b,this.c=c,this.d=d,this.normal=normal instanceof THREE.Vector3?normal:new THREE.Vector3,this.vertexNormals=normal instanceof Array?normal:[],this.color=color instanceof THREE.Color?color:new THREE.Color,this.vertexColors=color instanceof Array?color:[],this.vertexTangents=[],this.materialIndex=materialIndex,this.centroid=new THREE.Vector3},THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var face=new THREE.Face4(this.a,this.b,this.c,this.d);face.normal.copy(this.normal),face.color.copy(this.color),face.centroid.copy(this.centroid),face.materialIndex=this.materialIndex;var i,il;for(i=0,il=this.vertexNormals.length;il>i;i++)face.vertexNormals[i]=this.vertexNormals[i].clone();for(i=0,il=this.vertexColors.length;il>i;i++)face.vertexColors[i]=this.vertexColors[i].clone();for(i=0,il=this.vertexTangents.length;il>i;i++)face.vertexTangents[i]=this.vertexTangents[i].clone();return face}},THREE.Frustum=function(){this.planes=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4]},THREE.Frustum.prototype.setFromMatrix=function(m){var plane,planes=this.planes,me=m.elements,me0=me[0],me1=me[1],me2=me[2],me3=me[3],me4=me[4],me5=me[5],me6=me[6],me7=me[7],me8=me[8],me9=me[9],me10=me[10],me11=me[11],me12=me[12],me13=me[13],me14=me[14],me15=me[15];planes[0].set(me3-me0,me7-me4,me11-me8,me15-me12),planes[1].set(me3+me0,me7+me4,me11+me8,me15+me12),planes[2].set(me3+me1,me7+me5,me11+me9,me15+me13),planes[3].set(me3-me1,me7-me5,me11-me9,me15-me13),planes[4].set(me3-me2,me7-me6,me11-me10,me15-me14),planes[5].set(me3+me2,me7+me6,me11+me10,me15+me14);for(var i=0;6>i;i++)plane=planes[i],plane.divideScalar(Math.sqrt(plane.x*plane.x+plane.y*plane.y+plane.z*plane.z))},THREE.Frustum.prototype.contains=function(object){for(var distance=0,planes=this.planes,matrix=object.matrixWorld,me=matrix.elements,radius=-object.geometry.boundingSphere.radius*matrix.getMaxScaleOnAxis(),i=0;6>i;i++)if(distance=planes[i].x*me[12]+planes[i].y*me[13]+planes[i].z*me[14]+planes[i].w,radius>=distance)return!1;return!0},THREE.Frustum.__v1=new THREE.Vector3,THREE.Math={clamp:function(x,a,b){return a>x?a:x>b?b:x},clampBottom:function(x,a){return a>x?a:x},mapLinear:function(x,a1,a2,b1,b2){return b1+(x-a1)*(b2-b1)/(a2-a1)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(low,high){return low+Math.floor(Math.random()*(high-low+1))},randFloat:function(low,high){return low+Math.random()*(high-low)},randFloatSpread:function(range){return range*(.5-Math.random())},sign:function(x){return 0>x?-1:x>0?1:0}},THREE.Object3D=function(){this.id=THREE.Object3DCount++,this.name="",this.properties={},this.parent=void 0,this.children=[],this.up=new THREE.Vector3(0,1,0),this.position=new THREE.Vector3,this.rotation=new THREE.Vector3,this.eulerOrder="XYZ",this.scale=new THREE.Vector3(1,1,1),this.renderDepth=null,this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixRotationWorld=new THREE.Matrix4,this.matrixAutoUpdate=!0,this.matrixWorldNeedsUpdate=!0,this.quaternion=new THREE.Quaternion,this.useQuaternion=!1,this.boundRadius=0,this.boundRadiusScale=1,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this._vector=new THREE.Vector3},THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(matrix){this.matrix.multiply(matrix,this.matrix),this.scale.getScaleFromMatrix(this.matrix);var mat=(new THREE.Matrix4).extractRotation(this.matrix);this.rotation.setEulerFromRotationMatrix(mat,this.eulerOrder),this.position.getPositionFromMatrix(this.matrix)},translate:function(distance,axis){this.matrix.rotateAxis(axis),this.position.addSelf(axis.multiplyScalar(distance))},translateX:function(distance){this.translate(distance,this._vector.set(1,0,0))},translateY:function(distance){this.translate(distance,this._vector.set(0,1,0))},translateZ:function(distance){this.translate(distance,this._vector.set(0,0,1))},localToWorld:function(vector){return this.matrixWorld.multiplyVector3(vector)},worldToLocal:function(vector){return THREE.Object3D.__m1.getInverse(this.matrixWorld).multiplyVector3(vector)},lookAt:function(vector){this.matrix.lookAt(vector,this.position,this.up),this.rotationAutoUpdate&&this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)},add:function(object){if(object===this)return console.warn("THREE.Object3D.add: An object can't be added as a child of itself."),void 0;if(object instanceof THREE.Object3D){void 0!==object.parent&&object.parent.remove(object),object.parent=this,this.children.push(object);for(var scene=this;void 0!==scene.parent;)scene=scene.parent;void 0!==scene&&scene instanceof THREE.Scene&&scene.__addObject(object)}},remove:function(object){var index=this.children.indexOf(object);if(-1!==index){object.parent=void 0,this.children.splice(index,1);for(var scene=this;void 0!==scene.parent;)scene=scene.parent;void 0!==scene&&scene instanceof THREE.Scene&&scene.__removeObject(object)}},getChildByName:function(name,recursive){var c,cl,child;for(c=0,cl=this.children.length;cl>c;c++){if(child=this.children[c],child.name===name)return child;if(recursive&&(child=child.getChildByName(name,recursive),void 0!==child))return child}return void 0},getDescendants:function(array){void 0===array&&(array=[]),Array.prototype.push.apply(array,this.children);for(var i=0,l=this.children.length;l>i;i++)this.children[i].getDescendants(array);return array},updateMatrix:function(){this.matrix.setPosition(this.position),this.useQuaternion===!1?this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder):this.matrix.setRotationFromQuaternion(this.quaternion),(1!==this.scale.x||1!==this.scale.y||1!==this.scale.z)&&(this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z))),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(force){this.matrixAutoUpdate===!0&&this.updateMatrix(),(this.matrixWorldNeedsUpdate===!0||force===!0)&&(void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,force=!0);for(var i=0,l=this.children.length;l>i;i++)this.children[i].updateMatrixWorld(force)},clone:function(){}},THREE.Object3D.__m1=new THREE.Matrix4,THREE.Object3DCount=0,THREE.Projector=function(){function getNextObjectInPool(){if(_objectCount===_objectPoolLength){var object=new THREE.RenderableObject;return _objectPool.push(object),_objectPoolLength++,_objectCount++,object}return _objectPool[_objectCount++]}function getNextVertexInPool(){if(_vertexCount===_vertexPoolLength){var vertex=new THREE.RenderableVertex;return _vertexPool.push(vertex),_vertexPoolLength++,_vertexCount++,vertex}return _vertexPool[_vertexCount++]}function getNextFace3InPool(){if(_face3Count===_face3PoolLength){var face=new THREE.RenderableFace3;return _face3Pool.push(face),_face3PoolLength++,_face3Count++,face}return _face3Pool[_face3Count++]}function getNextFace4InPool(){if(_face4Count===_face4PoolLength){var face=new THREE.RenderableFace4;return _face4Pool.push(face),_face4PoolLength++,_face4Count++,face}return _face4Pool[_face4Count++]}function getNextLineInPool(){if(_lineCount===_linePoolLength){var line=new THREE.RenderableLine;return _linePool.push(line),_linePoolLength++,_lineCount++,line}return _linePool[_lineCount++]}function getNextParticleInPool(){if(_particleCount===_particlePoolLength){var particle=new THREE.RenderableParticle;return _particlePool.push(particle),_particlePoolLength++,_particleCount++,particle}return _particlePool[_particleCount++]}function painterSort(a,b){return b.z-a.z}function clipLine(s1,s2){var alpha1=0,alpha2=1,bc1near=s1.z+s1.w,bc2near=s2.z+s2.w,bc1far=-s1.z+s1.w,bc2far=-s2.z+s2.w;return bc1near>=0&&bc2near>=0&&bc1far>=0&&bc2far>=0?!0:0>bc1near&&0>bc2near||0>bc1far&&0>bc2far?!1:(0>bc1near?alpha1=Math.max(alpha1,bc1near/(bc1near-bc2near)):0>bc2near&&(alpha2=Math.min(alpha2,bc1near/(bc1near-bc2near))),0>bc1far?alpha1=Math.max(alpha1,bc1far/(bc1far-bc2far)):0>bc2far&&(alpha2=Math.min(alpha2,bc1far/(bc1far-bc2far))),alpha1>alpha2?!1:(s1.lerpSelf(s2,alpha1),s2.lerpSelf(s1,1-alpha2),!0))}var _object,_objectCount,_vertex,_vertexCount,_face,_face3Count,_face4Count,_line,_lineCount,_particle,_particleCount,_objectPool=[],_objectPoolLength=0,_vertexPool=[],_vertexPoolLength=0,_face3Pool=[],_face3PoolLength=0,_face4Pool=[],_face4PoolLength=0,_linePool=[],_linePoolLength=0,_particlePool=[],_particlePoolLength=0,_renderData={objects:[],sprites:[],lights:[],elements:[]},_vector3=new THREE.Vector3,_vector4=new THREE.Vector4,_viewProjectionMatrix=new THREE.Matrix4,_modelViewProjectionMatrix=new THREE.Matrix4,_frustum=new THREE.Frustum,_clippedVertex1PositionScreen=new THREE.Vector4,_clippedVertex2PositionScreen=new THREE.Vector4;this.projectVector=function(vector,camera){return camera.matrixWorldInverse.getInverse(camera.matrixWorld),_viewProjectionMatrix.multiply(camera.projectionMatrix,camera.matrixWorldInverse),_viewProjectionMatrix.multiplyVector3(vector),vector},this.unprojectVector=function(vector,camera){return camera.projectionMatrixInverse.getInverse(camera.projectionMatrix),_viewProjectionMatrix.multiply(camera.matrixWorld,camera.projectionMatrixInverse),_viewProjectionMatrix.multiplyVector3(vector),vector},this.pickingRay=function(vector,camera){var end;return vector.z=-1,end=new THREE.Vector3(vector.x,vector.y,1),this.unprojectVector(vector,camera),this.unprojectVector(end,camera),end.subSelf(vector).normalize(),new THREE.Ray(vector,end)};var projectGraph=function(root,sortObjects){_objectCount=0,_renderData.objects.length=0,_renderData.sprites.length=0,_renderData.lights.length=0;var projectObject=function(parent){for(var c=0,cl=parent.children.length;cl>c;c++){var object=parent.children[c];object.visible!==!1&&(object instanceof THREE.Light?_renderData.lights.push(object):object instanceof THREE.Mesh||object instanceof THREE.Line?(object.frustumCulled===!1||_frustum.contains(object)===!0)&&(_object=getNextObjectInPool(),_object.object=object,null!==object.renderDepth?_object.z=object.renderDepth:(_vector3.copy(object.matrixWorld.getPosition()),_viewProjectionMatrix.multiplyVector3(_vector3),_object.z=_vector3.z),_renderData.objects.push(_object)):object instanceof THREE.Sprite||object instanceof THREE.Particle?(_object=getNextObjectInPool(),_object.object=object,null!==object.renderDepth?_object.z=object.renderDepth:(_vector3.copy(object.matrixWorld.getPosition()),_viewProjectionMatrix.multiplyVector3(_vector3),_object.z=_vector3.z),_renderData.sprites.push(_object)):(_object=getNextObjectInPool(),_object.object=object,null!==object.renderDepth?_object.z=object.renderDepth:(_vector3.copy(object.matrixWorld.getPosition()),_viewProjectionMatrix.multiplyVector3(_vector3),_object.z=_vector3.z),_renderData.objects.push(_object)),projectObject(object))}};return projectObject(root),sortObjects===!0&&_renderData.objects.sort(painterSort),_renderData};this.projectScene=function(scene,camera,sortObjects,sortElements){var o,ol,v,vl,f,fl,n,nl,c,cl,u,ul,object,modelMatrix,rotationMatrix,geometry,geometryMaterials,vertices,faces,face,faceVertexNormals,normal,faceVertexUvs,uvs,v1,v2,v3,v4,isFaceMaterial,material,side,near=camera.near,far=camera.far,visible=!1;for(_face3Count=0,_face4Count=0,_lineCount=0,_particleCount=0,_renderData.elements.length=0,scene.updateMatrixWorld(),void 0===camera.parent&&camera.updateMatrixWorld(),camera.matrixWorldInverse.getInverse(camera.matrixWorld),_viewProjectionMatrix.multiply(camera.projectionMatrix,camera.matrixWorldInverse),_frustum.setFromMatrix(_viewProjectionMatrix),_renderData=projectGraph(scene,sortObjects),o=0,ol=_renderData.objects.length;ol>o;o++)if(object=_renderData.objects[o].object,modelMatrix=object.matrixWorld,_vertexCount=0,object instanceof THREE.Mesh){for(geometry=object.geometry,geometryMaterials=object.geometry.materials,vertices=geometry.vertices,faces=geometry.faces,faceVertexUvs=geometry.faceVertexUvs,rotationMatrix=object.matrixRotationWorld.extractRotation(modelMatrix),isFaceMaterial=object.material instanceof THREE.MeshFaceMaterial,side=object.material.side,v=0,vl=vertices.length;vl>v;v++)_vertex=getNextVertexInPool(),_vertex.positionWorld.copy(vertices[v]),modelMatrix.multiplyVector3(_vertex.positionWorld),_vertex.positionScreen.copy(_vertex.positionWorld),_viewProjectionMatrix.multiplyVector4(_vertex.positionScreen),_vertex.positionScreen.x/=_vertex.positionScreen.w,_vertex.positionScreen.y/=_vertex.positionScreen.w,_vertex.visible=_vertex.positionScreen.z>near&&far>_vertex.positionScreen.z;for(f=0,fl=faces.length;fl>f;f++)if(face=faces[f],material=isFaceMaterial===!0?geometryMaterials[face.materialIndex]:object.material,void 0!==material){if(side=material.side,face instanceof THREE.Face3){if(v1=_vertexPool[face.a],v2=_vertexPool[face.b],v3=_vertexPool[face.c],v1.visible!==!0||v2.visible!==!0||v3.visible!==!0)continue;if(visible=0>(v3.positionScreen.x-v1.positionScreen.x)*(v2.positionScreen.y-v1.positionScreen.y)-(v3.positionScreen.y-v1.positionScreen.y)*(v2.positionScreen.x-v1.positionScreen.x),side!==THREE.DoubleSide&&visible!==(side===THREE.FrontSide))continue;_face=getNextFace3InPool(),_face.v1.copy(v1),_face.v2.copy(v2),_face.v3.copy(v3)}else if(face instanceof THREE.Face4){if(v1=_vertexPool[face.a],v2=_vertexPool[face.b],v3=_vertexPool[face.c],v4=_vertexPool[face.d],v1.visible!==!0||v2.visible!==!0||v3.visible!==!0||v4.visible!==!0)continue;if(visible=0>(v4.positionScreen.x-v1.positionScreen.x)*(v2.positionScreen.y-v1.positionScreen.y)-(v4.positionScreen.y-v1.positionScreen.y)*(v2.positionScreen.x-v1.positionScreen.x)||0>(v2.positionScreen.x-v3.positionScreen.x)*(v4.positionScreen.y-v3.positionScreen.y)-(v2.positionScreen.y-v3.positionScreen.y)*(v4.positionScreen.x-v3.positionScreen.x),side!==THREE.DoubleSide&&visible!==(side===THREE.FrontSide))continue;_face=getNextFace4InPool(),_face.v1.copy(v1),_face.v2.copy(v2),_face.v3.copy(v3),_face.v4.copy(v4)}for(_face.normalWorld.copy(face.normal),visible!==!1||side!==THREE.BackSide&&side!==THREE.DoubleSide||_face.normalWorld.negate(),rotationMatrix.multiplyVector3(_face.normalWorld),_face.centroidWorld.copy(face.centroid),modelMatrix.multiplyVector3(_face.centroidWorld),_face.centroidScreen.copy(_face.centroidWorld),_viewProjectionMatrix.multiplyVector3(_face.centroidScreen),faceVertexNormals=face.vertexNormals,n=0,nl=faceVertexNormals.length;nl>n;n++)normal=_face.vertexNormalsWorld[n],normal.copy(faceVertexNormals[n]),visible!==!1||side!==THREE.BackSide&&side!==THREE.DoubleSide||normal.negate(),rotationMatrix.multiplyVector3(normal);for(_face.vertexNormalsLength=faceVertexNormals.length,c=0,cl=faceVertexUvs.length;cl>c;c++)if(uvs=faceVertexUvs[c][f],void 0!==uvs)for(u=0,ul=uvs.length;ul>u;u++)_face.uvs[c][u]=uvs[u];_face.material=material,_face.z=_face.centroidScreen.z,_renderData.elements.push(_face)}}else if(object instanceof THREE.Line){_modelViewProjectionMatrix.multiply(_viewProjectionMatrix,modelMatrix),vertices=object.geometry.vertices,v1=getNextVertexInPool(),v1.positionScreen.copy(vertices[0]),_modelViewProjectionMatrix.multiplyVector4(v1.positionScreen);var step=object.type===THREE.LinePieces?2:1;for(v=1,vl=vertices.length;vl>v;v++)v1=getNextVertexInPool(),v1.positionScreen.copy(vertices[v]),_modelViewProjectionMatrix.multiplyVector4(v1.positionScreen),(v+1)%step>0||(v2=_vertexPool[_vertexCount-2],_clippedVertex1PositionScreen.copy(v1.positionScreen),_clippedVertex2PositionScreen.copy(v2.positionScreen),clipLine(_clippedVertex1PositionScreen,_clippedVertex2PositionScreen)===!0&&(_clippedVertex1PositionScreen.multiplyScalar(1/_clippedVertex1PositionScreen.w),_clippedVertex2PositionScreen.multiplyScalar(1/_clippedVertex2PositionScreen.w),_line=getNextLineInPool(),_line.v1.positionScreen.copy(_clippedVertex1PositionScreen),_line.v2.positionScreen.copy(_clippedVertex2PositionScreen),_line.z=Math.max(_clippedVertex1PositionScreen.z,_clippedVertex2PositionScreen.z),_line.material=object.material,_renderData.elements.push(_line)))}for(o=0,ol=_renderData.sprites.length;ol>o;o++)object=_renderData.sprites[o].object,modelMatrix=object.matrixWorld,object instanceof THREE.Particle&&(_vector4.set(modelMatrix.elements[12],modelMatrix.elements[13],modelMatrix.elements[14],1),_viewProjectionMatrix.multiplyVector4(_vector4),_vector4.z/=_vector4.w,_vector4.z>0&&1>_vector4.z&&(_particle=getNextParticleInPool(),_particle.object=object,_particle.x=_vector4.x/_vector4.w,_particle.y=_vector4.y/_vector4.w,_particle.z=_vector4.z,_particle.rotation=object.rotation.z,_particle.scale.x=object.scale.x*Math.abs(_particle.x-(_vector4.x+camera.projectionMatrix.elements[0])/(_vector4.w+camera.projectionMatrix.elements[12])),_particle.scale.y=object.scale.y*Math.abs(_particle.y-(_vector4.y+camera.projectionMatrix.elements[5])/(_vector4.w+camera.projectionMatrix.elements[13])),_particle.material=object.material,_renderData.elements.push(_particle)));return sortElements===!0&&_renderData.elements.sort(painterSort),_renderData}},THREE.Quaternion=function(x,y,z,w){this.x=x||0,this.y=y||0,this.z=z||0,this.w=void 0!==w?w:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(x,y,z,w){return this.x=x,this.y=y,this.z=z,this.w=w,this},copy:function(q){return this.x=q.x,this.y=q.y,this.z=q.z,this.w=q.w,this},setFromEuler:function(v,order){var c1=Math.cos(v.x/2),c2=Math.cos(v.y/2),c3=Math.cos(v.z/2),s1=Math.sin(v.x/2),s2=Math.sin(v.y/2),s3=Math.sin(v.z/2);return void 0===order||"XYZ"===order?(this.x=s1*c2*c3+c1*s2*s3,this.y=c1*s2*c3-s1*c2*s3,this.z=c1*c2*s3+s1*s2*c3,this.w=c1*c2*c3-s1*s2*s3):"YXZ"===order?(this.x=s1*c2*c3+c1*s2*s3,this.y=c1*s2*c3-s1*c2*s3,this.z=c1*c2*s3-s1*s2*c3,this.w=c1*c2*c3+s1*s2*s3):"ZXY"===order?(this.x=s1*c2*c3-c1*s2*s3,this.y=c1*s2*c3+s1*c2*s3,this.z=c1*c2*s3+s1*s2*c3,this.w=c1*c2*c3-s1*s2*s3):"ZYX"===order?(this.x=s1*c2*c3-c1*s2*s3,this.y=c1*s2*c3+s1*c2*s3,this.z=c1*c2*s3-s1*s2*c3,this.w=c1*c2*c3+s1*s2*s3):"YZX"===order?(this.x=s1*c2*c3+c1*s2*s3,this.y=c1*s2*c3+s1*c2*s3,this.z=c1*c2*s3-s1*s2*c3,this.w=c1*c2*c3-s1*s2*s3):"XZY"===order&&(this.x=s1*c2*c3-c1*s2*s3,this.y=c1*s2*c3-s1*c2*s3,this.z=c1*c2*s3+s1*s2*c3,this.w=c1*c2*c3+s1*s2*s3),this},setFromAxisAngle:function(axis,angle){var halfAngle=angle/2,s=Math.sin(halfAngle);return this.x=axis.x*s,this.y=axis.y*s,this.z=axis.z*s,this.w=Math.cos(halfAngle),this},setFromRotationMatrix:function(m){var s,te=m.elements,m11=te[0],m12=te[4],m13=te[8],m21=te[1],m22=te[5],m23=te[9],m31=te[2],m32=te[6],m33=te[10],trace=m11+m22+m33;return trace>0?(s=.5/Math.sqrt(trace+1),this.w=.25/s,this.x=(m32-m23)*s,this.y=(m13-m31)*s,this.z=(m21-m12)*s):m11>m22&&m11>m33?(s=2*Math.sqrt(1+m11-m22-m33),this.w=(m32-m23)/s,this.x=.25*s,this.y=(m12+m21)/s,this.z=(m13+m31)/s):m22>m33?(s=2*Math.sqrt(1+m22-m11-m33),this.w=(m13-m31)/s,this.x=(m12+m21)/s,this.y=.25*s,this.z=(m23+m32)/s):(s=2*Math.sqrt(1+m33-m11-m22),this.w=(m21-m12)/s,this.x=(m13+m31)/s,this.y=(m23+m32)/s,this.z=.25*s),this},calculateW:function(){return this.w=-Math.sqrt(Math.abs(1-this.x*this.x-this.y*this.y-this.z*this.z)),this},inverse:function(){return this.x*=-1,this.y*=-1,this.z*=-1,this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var l=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return 0===l?(this.x=0,this.y=0,this.z=0,this.w=0):(l=1/l,this.x=this.x*l,this.y=this.y*l,this.z=this.z*l,this.w=this.w*l),this},multiply:function(a,b){var qax=a.x,qay=a.y,qaz=a.z,qaw=a.w,qbx=b.x,qby=b.y,qbz=b.z,qbw=b.w;return this.x=qax*qbw+qay*qbz-qaz*qby+qaw*qbx,this.y=-qax*qbz+qay*qbw+qaz*qbx+qaw*qby,this.z=qax*qby-qay*qbx+qaz*qbw+qaw*qbz,this.w=-qax*qbx-qay*qby-qaz*qbz+qaw*qbw,this},multiplySelf:function(b){var qax=this.x,qay=this.y,qaz=this.z,qaw=this.w,qbx=b.x,qby=b.y,qbz=b.z,qbw=b.w;return this.x=qax*qbw+qaw*qbx+qay*qbz-qaz*qby,this.y=qay*qbw+qaw*qby+qaz*qbx-qax*qbz,this.z=qaz*qbw+qaw*qbz+qax*qby-qay*qbx,this.w=qaw*qbw-qax*qbx-qay*qby-qaz*qbz,this},multiplyVector3:function(vector,dest){dest||(dest=vector);var x=vector.x,y=vector.y,z=vector.z,qx=this.x,qy=this.y,qz=this.z,qw=this.w,ix=qw*x+qy*z-qz*y,iy=qw*y+qz*x-qx*z,iz=qw*z+qx*y-qy*x,iw=-qx*x-qy*y-qz*z;return dest.x=ix*qw+iw*-qx+iy*-qz-iz*-qy,dest.y=iy*qw+iw*-qy+iz*-qx-ix*-qz,dest.z=iz*qw+iw*-qz+ix*-qy-iy*-qx,dest},slerpSelf:function(qb,t){var x=this.x,y=this.y,z=this.z,w=this.w,cosHalfTheta=w*qb.w+x*qb.x+y*qb.y+z*qb.z;if(0>cosHalfTheta?(this.w=-qb.w,this.x=-qb.x,this.y=-qb.y,this.z=-qb.z,cosHalfTheta=-cosHalfTheta):this.copy(qb),cosHalfTheta>=1)return this.w=w,this.x=x,this.y=y,this.z=z,this;var halfTheta=Math.acos(cosHalfTheta),sinHalfTheta=Math.sqrt(1-cosHalfTheta*cosHalfTheta);if(.001>Math.abs(sinHalfTheta))return this.w=.5*(w+this.w),this.x=.5*(x+this.x),this.y=.5*(y+this.y),this.z=.5*(z+this.z),this;var ratioA=Math.sin((1-t)*halfTheta)/sinHalfTheta,ratioB=Math.sin(t*halfTheta)/sinHalfTheta;return this.w=w*ratioA+this.w*ratioB,this.x=x*ratioA+this.x*ratioB,this.y=y*ratioA+this.y*ratioB,this.z=z*ratioA+this.z*ratioB,this},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)}},THREE.Quaternion.slerp=function(qa,qb,qm,t){var cosHalfTheta=qa.w*qb.w+qa.x*qb.x+qa.y*qb.y+qa.z*qb.z;if(0>cosHalfTheta?(qm.w=-qb.w,qm.x=-qb.x,qm.y=-qb.y,qm.z=-qb.z,cosHalfTheta=-cosHalfTheta):qm.copy(qb),Math.abs(cosHalfTheta)>=1)return qm.w=qa.w,qm.x=qa.x,qm.y=qa.y,qm.z=qa.z,qm;var halfTheta=Math.acos(cosHalfTheta),sinHalfTheta=Math.sqrt(1-cosHalfTheta*cosHalfTheta);if(.001>Math.abs(sinHalfTheta))return qm.w=.5*(qa.w+qm.w),qm.x=.5*(qa.x+qm.x),qm.y=.5*(qa.y+qm.y),qm.z=.5*(qa.z+qm.z),qm;var ratioA=Math.sin((1-t)*halfTheta)/sinHalfTheta,ratioB=Math.sin(t*halfTheta)/sinHalfTheta;return qm.w=qa.w*ratioA+qm.w*ratioB,qm.x=qa.x*ratioA+qm.x*ratioB,qm.y=qa.y*ratioA+qm.y*ratioB,qm.z=qa.z*ratioA+qm.z*ratioB,qm},function(THREE){THREE.Ray=function(origin,direction,near,far){this.origin=origin||new THREE.Vector3,this.direction=direction||new THREE.Vector3,this.near=near||0,this.far=far||1/0};var originCopy=new THREE.Vector3,localOriginCopy=new THREE.Vector3,localDirectionCopy=new THREE.Vector3,vector=new THREE.Vector3,normal=new THREE.Vector3,intersectPoint=new THREE.Vector3,inverseMatrix=new THREE.Matrix4,descSort=function(a,b){return a.distance-b.distance},v0=new THREE.Vector3,v1=new THREE.Vector3,v2=new THREE.Vector3,distanceFromIntersection=function(origin,direction,position){v0.sub(position,origin);var dot=v0.dot(direction),intersect=v1.add(origin,v2.copy(direction).multiplyScalar(dot)),distance=position.distanceTo(intersect);return distance},pointInFace3=function(p,a,b,c){v0.sub(c,a),v1.sub(b,a),v2.sub(p,a);var dot00=v0.dot(v0),dot01=v0.dot(v1),dot02=v0.dot(v2),dot11=v1.dot(v1),dot12=v1.dot(v2),invDenom=1/(dot00*dot11-dot01*dot01),u=(dot11*dot02-dot01*dot12)*invDenom,v=(dot00*dot12-dot01*dot02)*invDenom;return u>=0&&v>=0&&1>u+v},intersectObject=function(object,ray,intersects){var distance,intersect;if(object instanceof THREE.Particle){if(distance=distanceFromIntersection(ray.origin,ray.direction,object.matrixWorld.getPosition()),distance>object.scale.x)return intersects;intersect={distance:distance,point:object.position,face:null,object:object},intersects.push(intersect)}else if(object instanceof THREE.Mesh){var scaledRadius=object.geometry.boundingSphere.radius*object.matrixWorld.getMaxScaleOnAxis();if(distance=distanceFromIntersection(ray.origin,ray.direction,object.matrixWorld.getPosition()),distance>scaledRadius)return intersects;var f,fl,face,dot,scalar,objMatrix,geometryMaterials,isFaceMaterial,material,side,point,geometry=object.geometry,vertices=geometry.vertices;geometryMaterials=object.geometry.materials,isFaceMaterial=object.material instanceof THREE.MeshFaceMaterial,side=object.material.side;var a,b,c,d,precision=ray.precision;for(object.matrixRotationWorld.extractRotation(object.matrixWorld),originCopy.copy(ray.origin),objMatrix=object.matrixWorld,inverseMatrix.getInverse(objMatrix),localOriginCopy.copy(originCopy),inverseMatrix.multiplyVector3(localOriginCopy),localDirectionCopy.copy(ray.direction),inverseMatrix.rotateAxis(localDirectionCopy).normalize(),f=0,fl=geometry.faces.length;fl>f;f++)if(face=geometry.faces[f],material=isFaceMaterial===!0?geometryMaterials[face.materialIndex]:object.material,void 0!==material&&(side=material.side,vector.sub(face.centroid,localOriginCopy),normal=face.normal,dot=localDirectionCopy.dot(normal),!(precision>Math.abs(dot)||(scalar=normal.dot(vector)/dot,0>scalar||side!==THREE.DoubleSide&&!(side===THREE.FrontSide?0>dot:dot>0)))))if(intersectPoint.add(localOriginCopy,localDirectionCopy.multiplyScalar(scalar)),face instanceof THREE.Face3){if(a=vertices[face.a],b=vertices[face.b],c=vertices[face.c],pointInFace3(intersectPoint,a,b,c)){if(point=object.matrixWorld.multiplyVector3(intersectPoint.clone()),distance=originCopy.distanceTo(point),ray.near>distance||distance>ray.far)continue;intersect={distance:distance,point:point,face:face,faceIndex:f,object:object},intersects.push(intersect)}}else if(face instanceof THREE.Face4&&(a=vertices[face.a],b=vertices[face.b],c=vertices[face.c],d=vertices[face.d],pointInFace3(intersectPoint,a,b,d)||pointInFace3(intersectPoint,b,c,d))){if(point=object.matrixWorld.multiplyVector3(intersectPoint.clone()),distance=originCopy.distanceTo(point),ray.near>distance||distance>ray.far)continue;intersect={distance:distance,point:point,face:face,faceIndex:f,object:object},intersects.push(intersect)}}},intersectDescendants=function(object,ray,intersects){for(var descendants=object.getDescendants(),i=0,l=descendants.length;l>i;i++)intersectObject(descendants[i],ray,intersects)};THREE.Ray.prototype.precision=1e-4,THREE.Ray.prototype.set=function(origin,direction){this.origin=origin,this.direction=direction},THREE.Ray.prototype.intersectObject=function(object,recursive){var intersects=[];return recursive===!0&&intersectDescendants(object,this,intersects),intersectObject(object,this,intersects),intersects.sort(descSort),intersects},THREE.Ray.prototype.intersectObjects=function(objects,recursive){for(var intersects=[],i=0,l=objects.length;l>i;i++)intersectObject(objects[i],this,intersects),recursive===!0&&intersectDescendants(objects[i],this,intersects);return intersects.sort(descSort),intersects}}(THREE),THREE.Rectangle=function(){function resize(){_width=_right-_left,_height=_bottom-_top}var _left=0,_top=0,_right=0,_bottom=0,_width=0,_height=0,_isEmpty=!0;this.getX=function(){return _left},this.getY=function(){return _top},this.getWidth=function(){return _width},this.getHeight=function(){return _height},this.getLeft=function(){return _left},this.getTop=function(){return _top},this.getRight=function(){return _right},this.getBottom=function(){return _bottom},this.set=function(left,top,right,bottom){_isEmpty=!1,_left=left,_top=top,_right=right,_bottom=bottom,resize()},this.addPoint=function(x,y){_isEmpty===!0?(_isEmpty=!1,_left=x,_top=y,_right=x,_bottom=y,resize()):(_left=x>_left?_left:x,_top=y>_top?_top:y,_right=_right>x?_right:x,_bottom=_bottom>y?_bottom:y,resize())},this.add3Points=function(x1,y1,x2,y2,x3,y3){_isEmpty===!0?(_isEmpty=!1,_left=x2>x1?x3>x1?x1:x3:x3>x2?x2:x3,_top=y2>y1?y3>y1?y1:y3:y3>y2?y2:y3,_right=x1>x2?x1>x3?x1:x3:x2>x3?x2:x3,_bottom=y1>y2?y1>y3?y1:y3:y2>y3?y2:y3,resize()):(_left=x2>x1?x3>x1?_left>x1?x1:_left:_left>x3?x3:_left:x3>x2?_left>x2?x2:_left:_left>x3?x3:_left,_top=y2>y1?y3>y1?_top>y1?y1:_top:_top>y3?y3:_top:y3>y2?_top>y2?y2:_top:_top>y3?y3:_top,_right=x1>x2?x1>x3?x1>_right?x1:_right:x3>_right?x3:_right:x2>x3?x2>_right?x2:_right:x3>_right?x3:_right,_bottom=y1>y2?y1>y3?y1>_bottom?y1:_bottom:y3>_bottom?y3:_bottom:y2>y3?y2>_bottom?y2:_bottom:y3>_bottom?y3:_bottom,resize())},this.addRectangle=function(r){_isEmpty===!0?(_isEmpty=!1,_left=r.getLeft(),_top=r.getTop(),_right=r.getRight(),_bottom=r.getBottom(),resize()):(_left=r.getLeft()>_left?_left:r.getLeft(),_top=r.getTop()>_top?_top:r.getTop(),_right=_right>r.getRight()?_right:r.getRight(),_bottom=_bottom>r.getBottom()?_bottom:r.getBottom(),resize())},this.inflate=function(v){_left-=v,_top-=v,_right+=v,_bottom+=v,resize()},this.minSelf=function(r){_left=_left>r.getLeft()?_left:r.getLeft(),_top=_top>r.getTop()?_top:r.getTop(),_right=r.getRight()>_right?_right:r.getRight(),_bottom=r.getBottom()>_bottom?_bottom:r.getBottom(),resize()},this.intersects=function(r){return r.getLeft()>_right?!1:_left>r.getRight()?!1:r.getTop()>_bottom?!1:_top>r.getBottom()?!1:!0},this.empty=function(){_isEmpty=!0,_left=0,_top=0,_right=0,_bottom=0,resize()},this.isEmpty=function(){return _isEmpty}},THREE.Spline=function(points){function interpolate(p0,p1,p2,p3,t,t2,t3){var v0=.5*(p2-p0),v1=.5*(p3-p1);return(2*(p1-p2)+v0+v1)*t3+(-3*(p1-p2)-2*v0-v1)*t2+v0*t+p1}this.points=points;var point,intPoint,weight,w2,w3,pa,pb,pc,pd,c=[],v3={x:0,y:0,z:0};this.initFromArray=function(a){this.points=[];for(var i=0;a.length>i;i++)this.points[i]={x:a[i][0],y:a[i][1],z:a[i][2]}},this.getPoint=function(k){return point=(this.points.length-1)*k,intPoint=Math.floor(point),weight=point-intPoint,c[0]=0===intPoint?intPoint:intPoint-1,c[1]=intPoint,c[2]=intPoint>this.points.length-2?this.points.length-1:intPoint+1,c[3]=intPoint>this.points.length-3?this.points.length-1:intPoint+2,pa=this.points[c[0]],pb=this.points[c[1]],pc=this.points[c[2]],pd=this.points[c[3]],w2=weight*weight,w3=weight*w2,v3.x=interpolate(pa.x,pb.x,pc.x,pd.x,weight,w2,w3),v3.y=interpolate(pa.y,pb.y,pc.y,pd.y,weight,w2,w3),v3.z=interpolate(pa.z,pb.z,pc.z,pd.z,weight,w2,w3),v3},this.getControlPointsArray=function(){var i,p,l=this.points.length,coords=[];for(i=0;l>i;i++)p=this.points[i],coords[i]=[p.x,p.y,p.z];return coords},this.getLength=function(nSubDivisions){var i,index,nSamples,position,point=0,intPoint=0,oldIntPoint=0,oldPosition=new THREE.Vector3,tmpVec=new THREE.Vector3,chunkLengths=[],totalLength=0;for(chunkLengths[0]=0,nSubDivisions||(nSubDivisions=100),nSamples=this.points.length*nSubDivisions,oldPosition.copy(this.points[0]),i=1;nSamples>i;i++)index=i/nSamples,position=this.getPoint(index),tmpVec.copy(position),totalLength+=tmpVec.distanceTo(oldPosition),oldPosition.copy(position),point=(this.points.length-1)*index,intPoint=Math.floor(point),intPoint!=oldIntPoint&&(chunkLengths[intPoint]=totalLength,oldIntPoint=intPoint);return chunkLengths[chunkLengths.length]=totalLength,{chunks:chunkLengths,total:totalLength}},this.reparametrizeByArcLength=function(samplingCoef){var i,j,index,indexCurrent,indexNext,realDistance,sampling,position,newpoints=[],tmpVec=new THREE.Vector3,sl=this.getLength();for(newpoints.push(tmpVec.copy(this.points[0]).clone()),i=1;this.points.length>i;i++){for(realDistance=sl.chunks[i]-sl.chunks[i-1],sampling=Math.ceil(samplingCoef*realDistance/sl.total),indexCurrent=(i-1)/(this.points.length-1),indexNext=i/(this.points.length-1),j=1;sampling-1>j;j++)index=indexCurrent+j*(1/sampling)*(indexNext-indexCurrent),position=this.getPoint(index),newpoints.push(tmpVec.copy(position).clone());newpoints.push(tmpVec.copy(this.points[i]).clone())}this.points=newpoints}},THREE.UV=function(u,v){this.u=u||0,this.v=v||0},THREE.UV.prototype={constructor:THREE.UV,set:function(u,v){return this.u=u,this.v=v,this},copy:function(uv){return this.u=uv.u,this.v=uv.v,this},lerpSelf:function(uv,alpha){return this.u+=(uv.u-this.u)*alpha,this.v+=(uv.v-this.v)*alpha,this},clone:function(){return new THREE.UV(this.u,this.v)}},THREE.Geometry=function(){this.id=THREE.GeometryCount++,this.name="",this.vertices=[],this.colors=[],this.materials=[],this.faces=[],this.faceUvs=[[]],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.hasTangents=!1,this.dynamic=!0
},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(matrix){var matrixRotation=new THREE.Matrix4;matrixRotation.extractRotation(matrix);for(var i=0,il=this.vertices.length;il>i;i++){var vertex=this.vertices[i];matrix.multiplyVector3(vertex)}for(var i=0,il=this.faces.length;il>i;i++){var face=this.faces[i];matrixRotation.multiplyVector3(face.normal);for(var j=0,jl=face.vertexNormals.length;jl>j;j++)matrixRotation.multiplyVector3(face.vertexNormals[j]);matrix.multiplyVector3(face.centroid)}},computeCentroids:function(){var f,fl,face;for(f=0,fl=this.faces.length;fl>f;f++)face=this.faces[f],face.centroid.set(0,0,0),face instanceof THREE.Face3?(face.centroid.addSelf(this.vertices[face.a]),face.centroid.addSelf(this.vertices[face.b]),face.centroid.addSelf(this.vertices[face.c]),face.centroid.divideScalar(3)):face instanceof THREE.Face4&&(face.centroid.addSelf(this.vertices[face.a]),face.centroid.addSelf(this.vertices[face.b]),face.centroid.addSelf(this.vertices[face.c]),face.centroid.addSelf(this.vertices[face.d]),face.centroid.divideScalar(4))},computeFaceNormals:function(){var f,fl,face,vA,vB,vC,cb=new THREE.Vector3,ab=new THREE.Vector3;for(f=0,fl=this.faces.length;fl>f;f++)face=this.faces[f],vA=this.vertices[face.a],vB=this.vertices[face.b],vC=this.vertices[face.c],cb.sub(vC,vB),ab.sub(vA,vB),cb.crossSelf(ab),cb.isZero()||cb.normalize(),face.normal.copy(cb)},computeVertexNormals:function(){var v,vl,f,fl,face,vertices;if(void 0===this.__tmpVertices){for(this.__tmpVertices=Array(this.vertices.length),vertices=this.__tmpVertices,v=0,vl=this.vertices.length;vl>v;v++)vertices[v]=new THREE.Vector3;for(f=0,fl=this.faces.length;fl>f;f++)face=this.faces[f],face instanceof THREE.Face3?face.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]:face instanceof THREE.Face4&&(face.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}else for(vertices=this.__tmpVertices,v=0,vl=this.vertices.length;vl>v;v++)vertices[v].set(0,0,0);for(f=0,fl=this.faces.length;fl>f;f++)face=this.faces[f],face instanceof THREE.Face3?(vertices[face.a].addSelf(face.normal),vertices[face.b].addSelf(face.normal),vertices[face.c].addSelf(face.normal)):face instanceof THREE.Face4&&(vertices[face.a].addSelf(face.normal),vertices[face.b].addSelf(face.normal),vertices[face.c].addSelf(face.normal),vertices[face.d].addSelf(face.normal));for(v=0,vl=this.vertices.length;vl>v;v++)vertices[v].normalize();for(f=0,fl=this.faces.length;fl>f;f++)face=this.faces[f],face instanceof THREE.Face3?(face.vertexNormals[0].copy(vertices[face.a]),face.vertexNormals[1].copy(vertices[face.b]),face.vertexNormals[2].copy(vertices[face.c])):face instanceof THREE.Face4&&(face.vertexNormals[0].copy(vertices[face.a]),face.vertexNormals[1].copy(vertices[face.b]),face.vertexNormals[2].copy(vertices[face.c]),face.vertexNormals[3].copy(vertices[face.d]))},computeMorphNormals:function(){var i,il,f,fl,face;for(f=0,fl=this.faces.length;fl>f;f++)for(face=this.faces[f],face.__originalFaceNormal?face.__originalFaceNormal.copy(face.normal):face.__originalFaceNormal=face.normal.clone(),face.__originalVertexNormals||(face.__originalVertexNormals=[]),i=0,il=face.vertexNormals.length;il>i;i++)face.__originalVertexNormals[i]?face.__originalVertexNormals[i].copy(face.vertexNormals[i]):face.__originalVertexNormals[i]=face.vertexNormals[i].clone();var tmpGeo=new THREE.Geometry;for(tmpGeo.faces=this.faces,i=0,il=this.morphTargets.length;il>i;i++){if(!this.morphNormals[i]){this.morphNormals[i]={},this.morphNormals[i].faceNormals=[],this.morphNormals[i].vertexNormals=[];var faceNormal,vertexNormals,dstNormalsFace=this.morphNormals[i].faceNormals,dstNormalsVertex=this.morphNormals[i].vertexNormals;for(f=0,fl=this.faces.length;fl>f;f++)face=this.faces[f],faceNormal=new THREE.Vector3,vertexNormals=face instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},dstNormalsFace.push(faceNormal),dstNormalsVertex.push(vertexNormals)}var morphNormals=this.morphNormals[i];tmpGeo.vertices=this.morphTargets[i].vertices,tmpGeo.computeFaceNormals(),tmpGeo.computeVertexNormals();var faceNormal,vertexNormals;for(f=0,fl=this.faces.length;fl>f;f++)face=this.faces[f],faceNormal=morphNormals.faceNormals[f],vertexNormals=morphNormals.vertexNormals[f],faceNormal.copy(face.normal),face instanceof THREE.Face3?(vertexNormals.a.copy(face.vertexNormals[0]),vertexNormals.b.copy(face.vertexNormals[1]),vertexNormals.c.copy(face.vertexNormals[2])):(vertexNormals.a.copy(face.vertexNormals[0]),vertexNormals.b.copy(face.vertexNormals[1]),vertexNormals.c.copy(face.vertexNormals[2]),vertexNormals.d.copy(face.vertexNormals[3]))}for(f=0,fl=this.faces.length;fl>f;f++)face=this.faces[f],face.normal=face.__originalFaceNormal,face.vertexNormals=face.__originalVertexNormals},computeTangents:function(){function handleTriangle(context,a,b,c,ua,ub,uc){vA=context.vertices[a],vB=context.vertices[b],vC=context.vertices[c],uvA=uv[ua],uvB=uv[ub],uvC=uv[uc],x1=vB.x-vA.x,x2=vC.x-vA.x,y1=vB.y-vA.y,y2=vC.y-vA.y,z1=vB.z-vA.z,z2=vC.z-vA.z,s1=uvB.u-uvA.u,s2=uvC.u-uvA.u,t1=uvB.v-uvA.v,t2=uvC.v-uvA.v,r=1/(s1*t2-s2*t1),sdir.set((t2*x1-t1*x2)*r,(t2*y1-t1*y2)*r,(t2*z1-t1*z2)*r),tdir.set((s1*x2-s2*x1)*r,(s1*y2-s2*y1)*r,(s1*z2-s2*z1)*r),tan1[a].addSelf(sdir),tan1[b].addSelf(sdir),tan1[c].addSelf(sdir),tan2[a].addSelf(tdir),tan2[b].addSelf(tdir),tan2[c].addSelf(tdir)}var f,fl,v,vl,i,vertexIndex,face,uv,vA,vB,vC,uvA,uvB,uvC,x1,x2,y1,y2,z1,z2,s1,s2,t1,t2,r,t,test,w,tan1=[],tan2=[],sdir=new THREE.Vector3,tdir=new THREE.Vector3,tmp=new THREE.Vector3,tmp2=new THREE.Vector3,n=new THREE.Vector3;for(v=0,vl=this.vertices.length;vl>v;v++)tan1[v]=new THREE.Vector3,tan2[v]=new THREE.Vector3;for(f=0,fl=this.faces.length;fl>f;f++)face=this.faces[f],uv=this.faceVertexUvs[0][f],face instanceof THREE.Face3?handleTriangle(this,face.a,face.b,face.c,0,1,2):face instanceof THREE.Face4&&(handleTriangle(this,face.a,face.b,face.d,0,1,3),handleTriangle(this,face.b,face.c,face.d,1,2,3));var faceIndex=["a","b","c","d"];for(f=0,fl=this.faces.length;fl>f;f++)for(face=this.faces[f],i=0;face.vertexNormals.length>i;i++)n.copy(face.vertexNormals[i]),vertexIndex=face[faceIndex[i]],t=tan1[vertexIndex],tmp.copy(t),tmp.subSelf(n.multiplyScalar(n.dot(t))).normalize(),tmp2.cross(face.vertexNormals[i],t),test=tmp2.dot(tan2[vertexIndex]),w=0>test?-1:1,face.vertexTangents[i]=new THREE.Vector4(tmp.x,tmp.y,tmp.z,w);this.hasTangents=!0},computeBoundingBox:function(){if(this.boundingBox||(this.boundingBox={min:new THREE.Vector3,max:new THREE.Vector3}),this.vertices.length>0){var position,firstPosition=this.vertices[0];this.boundingBox.min.copy(firstPosition),this.boundingBox.max.copy(firstPosition);for(var min=this.boundingBox.min,max=this.boundingBox.max,v=1,vl=this.vertices.length;vl>v;v++)position=this.vertices[v],position.x<min.x?min.x=position.x:position.x>max.x&&(max.x=position.x),position.y<min.y?min.y=position.y:position.y>max.y&&(max.y=position.y),position.z<min.z?min.z=position.z:position.z>max.z&&(max.z=position.z)}else this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){var maxRadiusSq=0;null===this.boundingSphere&&(this.boundingSphere={radius:0});for(var i=0,l=this.vertices.length;l>i;i++){var radiusSq=this.vertices[i].lengthSq();radiusSq>maxRadiusSq&&(maxRadiusSq=radiusSq)}this.boundingSphere.radius=Math.sqrt(maxRadiusSq)},mergeVertices:function(){var v,key,i,il,face,o,k,j,jl,u,verticesMap={},unique=[],changes=[],precisionPoints=4,precision=Math.pow(10,precisionPoints),abcd="abcd";for(i=0,il=this.vertices.length;il>i;i++)v=this.vertices[i],key=[Math.round(v.x*precision),Math.round(v.y*precision),Math.round(v.z*precision)].join("_"),void 0===verticesMap[key]?(verticesMap[key]=i,unique.push(this.vertices[i]),changes[i]=unique.length-1):changes[i]=changes[verticesMap[key]];for(i=0,il=this.faces.length;il>i;i++)if(face=this.faces[i],face instanceof THREE.Face3)face.a=changes[face.a],face.b=changes[face.b],face.c=changes[face.c];else if(face instanceof THREE.Face4)for(face.a=changes[face.a],face.b=changes[face.b],face.c=changes[face.c],face.d=changes[face.d],o=[face.a,face.b,face.c,face.d],k=3;k>0;k--)if(o.indexOf(face[abcd[k]])!==k){for(o.splice(k,1),this.faces[i]=new THREE.Face3(o[0],o[1],o[2],face.normal,face.color,face.materialIndex),j=0,jl=this.faceVertexUvs.length;jl>j;j++)u=this.faceVertexUvs[j][i],u&&u.splice(k,1);this.faces[i].vertexColors=face.vertexColors;break}var diff=this.vertices.length-unique.length;return this.vertices=unique,diff},clone:function(){}},THREE.GeometryCount=0,THREE.BufferGeometry=function(){this.id=THREE.GeometryCount++,this.attributes={},this.dynamic=!1,this.boundingBox=null,this.boundingSphere=null,this.hasTangents=!1,this.morphTargets=[]},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(matrix){var positionArray,normalArray;if(this.attributes.position&&(positionArray=this.attributes.position.array),this.attributes.normal&&(normalArray=this.attributes.normal.array),void 0!==positionArray&&(matrix.multiplyVector3Array(positionArray),this.verticesNeedUpdate=!0),void 0!==normalArray){var matrixRotation=new THREE.Matrix4;matrixRotation.extractRotation(matrix),matrixRotation.multiplyVector3Array(normalArray),this.normalsNeedUpdate=!0}},computeBoundingBox:function(){this.boundingBox||(this.boundingBox={min:new THREE.Vector3(1/0,1/0,1/0),max:new THREE.Vector3(-1/0,-1/0,-1/0)});var positions=this.attributes.position.array;if(positions)for(var x,y,z,bb=this.boundingBox,i=0,il=positions.length;il>i;i+=3)x=positions[i],y=positions[i+1],z=positions[i+2],bb.min.x>x?bb.min.x=x:x>bb.max.x&&(bb.max.x=x),bb.min.y>y?bb.min.y=y:y>bb.max.y&&(bb.max.y=y),bb.min.z>z?bb.min.z=z:z>bb.max.z&&(bb.max.z=z);(void 0===positions||0===positions.length)&&(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0))},computeBoundingSphere:function(){this.boundingSphere||(this.boundingSphere={radius:0});var positions=this.attributes.position.array;if(positions){for(var radiusSq,x,y,z,maxRadiusSq=0,i=0,il=positions.length;il>i;i+=3)x=positions[i],y=positions[i+1],z=positions[i+2],radiusSq=x*x+y*y+z*z,radiusSq>maxRadiusSq&&(maxRadiusSq=radiusSq);this.boundingSphere.radius=Math.sqrt(maxRadiusSq)}},computeVertexNormals:function(){if(this.attributes.position&&this.attributes.index){var i,il,j,jl,nVertexElements=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(nVertexElements),numItems:nVertexElements};else for(i=0,il=this.attributes.normal.array.length;il>i;i++)this.attributes.normal.array[i]=0;var vA,vB,vC,x,y,z,offsets=this.offsets,indices=this.attributes.index.array,positions=this.attributes.position.array,normals=this.attributes.normal.array,pA=new THREE.Vector3,pB=new THREE.Vector3,pC=new THREE.Vector3,cb=new THREE.Vector3,ab=new THREE.Vector3;for(j=0,jl=offsets.length;jl>j;++j){var start=offsets[j].start,count=offsets[j].count,index=offsets[j].index;for(i=start,il=start+count;il>i;i+=3)vA=index+indices[i],vB=index+indices[i+1],vC=index+indices[i+2],x=positions[3*vA],y=positions[3*vA+1],z=positions[3*vA+2],pA.set(x,y,z),x=positions[3*vB],y=positions[3*vB+1],z=positions[3*vB+2],pB.set(x,y,z),x=positions[3*vC],y=positions[3*vC+1],z=positions[3*vC+2],pC.set(x,y,z),cb.sub(pC,pB),ab.sub(pA,pB),cb.crossSelf(ab),normals[3*vA]+=cb.x,normals[3*vA+1]+=cb.y,normals[3*vA+2]+=cb.z,normals[3*vB]+=cb.x,normals[3*vB+1]+=cb.y,normals[3*vB+2]+=cb.z,normals[3*vC]+=cb.x,normals[3*vC+1]+=cb.y,normals[3*vC+2]+=cb.z}for(i=0,il=normals.length;il>i;i+=3){x=normals[i],y=normals[i+1],z=normals[i+2];var n=1/Math.sqrt(x*x+y*y+z*z);normals[i]*=n,normals[i+1]*=n,normals[i+2]*=n}this.normalsNeedUpdate=!0}},computeTangents:function(){function handleTriangle(a,b,c){xA=positions[3*a],yA=positions[3*a+1],zA=positions[3*a+2],xB=positions[3*b],yB=positions[3*b+1],zB=positions[3*b+2],xC=positions[3*c],yC=positions[3*c+1],zC=positions[3*c+2],uA=uvs[2*a],vA=uvs[2*a+1],uB=uvs[2*b],vB=uvs[2*b+1],uC=uvs[2*c],vC=uvs[2*c+1],x1=xB-xA,x2=xC-xA,y1=yB-yA,y2=yC-yA,z1=zB-zA,z2=zC-zA,s1=uB-uA,s2=uC-uA,t1=vB-vA,t2=vC-vA,r=1/(s1*t2-s2*t1),sdir.set((t2*x1-t1*x2)*r,(t2*y1-t1*y2)*r,(t2*z1-t1*z2)*r),tdir.set((s1*x2-s2*x1)*r,(s1*y2-s2*y1)*r,(s1*z2-s2*z1)*r),tan1[a].addSelf(sdir),tan1[b].addSelf(sdir),tan1[c].addSelf(sdir),tan2[a].addSelf(tdir),tan2[b].addSelf(tdir),tan2[c].addSelf(tdir)}function handleVertex(v){n.x=normals[3*v],n.y=normals[3*v+1],n.z=normals[3*v+2],n2.copy(n),t=tan1[v],tmp.copy(t),tmp.subSelf(n.multiplyScalar(n.dot(t))).normalize(),tmp2.cross(n2,t),test=tmp2.dot(tan2[v]),w=0>test?-1:1,tangents[4*v]=tmp.x,tangents[4*v+1]=tmp.y,tangents[4*v+2]=tmp.z,tangents[4*v+3]=w}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)return console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()"),void 0;var indices=this.attributes.index.array,positions=this.attributes.position.array,normals=this.attributes.normal.array,uvs=this.attributes.uv.array,nVertices=positions.length/3;if(void 0===this.attributes.tangent){var nTangentElements=4*nVertices;this.attributes.tangent={itemSize:4,array:new Float32Array(nTangentElements),numItems:nTangentElements}}for(var tangents=this.attributes.tangent.array,tan1=[],tan2=[],k=0;nVertices>k;k++)tan1[k]=new THREE.Vector3,tan2[k]=new THREE.Vector3;var xA,yA,zA,xB,yB,zB,xC,yC,zC,uA,vA,uB,vB,uC,vC,x1,x2,y1,y2,z1,z2,s1,s2,t1,t2,r,i,il,j,jl,iA,iB,iC,sdir=new THREE.Vector3,tdir=new THREE.Vector3,offsets=this.offsets;for(j=0,jl=offsets.length;jl>j;++j){var start=offsets[j].start,count=offsets[j].count,index=offsets[j].index;for(i=start,il=start+count;il>i;i+=3)iA=index+indices[i],iB=index+indices[i+1],iC=index+indices[i+2],handleTriangle(iA,iB,iC)}var w,t,test,tmp=new THREE.Vector3,tmp2=new THREE.Vector3,n=new THREE.Vector3,n2=new THREE.Vector3;for(j=0,jl=offsets.length;jl>j;++j){var start=offsets[j].start,count=offsets[j].count,index=offsets[j].index;for(i=start,il=start+count;il>i;i+=3)iA=index+indices[i],iB=index+indices[i+1],iC=index+indices[i+2],handleVertex(iA),handleVertex(iB),handleVertex(iC)}this.hasTangents=!0,this.tangentsNeedUpdate=!0}},THREE.Camera=function(){THREE.Object3D.call(this),this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4,this.projectionMatrixInverse=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.lookAt=function(vector){this.matrix.lookAt(this.position,vector,this.up),this.rotationAutoUpdate===!0&&this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)},THREE.Light=function(hex){THREE.Object3D.call(this),this.color=new THREE.Color(hex)},THREE.Light.prototype=Object.create(THREE.Object3D.prototype),THREE.Loader=function(showStatus){this.showStatus=showStatus,this.statusDomElement=showStatus?THREE.Loader.prototype.addStatusElement():null,this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var e=document.createElement("div");return e.style.position="absolute",e.style.right="0px",e.style.top="0px",e.style.fontSize="0.8em",e.style.textAlign="left",e.style.background="rgba(0,0,0,0.25)",e.style.color="#fff",e.style.width="120px",e.style.padding="0.5em 0.5em 0.5em 0.5em",e.style.zIndex=1e3,e.innerHTML="Loading ...",e},updateProgress:function(progress){var message="Loaded ";message+=progress.total?(100*progress.loaded/progress.total).toFixed(0)+"%":(progress.loaded/1e3).toFixed(2)+" KB",this.statusDomElement.innerHTML=message},extractUrlBase:function(url){var parts=url.split("/");return parts.pop(),(1>parts.length?".":parts.join("/"))+"/"},initMaterials:function(scope,materials,texturePath){scope.materials=[];for(var i=0;materials.length>i;++i)scope.materials[i]=THREE.Loader.prototype.createMaterial(materials[i],texturePath)},hasNormals:function(scope){var m,i,il=scope.materials.length;for(i=0;il>i;i++)if(m=scope.materials[i],m instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(m,texturePath){function is_pow2(n){var l=Math.log(n)/Math.LN2;return Math.floor(l)==l}function nearest_pow2(n){var l=Math.log(n)/Math.LN2;return Math.pow(2,Math.round(l))}function load_image(where,url){var image=new Image;image.onload=function(){if(is_pow2(this.width)&&is_pow2(this.height))where.image=this;else{var width=nearest_pow2(this.width),height=nearest_pow2(this.height);where.image.width=width,where.image.height=height,where.image.getContext("2d").drawImage(this,0,0,width,height)}where.needsUpdate=!0},image.crossOrigin=_this.crossOrigin,image.src=url}function create_texture(where,name,sourceFile,repeat,offset,wrap,anisotropy){var isCompressed=sourceFile.toLowerCase().endsWith(".dds"),fullPath=texturePath+"/"+sourceFile;if(isCompressed){var texture=THREE.ImageUtils.loadCompressedTexture(fullPath);where[name]=texture}else{var texture=document.createElement("canvas");where[name]=new THREE.Texture(texture)}if(where[name].sourceFile=sourceFile,repeat&&(where[name].repeat.set(repeat[0],repeat[1]),1!==repeat[0]&&(where[name].wrapS=THREE.RepeatWrapping),1!==repeat[1]&&(where[name].wrapT=THREE.RepeatWrapping)),offset&&where[name].offset.set(offset[0],offset[1]),wrap){var wrapMap={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};void 0!==wrapMap[wrap[0]]&&(where[name].wrapS=wrapMap[wrap[0]]),void 0!==wrapMap[wrap[1]]&&(where[name].wrapT=wrapMap[wrap[1]])}anisotropy&&(where[name].anisotropy=anisotropy),isCompressed||load_image(where[name],fullPath)}function rgb2hex(rgb){return(255*rgb[0]<<16)+(255*rgb[1]<<8)+255*rgb[2]}var _this=this,mtype="MeshLambertMaterial",mpars={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(m.shading){var shading=m.shading.toLowerCase();"phong"===shading?mtype="MeshPhongMaterial":"basic"===shading&&(mtype="MeshBasicMaterial")}if(void 0!==m.blending&&void 0!==THREE[m.blending]&&(mpars.blending=THREE[m.blending]),(void 0!==m.transparent||1>m.opacity)&&(mpars.transparent=m.transparent),void 0!==m.depthTest&&(mpars.depthTest=m.depthTest),void 0!==m.depthWrite&&(mpars.depthWrite=m.depthWrite),void 0!==m.visible&&(mpars.visible=m.visible),void 0!==m.flipSided&&(mpars.side=THREE.BackSide),void 0!==m.doubleSided&&(mpars.side=THREE.DoubleSide),void 0!==m.wireframe&&(mpars.wireframe=m.wireframe),void 0!==m.vertexColors&&("face"===m.vertexColors?mpars.vertexColors=THREE.FaceColors:m.vertexColors&&(mpars.vertexColors=THREE.VertexColors)),m.colorDiffuse?mpars.color=rgb2hex(m.colorDiffuse):m.DbgColor&&(mpars.color=m.DbgColor),m.colorSpecular&&(mpars.specular=rgb2hex(m.colorSpecular)),m.colorAmbient&&(mpars.ambient=rgb2hex(m.colorAmbient)),m.transparency&&(mpars.opacity=m.transparency),m.specularCoef&&(mpars.shininess=m.specularCoef),m.mapDiffuse&&texturePath&&create_texture(mpars,"map",m.mapDiffuse,m.mapDiffuseRepeat,m.mapDiffuseOffset,m.mapDiffuseWrap,m.mapDiffuseAnisotropy),m.mapLight&&texturePath&&create_texture(mpars,"lightMap",m.mapLight,m.mapLightRepeat,m.mapLightOffset,m.mapLightWrap,m.mapLightAnisotropy),m.mapBump&&texturePath&&create_texture(mpars,"bumpMap",m.mapBump,m.mapBumpRepeat,m.mapBumpOffset,m.mapBumpWrap,m.mapBumpAnisotropy),m.mapNormal&&texturePath&&create_texture(mpars,"normalMap",m.mapNormal,m.mapNormalRepeat,m.mapNormalOffset,m.mapNormalWrap,m.mapNormalAnisotropy),m.mapSpecular&&texturePath&&create_texture(mpars,"specularMap",m.mapSpecular,m.mapSpecularRepeat,m.mapSpecularOffset,m.mapSpecularWrap,m.mapSpecularAnisotropy),m.mapBumpScale&&(mpars.bumpScale=m.mapBumpScale),m.mapNormal){var shader=THREE.ShaderUtils.lib.normal,uniforms=THREE.UniformsUtils.clone(shader.uniforms);uniforms.tNormal.value=mpars.normalMap,m.mapNormalFactor&&uniforms.uNormalScale.value.set(m.mapNormalFactor,m.mapNormalFactor),mpars.map&&(uniforms.tDiffuse.value=mpars.map,uniforms.enableDiffuse.value=!0),mpars.specularMap&&(uniforms.tSpecular.value=mpars.specularMap,uniforms.enableSpecular.value=!0),mpars.lightMap&&(uniforms.tAO.value=mpars.lightMap,uniforms.enableAO.value=!0),uniforms.uDiffuseColor.value.setHex(mpars.color),uniforms.uSpecularColor.value.setHex(mpars.specular),uniforms.uAmbientColor.value.setHex(mpars.ambient),uniforms.uShininess.value=mpars.shininess,void 0!==mpars.opacity&&(uniforms.uOpacity.value=mpars.opacity);var parameters={fragmentShader:shader.fragmentShader,vertexShader:shader.vertexShader,uniforms:uniforms,lights:!0,fog:!0},material=new THREE.ShaderMaterial(parameters)}else var material=new THREE[mtype](mpars);return void 0!==m.DbgName&&(material.name=m.DbgName),material}},THREE.Texture=function(image,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy){this.id=THREE.TextureCount++,this.image=image,this.mapping=void 0!==mapping?mapping:new THREE.UVMapping,this.wrapS=void 0!==wrapS?wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==wrapT?wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==magFilter?magFilter:THREE.LinearFilter,this.minFilter=void 0!==minFilter?minFilter:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==anisotropy?anisotropy:1,this.format=void 0!==format?format:THREE.RGBAFormat,this.type=void 0!==type?type:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.needsUpdate=!1,this.onUpdate=null},THREE.Texture.prototype={constructor:THREE.Texture,clone:function(){var texture=new THREE.Texture;return texture.image=this.image,texture.mapping=this.mapping,texture.wrapS=this.wrapS,texture.wrapT=this.wrapT,texture.magFilter=this.magFilter,texture.minFilter=this.minFilter,texture.anisotropy=this.anisotropy,texture.format=this.format,texture.type=this.type,texture.offset.copy(this.offset),texture.repeat.copy(this.repeat),texture.generateMipmaps=this.generateMipmaps,texture.premultiplyAlpha=this.premultiplyAlpha,texture.flipY=this.flipY,texture}},THREE.TextureCount=0,THREE.Material=function(){this.id=THREE.MaterialCount++,this.name="",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.depthTest=!0,this.depthWrite=!0,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.alphaTest=0,this.overdraw=!1,this.visible=!0,this.needsUpdate=!0},THREE.Material.prototype.setValues=function(values){if(void 0!==values)for(var key in values){var newValue=values[key];if(void 0!==newValue){if(key in this){var currentValue=this[key];currentValue instanceof THREE.Color&&newValue instanceof THREE.Color?currentValue.copy(newValue):currentValue instanceof THREE.Color&&"number"==typeof newValue?currentValue.setHex(newValue):currentValue instanceof THREE.Vector3&&newValue instanceof THREE.Vector3?currentValue.copy(newValue):this[key]=newValue}}else console.warn("THREE.Material: '"+key+"' parameter is undefined.")}},THREE.Material.prototype.clone=function(material){return void 0===material&&(material=new THREE.Material),material.name=this.name,material.side=this.side,material.opacity=this.opacity,material.transparent=this.transparent,material.blending=this.blending,material.blendSrc=this.blendSrc,material.blendDst=this.blendDst,material.blendEquation=this.blendEquation,material.depthTest=this.depthTest,material.depthWrite=this.depthWrite,material.polygonOffset=this.polygonOffset,material.polygonOffsetFactor=this.polygonOffsetFactor,material.polygonOffsetUnits=this.polygonOffsetUnits,material.alphaTest=this.alphaTest,material.overdraw=this.overdraw,material.visible=this.visible,material},THREE.MaterialCount=0,THREE.Mesh=function(geometry,material){if(THREE.Object3D.call(this),this.geometry=geometry,this.material=void 0!==material?material:new THREE.MeshBasicMaterial({color:16777215*Math.random(),wireframe:!0}),this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=geometry.boundingSphere.radius,this.geometry.morphTargets.length)){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var m=0;this.geometry.morphTargets.length>m;m++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[m].name]=m}},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.getMorphTargetIndexByName=function(name){return void 0!==this.morphTargetDictionary[name]?this.morphTargetDictionary[name]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+name+" does not exist. Returning 0."),0)},THREE.AmbientLight=function(hex){THREE.Light.call(this,hex)},THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight=function(hex,intensity,distance){THREE.Light.call(this,hex),this.position=new THREE.Vector3(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==intensity?intensity:1,this.distance=void 0!==distance?distance:0,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraRight=500,this.shadowCameraTop=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype),THREE.HemisphereLight=function(skyColorHex,groundColorHex,intensity){THREE.Light.call(this,skyColorHex),this.groundColor=new THREE.Color(groundColorHex),this.position=new THREE.Vector3(0,100,0),this.intensity=void 0!==intensity?intensity:1},THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype),THREE.PointLight=function(hex,intensity,distance){THREE.Light.call(this,hex),this.position=new THREE.Vector3(0,0,0),this.intensity=void 0!==intensity?intensity:1,this.distance=void 0!==distance?distance:0},THREE.PointLight.prototype=Object.create(THREE.Light.prototype),THREE.SpotLight=function(hex,intensity,distance,angle,exponent){THREE.Light.call(this,hex),this.position=new THREE.Vector3(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==intensity?intensity:1,this.distance=void 0!==distance?distance:0,this.angle=void 0!==angle?angle:Math.PI/2,this.exponent=void 0!==exponent?exponent:10,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},THREE.SpotLight.prototype=Object.create(THREE.Light.prototype),THREE.ImageLoader=function(){THREE.EventTarget.call(this),this.crossOrigin=null},THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(url,image){var scope=this;void 0===image&&(image=new Image),image.addEventListener("load",function(){scope.dispatchEvent({type:"load",content:image})},!1),image.addEventListener("error",function(){scope.dispatchEvent({type:"error",message:"Couldn't load URL ["+url+"]"})},!1),scope.crossOrigin&&(image.crossOrigin=scope.crossOrigin),image.src=url}},THREE.PerspectiveCamera=function(fov,aspect,near,far){THREE.Camera.call(this),this.fov=void 0!==fov?fov:50,this.aspect=void 0!==aspect?aspect:1,this.near=void 0!==near?near:.1,this.far=void 0!==far?far:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.setLens=function(focalLength,frameHeight){void 0===frameHeight&&(frameHeight=24),this.fov=2*Math.atan(frameHeight/(2*focalLength))*(180/Math.PI),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(fullWidth,fullHeight,x,y,width,height){this.fullWidth=fullWidth,this.fullHeight=fullHeight,this.x=x,this.y=y,this.width=width,this.height=height,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var aspect=this.fullWidth/this.fullHeight,top=Math.tan(this.fov*Math.PI/360)*this.near,bottom=-top,left=aspect*bottom,right=aspect*top,width=Math.abs(right-left),height=Math.abs(top-bottom);this.projectionMatrix.makeFrustum(left+this.x*width/this.fullWidth,left+(this.x+this.width)*width/this.fullWidth,top-(this.y+this.height)*height/this.fullHeight,top-this.y*height/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)},THREE.OrthographicCamera=function(left,right,top,bottom,near,far){THREE.Camera.call(this),this.left=left,this.right=right,this.top=top,this.bottom=bottom,this.near=void 0!==near?near:.1,this.far=void 0!==far?far:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype),THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)},THREE.MeshBasicMaterial=function(parameters){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.lightMap=null,this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.setValues(parameters)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.clone=function(){var material=new THREE.MeshBasicMaterial;return THREE.Material.prototype.clone.call(this,material),material.color.copy(this.color),material.map=this.map,material.lightMap=this.lightMap,material.specularMap=this.specularMap,material.envMap=this.envMap,material.combine=this.combine,material.reflectivity=this.reflectivity,material.refractionRatio=this.refractionRatio,material.fog=this.fog,material.shading=this.shading,material.wireframe=this.wireframe,material.wireframeLinewidth=this.wireframeLinewidth,material.wireframeLinecap=this.wireframeLinecap,material.wireframeLinejoin=this.wireframeLinejoin,material.vertexColors=this.vertexColors,material.skinning=this.skinning,material.morphTargets=this.morphTargets,material},THREE.MeshDepthMaterial=function(parameters){THREE.Material.call(this),this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(parameters)},THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.clone=function(){var material=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,material),material.wireframe=this.wireframe,material.wireframeLinewidth=this.wireframeLinewidth,material},THREE.MeshFaceMaterial=function(){},THREE.MeshFaceMaterial.prototype.clone=function(){return new THREE.MeshFaceMaterial},THREE.MeshLambertMaterial=function(parameters){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(parameters)
},THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.clone=function(){var material=new THREE.MeshLambertMaterial;return THREE.Material.prototype.clone.call(this,material),material.color.copy(this.color),material.ambient.copy(this.ambient),material.emissive.copy(this.emissive),material.wrapAround=this.wrapAround,material.wrapRGB.copy(this.wrapRGB),material.map=this.map,material.lightMap=this.lightMap,material.specularMap=this.specularMap,material.envMap=this.envMap,material.combine=this.combine,material.reflectivity=this.reflectivity,material.refractionRatio=this.refractionRatio,material.fog=this.fog,material.shading=this.shading,material.wireframe=this.wireframe,material.wireframeLinewidth=this.wireframeLinewidth,material.wireframeLinecap=this.wireframeLinecap,material.wireframeLinejoin=this.wireframeLinejoin,material.vertexColors=this.vertexColors,material.skinning=this.skinning,material.morphTargets=this.morphTargets,material.morphNormals=this.morphNormals,material},THREE.MeshNormalMaterial=function(parameters){THREE.Material.call(this,parameters),this.shading=THREE.FlatShading,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(parameters)},THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.clone=function(){var material=new THREE.MeshNormalMaterial;return THREE.Material.prototype.clone.call(this,material),material.shading=this.shading,material.wireframe=this.wireframe,material.wireframeLinewidth=this.wireframeLinewidth,material},THREE.MeshPhongMaterial=function(parameters){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.specular=new THREE.Color(1118481),this.shininess=30,this.metal=!1,this.perPixel=!1,this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(parameters)},THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.clone=function(){var material=new THREE.MeshPhongMaterial;return THREE.Material.prototype.clone.call(this,material),material.color.copy(this.color),material.ambient.copy(this.ambient),material.emissive.copy(this.emissive),material.specular.copy(this.specular),material.shininess=this.shininess,material.metal=this.metal,material.perPixel=this.perPixel,material.wrapAround=this.wrapAround,material.wrapRGB.copy(this.wrapRGB),material.map=this.map,material.lightMap=this.lightMap,material.bumpMap=this.bumpMap,material.bumpScale=this.bumpScale,material.normalMap=this.normalMap,material.normalScale.copy(this.normalScale),material.specularMap=this.specularMap,material.envMap=this.envMap,material.combine=this.combine,material.reflectivity=this.reflectivity,material.refractionRatio=this.refractionRatio,material.fog=this.fog,material.shading=this.shading,material.wireframe=this.wireframe,material.wireframeLinewidth=this.wireframeLinewidth,material.wireframeLinecap=this.wireframeLinecap,material.wireframeLinejoin=this.wireframeLinejoin,material.vertexColors=this.vertexColors,material.skinning=this.skinning,material.morphTargets=this.morphTargets,material.morphNormals=this.morphNormals,material},THREE.ParticleBasicMaterial=function(parameters){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=!1,this.fog=!0,this.setValues(parameters)},THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ParticleBasicMaterial.prototype.clone=function(){var material=new THREE.ParticleBasicMaterial;return THREE.Material.prototype.clone.call(this,material),material.color.copy(this.color),material.map=this.map,material.size=this.size,material.sizeAttenuation=this.sizeAttenuation,material.vertexColors=this.vertexColors,material.fog=this.fog,material},THREE.ShaderMaterial=function(parameters){THREE.Material.call(this),this.fragmentShader="void main() {}",this.vertexShader="void main() {}",this.uniforms={},this.attributes=null,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(parameters)},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.clone=function(){var material=new THREE.ShaderMaterial;return THREE.Material.prototype.clone.call(this,material),material.fragmentShader=this.fragmentShader,material.vertexShader=this.vertexShader,material.uniforms=this.uniforms,material.attributes=this.attributes,material.shading=this.shading,material.wireframe=this.wireframe,material.wireframeLinewidth=this.wireframeLinewidth,material.fog=this.fog,material.lights=this.lights,material.vertexColors=this.vertexColors,material.skinning=this.skinning,material.morphTargets=this.morphTargets,material.morphNormals=this.morphNormals,material},THREE.LineBasicMaterial=function(parameters){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.vertexColors=!1,this.fog=!0,this.setValues(parameters)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.clone=function(){var material=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,material),material.color.copy(this.color),material.linewidth=this.linewidth,material.linecap=this.linecap,material.linejoin=this.linejoin,material.vertexColors=this.vertexColors,material.fog=this.fog,material},THREE.Bone=function(belongsToSkin){THREE.Object3D.call(this),this.skin=belongsToSkin,this.skinMatrix=new THREE.Matrix4},THREE.Bone.prototype=Object.create(THREE.Object3D.prototype),THREE.Bone.prototype.update=function(parentSkinMatrix,forceUpdate){this.matrixAutoUpdate&&(forceUpdate|=this.updateMatrix()),(forceUpdate||this.matrixWorldNeedsUpdate)&&(parentSkinMatrix?this.skinMatrix.multiply(parentSkinMatrix,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,forceUpdate=!0);var i,l=this.children.length;for(i=0;l>i;i++)this.children[i].update(this.skinMatrix,forceUpdate)},THREE.Line=function(geometry,material,type){THREE.Object3D.call(this),this.geometry=geometry,this.material=void 0!==material?material:new THREE.LineBasicMaterial({color:16777215*Math.random()}),this.type=void 0!==type?type:THREE.LineStrip,this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.LOD=function(){THREE.Object3D.call(this),this.LODs=[]},THREE.LOD.prototype=Object.create(THREE.Object3D.prototype),THREE.LOD.prototype.addLevel=function(object3D,visibleAtDistance){void 0===visibleAtDistance&&(visibleAtDistance=0),visibleAtDistance=Math.abs(visibleAtDistance);for(var l=0;this.LODs.length>l&&!(this.LODs[l].visibleAtDistance>visibleAtDistance);l++);this.LODs.splice(l,0,{visibleAtDistance:visibleAtDistance,object3D:object3D}),this.add(object3D)},THREE.LOD.prototype.update=function(camera){if(this.LODs.length>1){camera.matrixWorldInverse.getInverse(camera.matrixWorld);var inverse=camera.matrixWorldInverse,distance=-(inverse.elements[2]*this.matrixWorld.elements[12]+inverse.elements[6]*this.matrixWorld.elements[13]+inverse.elements[10]*this.matrixWorld.elements[14]+inverse.elements[14]);this.LODs[0].object3D.visible=!0;for(var l=1;this.LODs.length>l&&distance>=this.LODs[l].visibleAtDistance;l++)this.LODs[l-1].object3D.visible=!1,this.LODs[l].object3D.visible=!0;for(;this.LODs.length>l;l++)this.LODs[l].object3D.visible=!1}},THREE.MorphAnimMesh=function(geometry,material){THREE.Mesh.call(this,geometry,material),this.duration=1e3,this.mirroredLoop=!1,this.time=0,this.lastKeyframe=0,this.currentKeyframe=0,this.direction=1,this.directionBackwards=!1,this.setFrameRange(0,this.geometry.morphTargets.length-1)},THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphAnimMesh.prototype.setFrameRange=function(start,end){this.startKeyframe=start,this.endKeyframe=end,this.length=this.endKeyframe-this.startKeyframe+1},THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1,this.directionBackwards=!1},THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1,this.directionBackwards=!0},THREE.MorphAnimMesh.prototype.parseAnimations=function(){var geometry=this.geometry;geometry.animations||(geometry.animations={});for(var firstAnimation,animations=geometry.animations,pattern=/([a-z]+)(\d+)/,i=0,il=geometry.morphTargets.length;il>i;i++){var morph=geometry.morphTargets[i],parts=morph.name.match(pattern);if(parts&&parts.length>1){var label=parts[1];parts[2],animations[label]||(animations[label]={start:1/0,end:-1/0});var animation=animations[label];animation.start>i&&(animation.start=i),i>animation.end&&(animation.end=i),firstAnimation||(firstAnimation=label)}}geometry.firstAnimation=firstAnimation},THREE.MorphAnimMesh.prototype.setAnimationLabel=function(label,start,end){this.geometry.animations||(this.geometry.animations={}),this.geometry.animations[label]={start:start,end:end}},THREE.MorphAnimMesh.prototype.playAnimation=function(label,fps){var animation=this.geometry.animations[label];animation?(this.setFrameRange(animation.start,animation.end),this.duration=1e3*((animation.end-animation.start)/fps),this.time=0):console.warn("animation["+label+"] undefined")},THREE.MorphAnimMesh.prototype.updateAnimation=function(delta){var frameTime=this.duration/this.length;this.time+=this.direction*delta,this.mirroredLoop?(this.time>this.duration||0>this.time)&&(this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)):(this.time=this.time%this.duration,0>this.time&&(this.time+=this.duration));var keyframe=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/frameTime),0,this.length-1);keyframe!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[keyframe]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=keyframe);var mix=this.time%frameTime/frameTime;this.directionBackwards&&(mix=1-mix),this.morphTargetInfluences[this.currentKeyframe]=mix,this.morphTargetInfluences[this.lastKeyframe]=1-mix},THREE.Particle=function(material){THREE.Object3D.call(this),this.material=material},THREE.Particle.prototype=Object.create(THREE.Object3D.prototype),THREE.ParticleSystem=function(geometry,material){THREE.Object3D.call(this),this.geometry=geometry,this.material=void 0!==material?material:new THREE.ParticleBasicMaterial({color:16777215*Math.random()}),this.sortParticles=!1,this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=geometry.boundingSphere.radius),this.frustumCulled=!1},THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype),THREE.Ribbon=function(geometry,material){THREE.Object3D.call(this),this.geometry=geometry,this.material=material},THREE.Ribbon.prototype=Object.create(THREE.Object3D.prototype),THREE.SkinnedMesh=function(geometry,material,useVertexTexture){THREE.Mesh.call(this,geometry,material),this.useVertexTexture=void 0!==useVertexTexture?useVertexTexture:!0,this.identityMatrix=new THREE.Matrix4,this.bones=[],this.boneMatrices=[];var b,bone,gbone,p,q,s;if(void 0!==this.geometry.bones){for(b=0;this.geometry.bones.length>b;b++)gbone=this.geometry.bones[b],p=gbone.pos,q=gbone.rotq,s=gbone.scl,bone=this.addBone(),bone.name=gbone.name,bone.position.set(p[0],p[1],p[2]),bone.quaternion.set(q[0],q[1],q[2],q[3]),bone.useQuaternion=!0,void 0!==s?bone.scale.set(s[0],s[1],s[2]):bone.scale.set(1,1,1);for(b=0;this.bones.length>b;b++)gbone=this.geometry.bones[b],bone=this.bones[b],-1===gbone.parent?this.add(bone):this.bones[gbone.parent].add(bone);var nBones=this.bones.length;if(this.useVertexTexture){var size;size=nBones>256?64:nBones>64?32:nBones>16?16:8,this.boneTextureWidth=size,this.boneTextureHeight=size,this.boneMatrices=new Float32Array(4*this.boneTextureWidth*this.boneTextureHeight),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1}else this.boneMatrices=new Float32Array(16*nBones);this.pose()}},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.addBone=function(bone){return void 0===bone&&(bone=new THREE.Bone(this)),this.bones.push(bone),bone},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(force){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||force)&&(this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,force=!0);for(var i=0,l=this.children.length;l>i;i++){var child=this.children[i];child instanceof THREE.Bone?child.update(this.identityMatrix,!1):child.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=[];for(var b=0,bl=this.bones.length;bl>b;b++){var inverse=new THREE.Matrix4;inverse.getInverse(this.bones[b].skinMatrix),this.boneInverses.push(inverse)}}for(var b=0,bl=this.bones.length;bl>b;b++)THREE.SkinnedMesh.offsetMatrix.multiply(this.bones[b].skinMatrix,this.boneInverses[b]),THREE.SkinnedMesh.offsetMatrix.flattenToArrayOffset(this.boneMatrices,16*b);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)},THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var i=0;this.geometry.skinIndices.length>i;i++){var sw=this.geometry.skinWeights[i],scale=1/sw.lengthManhattan();1/0!==scale?sw.multiplyScalar(scale):sw.set(1)}},THREE.SkinnedMesh.offsetMatrix=new THREE.Matrix4,THREE.Sprite=function(parameters){THREE.Object3D.call(this),this.color=void 0!==parameters.color?new THREE.Color(parameters.color):new THREE.Color(16777215),this.map=void 0!==parameters.map?parameters.map:new THREE.Texture,this.blending=void 0!==parameters.blending?parameters.blending:THREE.NormalBlending,this.blendSrc=void 0!==parameters.blendSrc?parameters.blendSrc:THREE.SrcAlphaFactor,this.blendDst=void 0!==parameters.blendDst?parameters.blendDst:THREE.OneMinusSrcAlphaFactor,this.blendEquation=void 0!==parameters.blendEquation?parameters.blendEquation:THREE.AddEquation,this.useScreenCoordinates=void 0!==parameters.useScreenCoordinates?parameters.useScreenCoordinates:!0,this.mergeWith3D=void 0!==parameters.mergeWith3D?parameters.mergeWith3D:!this.useScreenCoordinates,this.affectedByDistance=void 0!==parameters.affectedByDistance?parameters.affectedByDistance:!this.useScreenCoordinates,this.scaleByViewport=void 0!==parameters.scaleByViewport?parameters.scaleByViewport:!this.affectedByDistance,this.alignment=parameters.alignment instanceof THREE.Vector2?parameters.alignment:THREE.SpriteAlignment.center,this.rotation3d=this.rotation,this.rotation=0,this.opacity=1,this.uvOffset=new THREE.Vector2(0,0),this.uvScale=new THREE.Vector2(1,1)},THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position),this.rotation3d.set(0,0,this.rotation),this.matrix.setRotationFromEuler(this.rotation3d),(1!==this.scale.x||1!==this.scale.y)&&(this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,this.scale.y)),this.matrixWorldNeedsUpdate=!0},THREE.SpriteAlignment={},THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1),THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1),THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1),THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0),THREE.SpriteAlignment.center=new THREE.Vector2(0,0),THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0),THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1),THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1),THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1),THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.centroidWorld=new THREE.Vector3,this.centroidScreen=new THREE.Vector3,this.normalWorld=new THREE.Vector3,this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsLength=0,this.material=null,this.uvs=[[]],this.z=null},THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.v4=new THREE.RenderableVertex,this.centroidWorld=new THREE.Vector3,this.centroidScreen=new THREE.Vector3,this.normalWorld=new THREE.Vector3,this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsLength=0,this.material=null,this.uvs=[[]],this.z=null},THREE.RenderableLine=function(){this.z=null,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.material=null},THREE.RenderableObject=function(){this.object=null,this.z=null},THREE.RenderableParticle=function(){this.object=null,this.x=null,this.y=null,this.z=null,this.rotation=null,this.scale=new THREE.Vector2,this.material=null},THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(vertex){this.positionWorld.copy(vertex.positionWorld),this.positionScreen.copy(vertex.positionScreen)},THREE.WebGLRenderer=function(parameters){function createParticleBuffers(geometry,displayName){geometry.__webglVertexBuffer=_gl.createBuffer(),geometry.__webglVertexBuffer.displayName=displayName+"_ParticleVertexBuffer",_this.info.memory.geometries++}function createLineBuffers(geometry,displayName){geometry.__webglVertexBuffer=_gl.createBuffer(),geometry.__webglVertexBuffer.displayName=displayName+"_LineVertexBuffer",geometry.__webglColorBuffer=_gl.createBuffer(),geometry.__webglColorBuffer.displayName=displayName+"_LineColorBuffer",_this.info.memory.geometries++}function createRibbonBuffers(geometry,displayName){geometry.__webglVertexBuffer=_gl.createBuffer(),geometry.__webglVertexBuffer.displayName=displayName+"_RibbonVertexBuffer",geometry.__webglColorBuffer=_gl.createBuffer(),geometry.__webglColorBuffer.displayName=displayName+"_RibbonColorBuffer",_this.info.memory.geometries++}function createMeshBuffers(geometryGroup,object){var displayName=object.name;geometryGroup.__webglVertexBuffer=_gl.createBuffer(),geometryGroup.__webglVertexBuffer.displayName=displayName+"_VertexBuffer",geometryGroup.__webglNormalBuffer=_gl.createBuffer(),geometryGroup.__webglNormalBuffer.displayName=displayName+"_NormalBuffer",(object.geometry.hasTangents||null!=object.geometry.attributes&&null!=object.geometry.attributes.tangent)&&(geometryGroup.__webglTangentBuffer=_gl.createBuffer(),geometryGroup.__webglTangentBuffer.displayName=displayName+"_TangentBuffer"),geometryGroup.__webglUVBuffer=_gl.createBuffer(),geometryGroup.__webglUVBuffer.displayName=displayName+"_UVBuffer",0!=object.material.vertexColors&&(geometryGroup.__webglColorBuffer=_gl.createBuffer(),geometryGroup.__webglColorBuffer.displayName=displayName+"_ColorBuffer"),object.geometry.faceVertexUvs.length>1&&(geometryGroup.__webglUV2Buffer=_gl.createBuffer(),geometryGroup.__webglUV2Buffer.displayName=displayName+"_UV2Buffer"),1==object.material.skinning&&(geometryGroup.__webglSkinIndicesBuffer=_gl.createBuffer(),geometryGroup.__webglSkinIndicesBuffer.displayName=displayName+"_SkinIndicesBuffer",geometryGroup.__webglSkinWeightsBuffer=_gl.createBuffer(),geometryGroup.__webglSkinWeightsBuffer.displayName=displayName+"_SkinWeightsBuffer"),geometryGroup.__webglFaceBuffer=_gl.createBuffer(),geometryGroup.__webglFaceBuffer.displayName=displayName+"_FaceBuffer",_this.info.memory.geometries++}function deleteParticleBuffers(geometry){_gl.deleteBuffer(geometry.__webglVertexBuffer),_gl.deleteBuffer(geometry.__webglColorBuffer),_this.info.memory.geometries--}function deleteLineBuffers(geometry){_gl.deleteBuffer(geometry.__webglVertexBuffer),_gl.deleteBuffer(geometry.__webglColorBuffer),_this.info.memory.geometries--}function deleteRibbonBuffers(geometry){_gl.deleteBuffer(geometry.__webglVertexBuffer),_gl.deleteBuffer(geometry.__webglColorBuffer),_this.info.memory.geometries--}function deleteMeshBuffers(geometryGroup){_gl.deleteBuffer(geometryGroup.__webglVertexBuffer),_gl.deleteBuffer(geometryGroup.__webglNormalBuffer),_gl.deleteBuffer(geometryGroup.__webglTangentBuffer),_gl.deleteBuffer(geometryGroup.__webglColorBuffer),_gl.deleteBuffer(geometryGroup.__webglUVBuffer),_gl.deleteBuffer(geometryGroup.__webglUV2Buffer),_gl.deleteBuffer(geometryGroup.__webglSkinIndicesBuffer),_gl.deleteBuffer(geometryGroup.__webglSkinWeightsBuffer),_gl.deleteBuffer(geometryGroup.__webglFaceBuffer),_gl.deleteBuffer(geometryGroup.__webglLineBuffer);var m,ml;if(geometryGroup.numMorphTargets)for(m=0,ml=geometryGroup.numMorphTargets;ml>m;m++)_gl.deleteBuffer(geometryGroup.__webglMorphTargetsBuffers[m]);if(geometryGroup.numMorphNormals)for(m=0,ml=geometryGroup.numMorphNormals;ml>m;m++)_gl.deleteBuffer(geometryGroup.__webglMorphNormalsBuffers[m]);if(geometryGroup.__webglCustomAttributesList)for(var id in geometryGroup.__webglCustomAttributesList)_gl.deleteBuffer(geometryGroup.__webglCustomAttributesList[id].buffer);_this.info.memory.geometries--}function initCustomAttributes(geometry,object){var nvertices=geometry.vertices.length,material=object.material;if(material.attributes){void 0===geometry.__webglCustomAttributesList&&(geometry.__webglCustomAttributesList=[]);for(var a in material.attributes){var attribute=material.attributes[a];if(!attribute.__webglInitialized||attribute.createUniqueBuffers){attribute.__webglInitialized=!0;var size=1;"v2"===attribute.type?size=2:"v3"===attribute.type?size=3:"v4"===attribute.type?size=4:"c"===attribute.type&&(size=3),attribute.size=size,attribute.array=new Float32Array(nvertices*size),attribute.buffer=_gl.createBuffer(),attribute.buffer.displayName=object.name+"_CustomAttributeBuffer",attribute.buffer.belongsToAttribute=a,attribute.needsUpdate=!0}geometry.__webglCustomAttributesList.push(attribute)}}}function initParticleBuffers(geometry,object){var nvertices=geometry.vertices.length;geometry.__vertexArray=new Float32Array(3*nvertices),geometry.__colorArray=new Float32Array(3*nvertices),geometry.__sortArray=[],geometry.__webglParticleCount=nvertices,initCustomAttributes(geometry,object)}function initLineBuffers(geometry,object){var nvertices=geometry.vertices.length;geometry.__vertexArray=new Float32Array(3*nvertices),geometry.__colorArray=new Float32Array(3*nvertices),geometry.__webglLineCount=nvertices,initCustomAttributes(geometry,object)}function initRibbonBuffers(geometry){var nvertices=geometry.vertices.length;geometry.__vertexArray=new Float32Array(3*nvertices),geometry.__colorArray=new Float32Array(3*nvertices),geometry.__webglVertexCount=nvertices}function initMeshBuffers(geometryGroup,object){var geometry=object.geometry,faces3=geometryGroup.faces3,faces4=geometryGroup.faces4,nvertices=3*faces3.length+4*faces4.length,ntris=1*faces3.length+2*faces4.length,nlines=3*faces3.length+4*faces4.length,material=getBufferMaterial(object,geometryGroup),uvType=bufferGuessUVType(material),normalType=bufferGuessNormalType(material),vertexColorType=bufferGuessVertexColorType(material);if(geometryGroup.__vertexArray=new Float32Array(3*nvertices),normalType&&(geometryGroup.__normalArray=new Float32Array(3*nvertices)),geometry.hasTangents&&(geometryGroup.__tangentArray=new Float32Array(4*nvertices)),vertexColorType&&(geometryGroup.__colorArray=new Float32Array(3*nvertices)),uvType&&((geometry.faceUvs.length>0||geometry.faceVertexUvs.length>0)&&(geometryGroup.__uvArray=new Float32Array(2*nvertices)),(geometry.faceUvs.length>1||geometry.faceVertexUvs.length>1)&&(geometryGroup.__uv2Array=new Float32Array(2*nvertices))),object.geometry.skinWeights.length&&object.geometry.skinIndices.length&&(geometryGroup.__skinIndexArray=new Float32Array(4*nvertices),geometryGroup.__skinWeightArray=new Float32Array(4*nvertices)),geometryGroup.__faceArray=new Uint16Array(3*ntris),geometryGroup.__lineArray=new Uint16Array(2*nlines),geometryGroup.__webglFaceCount=3*ntris,geometryGroup.__webglLineCount=2*nlines,material.attributes){void 0===geometryGroup.__webglCustomAttributesList&&(geometryGroup.__webglCustomAttributesList=[]);for(var a in material.attributes){var originalAttribute=material.attributes[a],attribute={};for(var property in originalAttribute)attribute[property]=originalAttribute[property];if(!attribute.__webglInitialized||attribute.createUniqueBuffers){attribute.__webglInitialized=!0;var size=1;"v2"===attribute.type?size=2:"v3"===attribute.type?size=3:"v4"===attribute.type?size=4:"c"===attribute.type&&(size=3),attribute.size=size,attribute.array=new Float32Array(nvertices*size),attribute.buffer=_gl.createBuffer(),attribute.buffer.displayName=object.name+"_CustomAttributeBuffer",attribute.buffer.belongsToAttribute=a,originalAttribute.needsUpdate=!0,attribute.__original=originalAttribute}geometryGroup.__webglCustomAttributesList.push(attribute)}}geometryGroup.__inittedArrays=!0}function getBufferMaterial(object,geometryGroup){return!object.material||object.material instanceof THREE.MeshFaceMaterial?geometryGroup.materialIndex>=0?object.geometry.materials[geometryGroup.materialIndex]:void 0:object.material}function materialNeedsSmoothNormals(material){return material&&void 0!==material.shading&&material.shading===THREE.SmoothShading}function bufferGuessNormalType(material){return material instanceof THREE.MeshBasicMaterial&&!material.envMap||material instanceof THREE.MeshDepthMaterial?!1:materialNeedsSmoothNormals(material)?THREE.SmoothShading:THREE.FlatShading}function bufferGuessVertexColorType(material){return material.vertexColors?material.vertexColors:!1}function bufferGuessUVType(material){return material.map||material.lightMap||material.bumpMap||material.normalMap||material.specularMap||material instanceof THREE.ShaderMaterial?!0:!1}function initDirectBuffers(geometry,displayName){var a,attribute,type;for(a in geometry.attributes)type="index"===a?_gl.ELEMENT_ARRAY_BUFFER:_gl.ARRAY_BUFFER,attribute=geometry.attributes[a],attribute.buffer=_gl.createBuffer(),attribute.buffer.displayName=displayName+"_"+a+"_directbuffer",_gl.bindBuffer(type,attribute.buffer),_gl.bufferData(type,attribute.array,_gl.STATIC_DRAW)}function setParticleBuffers(geometry,hint,object){var v,c,vertex,offset,index,color,i,il,ca,cal,value,customAttribute,vertices=geometry.vertices,vl=vertices.length,colors=geometry.colors,cl=colors.length,vertexArray=geometry.__vertexArray,colorArray=geometry.__colorArray,sortArray=geometry.__sortArray,dirtyVertices=geometry.verticesNeedUpdate,dirtyColors=(geometry.elementsNeedUpdate,geometry.colorsNeedUpdate),customAttributes=geometry.__webglCustomAttributesList;if(object.sortParticles){for(_projScreenMatrixPS.copy(_projScreenMatrix),_projScreenMatrixPS.multiplySelf(object.matrixWorld),v=0;vl>v;v++)vertex=vertices[v],_vector3.copy(vertex),_projScreenMatrixPS.multiplyVector3(_vector3),sortArray[v]=[_vector3.z,v];for(sortArray.sort(function(a,b){return b[0]-a[0]}),v=0;vl>v;v++)vertex=vertices[sortArray[v][1]],offset=3*v,vertexArray[offset]=vertex.x,vertexArray[offset+1]=vertex.y,vertexArray[offset+2]=vertex.z;for(c=0;cl>c;c++)offset=3*c,color=colors[sortArray[c][1]],colorArray[offset]=color.r,colorArray[offset+1]=color.g,colorArray[offset+2]=color.b;if(customAttributes)for(i=0,il=customAttributes.length;il>i;i++)if(customAttribute=customAttributes[i],void 0===customAttribute.boundTo||"vertices"===customAttribute.boundTo)if(offset=0,cal=customAttribute.value.length,1===customAttribute.size)for(ca=0;cal>ca;ca++)index=sortArray[ca][1],customAttribute.array[ca]=customAttribute.value[index];else if(2===customAttribute.size)for(ca=0;cal>ca;ca++)index=sortArray[ca][1],value=customAttribute.value[index],customAttribute.array[offset]=value.x,customAttribute.array[offset+1]=value.y,offset+=2;else if(3===customAttribute.size)if("c"===customAttribute.type)for(ca=0;cal>ca;ca++)index=sortArray[ca][1],value=customAttribute.value[index],customAttribute.array[offset]=value.r,customAttribute.array[offset+1]=value.g,customAttribute.array[offset+2]=value.b,offset+=3;else for(ca=0;cal>ca;ca++)index=sortArray[ca][1],value=customAttribute.value[index],customAttribute.array[offset]=value.x,customAttribute.array[offset+1]=value.y,customAttribute.array[offset+2]=value.z,offset+=3;else if(4===customAttribute.size)for(ca=0;cal>ca;ca++)index=sortArray[ca][1],value=customAttribute.value[index],customAttribute.array[offset]=value.x,customAttribute.array[offset+1]=value.y,customAttribute.array[offset+2]=value.z,customAttribute.array[offset+3]=value.w,offset+=4}else{if(dirtyVertices)for(v=0;vl>v;v++)vertex=vertices[v],offset=3*v,vertexArray[offset]=vertex.x,vertexArray[offset+1]=vertex.y,vertexArray[offset+2]=vertex.z;if(dirtyColors)for(c=0;cl>c;c++)color=colors[c],offset=3*c,colorArray[offset]=color.r,colorArray[offset+1]=color.g,colorArray[offset+2]=color.b;if(customAttributes)for(i=0,il=customAttributes.length;il>i;i++)if(customAttribute=customAttributes[i],customAttribute.needsUpdate&&(void 0===customAttribute.boundTo||"vertices"===customAttribute.boundTo))if(cal=customAttribute.value.length,offset=0,1===customAttribute.size)for(ca=0;cal>ca;ca++)customAttribute.array[ca]=customAttribute.value[ca];else if(2===customAttribute.size)for(ca=0;cal>ca;ca++)value=customAttribute.value[ca],customAttribute.array[offset]=value.x,customAttribute.array[offset+1]=value.y,offset+=2;else if(3===customAttribute.size)if("c"===customAttribute.type)for(ca=0;cal>ca;ca++)value=customAttribute.value[ca],customAttribute.array[offset]=value.r,customAttribute.array[offset+1]=value.g,customAttribute.array[offset+2]=value.b,offset+=3;else for(ca=0;cal>ca;ca++)value=customAttribute.value[ca],customAttribute.array[offset]=value.x,customAttribute.array[offset+1]=value.y,customAttribute.array[offset+2]=value.z,offset+=3;else if(4===customAttribute.size)for(ca=0;cal>ca;ca++)value=customAttribute.value[ca],customAttribute.array[offset]=value.x,customAttribute.array[offset+1]=value.y,customAttribute.array[offset+2]=value.z,customAttribute.array[offset+3]=value.w,offset+=4}if((dirtyVertices||object.sortParticles)&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,geometry.__webglVertexBuffer),_gl.bufferData(_gl.ARRAY_BUFFER,vertexArray,hint)),customAttributes)for(i=0,il=customAttributes.length;il>i;i++)customAttribute=customAttributes[i],(customAttribute.needsUpdate||object.sortParticles)&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,customAttribute.buffer),_gl.bufferData(_gl.ARRAY_BUFFER,customAttribute.array,hint))}function setLineBuffers(geometry,hint){var v,c,vertex,offset,color,i,il,ca,cal,value,customAttribute,vertices=geometry.vertices,colors=geometry.colors,vl=vertices.length,cl=colors.length,vertexArray=geometry.__vertexArray,colorArray=geometry.__colorArray,dirtyVertices=geometry.verticesNeedUpdate,dirtyColors=geometry.colorsNeedUpdate,customAttributes=geometry.__webglCustomAttributesList;if(dirtyVertices){for(v=0;vl>v;v++)vertex=vertices[v],offset=3*v,vertexArray[offset]=vertex.x,vertexArray[offset+1]=vertex.y,vertexArray[offset+2]=vertex.z;
_gl.bindBuffer(_gl.ARRAY_BUFFER,geometry.__webglVertexBuffer),_gl.bufferData(_gl.ARRAY_BUFFER,vertexArray,hint)}if(dirtyColors){for(c=0;cl>c;c++)color=colors[c],offset=3*c,colorArray[offset]=color.r,colorArray[offset+1]=color.g,colorArray[offset+2]=color.b;_gl.bindBuffer(_gl.ARRAY_BUFFER,geometry.__webglColorBuffer),_gl.bufferData(_gl.ARRAY_BUFFER,colorArray,hint)}if(customAttributes)for(i=0,il=customAttributes.length;il>i;i++)if(customAttribute=customAttributes[i],customAttribute.needsUpdate&&(void 0===customAttribute.boundTo||"vertices"===customAttribute.boundTo)){if(offset=0,cal=customAttribute.value.length,1===customAttribute.size)for(ca=0;cal>ca;ca++)customAttribute.array[ca]=customAttribute.value[ca];else if(2===customAttribute.size)for(ca=0;cal>ca;ca++)value=customAttribute.value[ca],customAttribute.array[offset]=value.x,customAttribute.array[offset+1]=value.y,offset+=2;else if(3===customAttribute.size)if("c"===customAttribute.type)for(ca=0;cal>ca;ca++)value=customAttribute.value[ca],customAttribute.array[offset]=value.r,customAttribute.array[offset+1]=value.g,customAttribute.array[offset+2]=value.b,offset+=3;else for(ca=0;cal>ca;ca++)value=customAttribute.value[ca],customAttribute.array[offset]=value.x,customAttribute.array[offset+1]=value.y,customAttribute.array[offset+2]=value.z,offset+=3;else if(4===customAttribute.size)for(ca=0;cal>ca;ca++)value=customAttribute.value[ca],customAttribute.array[offset]=value.x,customAttribute.array[offset+1]=value.y,customAttribute.array[offset+2]=value.z,customAttribute.array[offset+3]=value.w,offset+=4;_gl.bindBuffer(_gl.ARRAY_BUFFER,customAttribute.buffer),_gl.bufferData(_gl.ARRAY_BUFFER,customAttribute.array,hint)}}function setRibbonBuffers(geometry,hint){var v,c,vertex,offset,color,vertices=geometry.vertices,colors=geometry.colors,vl=vertices.length,cl=colors.length,vertexArray=geometry.__vertexArray,colorArray=geometry.__colorArray,dirtyVertices=geometry.verticesNeedUpdate,dirtyColors=geometry.colorsNeedUpdate;if(dirtyVertices){for(v=0;vl>v;v++)vertex=vertices[v],offset=3*v,vertexArray[offset]=vertex.x,vertexArray[offset+1]=vertex.y,vertexArray[offset+2]=vertex.z;_gl.bindBuffer(_gl.ARRAY_BUFFER,geometry.__webglVertexBuffer),_gl.bufferData(_gl.ARRAY_BUFFER,vertexArray,hint)}if(dirtyColors){for(c=0;cl>c;c++)color=colors[c],offset=3*c,colorArray[offset]=color.r,colorArray[offset+1]=color.g,colorArray[offset+2]=color.b;_gl.bindBuffer(_gl.ARRAY_BUFFER,geometry.__webglColorBuffer),_gl.bufferData(_gl.ARRAY_BUFFER,colorArray,hint)}}function setMeshBuffers(geometryGroup,object,hint,dispose,material){if(geometryGroup.__inittedArrays){var f,fl,fi,face,vertexNormals,faceNormal,vertexColors,faceColor,vertexTangents,uv,uv2,v1,v2,v3,v4,t1,t2,t3,t4,n1,n2,n3,n4,c1,c2,c3,c4,sw1,sw2,sw3,sw4,si1,si2,si3,si4,i,il,vn,uvi,uv2i,vk,vkl,vka,nka,chf,faceVertexNormals,value,customAttribute,normalType=bufferGuessNormalType(material),vertexColorType=bufferGuessVertexColorType(material),uvType=bufferGuessUVType(material),needsSmoothNormals=normalType===THREE.SmoothShading,vertexIndex=0,offset=0,offset_uv=0,offset_uv2=0,offset_face=0,offset_normal=0,offset_tangent=0,offset_line=0,offset_color=0,offset_skin=0,offset_morphTarget=0,offset_custom=0,offset_customSrc=0,vertexArray=geometryGroup.__vertexArray,uvArray=geometryGroup.__uvArray,uv2Array=geometryGroup.__uv2Array,normalArray=geometryGroup.__normalArray,tangentArray=geometryGroup.__tangentArray,colorArray=geometryGroup.__colorArray,skinIndexArray=geometryGroup.__skinIndexArray,skinWeightArray=geometryGroup.__skinWeightArray,morphTargetsArrays=geometryGroup.__morphTargetsArrays,morphNormalsArrays=geometryGroup.__morphNormalsArrays,customAttributes=geometryGroup.__webglCustomAttributesList,faceArray=geometryGroup.__faceArray,lineArray=geometryGroup.__lineArray,geometry=object.geometry,dirtyVertices=geometry.verticesNeedUpdate,dirtyElements=geometry.elementsNeedUpdate,dirtyUvs=geometry.uvsNeedUpdate,dirtyNormals=geometry.normalsNeedUpdate,dirtyTangents=geometry.tangentsNeedUpdate,dirtyColors=geometry.colorsNeedUpdate,dirtyMorphTargets=geometry.morphTargetsNeedUpdate,vertices=geometry.vertices,chunk_faces3=geometryGroup.faces3,chunk_faces4=geometryGroup.faces4,obj_faces=geometry.faces,obj_uvs=geometry.faceVertexUvs[0],obj_uvs2=geometry.faceVertexUvs[1],obj_skinIndices=(geometry.colors,geometry.skinIndices),obj_skinWeights=geometry.skinWeights,morphTargets=geometry.morphTargets,morphNormals=geometry.morphNormals;if(dirtyVertices){for(f=0,fl=chunk_faces3.length;fl>f;f++)face=obj_faces[chunk_faces3[f]],v1=vertices[face.a],v2=vertices[face.b],v3=vertices[face.c],vertexArray[offset]=v1.x,vertexArray[offset+1]=v1.y,vertexArray[offset+2]=v1.z,vertexArray[offset+3]=v2.x,vertexArray[offset+4]=v2.y,vertexArray[offset+5]=v2.z,vertexArray[offset+6]=v3.x,vertexArray[offset+7]=v3.y,vertexArray[offset+8]=v3.z,offset+=9;for(f=0,fl=chunk_faces4.length;fl>f;f++)face=obj_faces[chunk_faces4[f]],v1=vertices[face.a],v2=vertices[face.b],v3=vertices[face.c],v4=vertices[face.d],vertexArray[offset]=v1.x,vertexArray[offset+1]=v1.y,vertexArray[offset+2]=v1.z,vertexArray[offset+3]=v2.x,vertexArray[offset+4]=v2.y,vertexArray[offset+5]=v2.z,vertexArray[offset+6]=v3.x,vertexArray[offset+7]=v3.y,vertexArray[offset+8]=v3.z,vertexArray[offset+9]=v4.x,vertexArray[offset+10]=v4.y,vertexArray[offset+11]=v4.z,offset+=12;_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglVertexBuffer),_gl.bufferData(_gl.ARRAY_BUFFER,vertexArray,hint)}if(dirtyMorphTargets)for(vk=0,vkl=morphTargets.length;vkl>vk;vk++){for(offset_morphTarget=0,f=0,fl=chunk_faces3.length;fl>f;f++)chf=chunk_faces3[f],face=obj_faces[chf],v1=morphTargets[vk].vertices[face.a],v2=morphTargets[vk].vertices[face.b],v3=morphTargets[vk].vertices[face.c],vka=morphTargetsArrays[vk],vka[offset_morphTarget]=v1.x,vka[offset_morphTarget+1]=v1.y,vka[offset_morphTarget+2]=v1.z,vka[offset_morphTarget+3]=v2.x,vka[offset_morphTarget+4]=v2.y,vka[offset_morphTarget+5]=v2.z,vka[offset_morphTarget+6]=v3.x,vka[offset_morphTarget+7]=v3.y,vka[offset_morphTarget+8]=v3.z,material.morphNormals&&(needsSmoothNormals?(faceVertexNormals=morphNormals[vk].vertexNormals[chf],n1=faceVertexNormals.a,n2=faceVertexNormals.b,n3=faceVertexNormals.c):(n1=morphNormals[vk].faceNormals[chf],n2=n1,n3=n1),nka=morphNormalsArrays[vk],nka[offset_morphTarget]=n1.x,nka[offset_morphTarget+1]=n1.y,nka[offset_morphTarget+2]=n1.z,nka[offset_morphTarget+3]=n2.x,nka[offset_morphTarget+4]=n2.y,nka[offset_morphTarget+5]=n2.z,nka[offset_morphTarget+6]=n3.x,nka[offset_morphTarget+7]=n3.y,nka[offset_morphTarget+8]=n3.z),offset_morphTarget+=9;for(f=0,fl=chunk_faces4.length;fl>f;f++)chf=chunk_faces4[f],face=obj_faces[chf],v1=morphTargets[vk].vertices[face.a],v2=morphTargets[vk].vertices[face.b],v3=morphTargets[vk].vertices[face.c],v4=morphTargets[vk].vertices[face.d],vka=morphTargetsArrays[vk],vka[offset_morphTarget]=v1.x,vka[offset_morphTarget+1]=v1.y,vka[offset_morphTarget+2]=v1.z,vka[offset_morphTarget+3]=v2.x,vka[offset_morphTarget+4]=v2.y,vka[offset_morphTarget+5]=v2.z,vka[offset_morphTarget+6]=v3.x,vka[offset_morphTarget+7]=v3.y,vka[offset_morphTarget+8]=v3.z,vka[offset_morphTarget+9]=v4.x,vka[offset_morphTarget+10]=v4.y,vka[offset_morphTarget+11]=v4.z,material.morphNormals&&(needsSmoothNormals?(faceVertexNormals=morphNormals[vk].vertexNormals[chf],n1=faceVertexNormals.a,n2=faceVertexNormals.b,n3=faceVertexNormals.c,n4=faceVertexNormals.d):(n1=morphNormals[vk].faceNormals[chf],n2=n1,n3=n1,n4=n1),nka=morphNormalsArrays[vk],nka[offset_morphTarget]=n1.x,nka[offset_morphTarget+1]=n1.y,nka[offset_morphTarget+2]=n1.z,nka[offset_morphTarget+3]=n2.x,nka[offset_morphTarget+4]=n2.y,nka[offset_morphTarget+5]=n2.z,nka[offset_morphTarget+6]=n3.x,nka[offset_morphTarget+7]=n3.y,nka[offset_morphTarget+8]=n3.z,nka[offset_morphTarget+9]=n4.x,nka[offset_morphTarget+10]=n4.y,nka[offset_morphTarget+11]=n4.z),offset_morphTarget+=12;_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglMorphTargetsBuffers[vk]),_gl.bufferData(_gl.ARRAY_BUFFER,morphTargetsArrays[vk],hint),material.morphNormals&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglMorphNormalsBuffers[vk]),_gl.bufferData(_gl.ARRAY_BUFFER,morphNormalsArrays[vk],hint))}if(obj_skinWeights.length){for(f=0,fl=chunk_faces3.length;fl>f;f++)face=obj_faces[chunk_faces3[f]],sw1=obj_skinWeights[face.a],sw2=obj_skinWeights[face.b],sw3=obj_skinWeights[face.c],skinWeightArray[offset_skin]=sw1.x,skinWeightArray[offset_skin+1]=sw1.y,skinWeightArray[offset_skin+2]=sw1.z,skinWeightArray[offset_skin+3]=sw1.w,skinWeightArray[offset_skin+4]=sw2.x,skinWeightArray[offset_skin+5]=sw2.y,skinWeightArray[offset_skin+6]=sw2.z,skinWeightArray[offset_skin+7]=sw2.w,skinWeightArray[offset_skin+8]=sw3.x,skinWeightArray[offset_skin+9]=sw3.y,skinWeightArray[offset_skin+10]=sw3.z,skinWeightArray[offset_skin+11]=sw3.w,si1=obj_skinIndices[face.a],si2=obj_skinIndices[face.b],si3=obj_skinIndices[face.c],skinIndexArray[offset_skin]=si1.x,skinIndexArray[offset_skin+1]=si1.y,skinIndexArray[offset_skin+2]=si1.z,skinIndexArray[offset_skin+3]=si1.w,skinIndexArray[offset_skin+4]=si2.x,skinIndexArray[offset_skin+5]=si2.y,skinIndexArray[offset_skin+6]=si2.z,skinIndexArray[offset_skin+7]=si2.w,skinIndexArray[offset_skin+8]=si3.x,skinIndexArray[offset_skin+9]=si3.y,skinIndexArray[offset_skin+10]=si3.z,skinIndexArray[offset_skin+11]=si3.w,offset_skin+=12;for(f=0,fl=chunk_faces4.length;fl>f;f++)face=obj_faces[chunk_faces4[f]],sw1=obj_skinWeights[face.a],sw2=obj_skinWeights[face.b],sw3=obj_skinWeights[face.c],sw4=obj_skinWeights[face.d],skinWeightArray[offset_skin]=sw1.x,skinWeightArray[offset_skin+1]=sw1.y,skinWeightArray[offset_skin+2]=sw1.z,skinWeightArray[offset_skin+3]=sw1.w,skinWeightArray[offset_skin+4]=sw2.x,skinWeightArray[offset_skin+5]=sw2.y,skinWeightArray[offset_skin+6]=sw2.z,skinWeightArray[offset_skin+7]=sw2.w,skinWeightArray[offset_skin+8]=sw3.x,skinWeightArray[offset_skin+9]=sw3.y,skinWeightArray[offset_skin+10]=sw3.z,skinWeightArray[offset_skin+11]=sw3.w,skinWeightArray[offset_skin+12]=sw4.x,skinWeightArray[offset_skin+13]=sw4.y,skinWeightArray[offset_skin+14]=sw4.z,skinWeightArray[offset_skin+15]=sw4.w,si1=obj_skinIndices[face.a],si2=obj_skinIndices[face.b],si3=obj_skinIndices[face.c],si4=obj_skinIndices[face.d],skinIndexArray[offset_skin]=si1.x,skinIndexArray[offset_skin+1]=si1.y,skinIndexArray[offset_skin+2]=si1.z,skinIndexArray[offset_skin+3]=si1.w,skinIndexArray[offset_skin+4]=si2.x,skinIndexArray[offset_skin+5]=si2.y,skinIndexArray[offset_skin+6]=si2.z,skinIndexArray[offset_skin+7]=si2.w,skinIndexArray[offset_skin+8]=si3.x,skinIndexArray[offset_skin+9]=si3.y,skinIndexArray[offset_skin+10]=si3.z,skinIndexArray[offset_skin+11]=si3.w,skinIndexArray[offset_skin+12]=si4.x,skinIndexArray[offset_skin+13]=si4.y,skinIndexArray[offset_skin+14]=si4.z,skinIndexArray[offset_skin+15]=si4.w,offset_skin+=16;offset_skin>0&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglSkinIndicesBuffer),_gl.bufferData(_gl.ARRAY_BUFFER,skinIndexArray,hint),_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglSkinWeightsBuffer),_gl.bufferData(_gl.ARRAY_BUFFER,skinWeightArray,hint))}if(dirtyColors&&vertexColorType){for(f=0,fl=chunk_faces3.length;fl>f;f++)face=obj_faces[chunk_faces3[f]],vertexColors=face.vertexColors,faceColor=face.color,3===vertexColors.length&&vertexColorType===THREE.VertexColors?(c1=vertexColors[0],c2=vertexColors[1],c3=vertexColors[2]):(c1=faceColor,c2=faceColor,c3=faceColor),colorArray[offset_color]=c1.r,colorArray[offset_color+1]=c1.g,colorArray[offset_color+2]=c1.b,colorArray[offset_color+3]=c2.r,colorArray[offset_color+4]=c2.g,colorArray[offset_color+5]=c2.b,colorArray[offset_color+6]=c3.r,colorArray[offset_color+7]=c3.g,colorArray[offset_color+8]=c3.b,offset_color+=9;for(f=0,fl=chunk_faces4.length;fl>f;f++)face=obj_faces[chunk_faces4[f]],vertexColors=face.vertexColors,faceColor=face.color,4===vertexColors.length&&vertexColorType===THREE.VertexColors?(c1=vertexColors[0],c2=vertexColors[1],c3=vertexColors[2],c4=vertexColors[3]):(c1=faceColor,c2=faceColor,c3=faceColor,c4=faceColor),colorArray[offset_color]=c1.r,colorArray[offset_color+1]=c1.g,colorArray[offset_color+2]=c1.b,colorArray[offset_color+3]=c2.r,colorArray[offset_color+4]=c2.g,colorArray[offset_color+5]=c2.b,colorArray[offset_color+6]=c3.r,colorArray[offset_color+7]=c3.g,colorArray[offset_color+8]=c3.b,colorArray[offset_color+9]=c4.r,colorArray[offset_color+10]=c4.g,colorArray[offset_color+11]=c4.b,offset_color+=12;offset_color>0&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglColorBuffer),_gl.bufferData(_gl.ARRAY_BUFFER,colorArray,hint))}if(dirtyTangents&&geometry.hasTangents){for(f=0,fl=chunk_faces3.length;fl>f;f++)face=obj_faces[chunk_faces3[f]],vertexTangents=face.vertexTangents,t1=vertexTangents[0],t2=vertexTangents[1],t3=vertexTangents[2],tangentArray[offset_tangent]=t1.x,tangentArray[offset_tangent+1]=t1.y,tangentArray[offset_tangent+2]=t1.z,tangentArray[offset_tangent+3]=t1.w,tangentArray[offset_tangent+4]=t2.x,tangentArray[offset_tangent+5]=t2.y,tangentArray[offset_tangent+6]=t2.z,tangentArray[offset_tangent+7]=t2.w,tangentArray[offset_tangent+8]=t3.x,tangentArray[offset_tangent+9]=t3.y,tangentArray[offset_tangent+10]=t3.z,tangentArray[offset_tangent+11]=t3.w,offset_tangent+=12;for(f=0,fl=chunk_faces4.length;fl>f;f++)face=obj_faces[chunk_faces4[f]],vertexTangents=face.vertexTangents,t1=vertexTangents[0],t2=vertexTangents[1],t3=vertexTangents[2],t4=vertexTangents[3],tangentArray[offset_tangent]=t1.x,tangentArray[offset_tangent+1]=t1.y,tangentArray[offset_tangent+2]=t1.z,tangentArray[offset_tangent+3]=t1.w,tangentArray[offset_tangent+4]=t2.x,tangentArray[offset_tangent+5]=t2.y,tangentArray[offset_tangent+6]=t2.z,tangentArray[offset_tangent+7]=t2.w,tangentArray[offset_tangent+8]=t3.x,tangentArray[offset_tangent+9]=t3.y,tangentArray[offset_tangent+10]=t3.z,tangentArray[offset_tangent+11]=t3.w,tangentArray[offset_tangent+12]=t4.x,tangentArray[offset_tangent+13]=t4.y,tangentArray[offset_tangent+14]=t4.z,tangentArray[offset_tangent+15]=t4.w,offset_tangent+=16;_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglTangentBuffer),_gl.bufferData(_gl.ARRAY_BUFFER,tangentArray,hint)}if(dirtyNormals&&normalType){for(f=0,fl=chunk_faces3.length;fl>f;f++)if(face=obj_faces[chunk_faces3[f]],vertexNormals=face.vertexNormals,faceNormal=face.normal,3===vertexNormals.length&&needsSmoothNormals)for(i=0;3>i;i++)vn=vertexNormals[i],normalArray[offset_normal]=vn.x,normalArray[offset_normal+1]=vn.y,normalArray[offset_normal+2]=vn.z,offset_normal+=3;else for(i=0;3>i;i++)normalArray[offset_normal]=faceNormal.x,normalArray[offset_normal+1]=faceNormal.y,normalArray[offset_normal+2]=faceNormal.z,offset_normal+=3;for(f=0,fl=chunk_faces4.length;fl>f;f++)if(face=obj_faces[chunk_faces4[f]],vertexNormals=face.vertexNormals,faceNormal=face.normal,4===vertexNormals.length&&needsSmoothNormals)for(i=0;4>i;i++)vn=vertexNormals[i],normalArray[offset_normal]=vn.x,normalArray[offset_normal+1]=vn.y,normalArray[offset_normal+2]=vn.z,offset_normal+=3;else for(i=0;4>i;i++)normalArray[offset_normal]=faceNormal.x,normalArray[offset_normal+1]=faceNormal.y,normalArray[offset_normal+2]=faceNormal.z,offset_normal+=3;_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglNormalBuffer),_gl.bufferData(_gl.ARRAY_BUFFER,normalArray,hint)}if(dirtyUvs&&obj_uvs&&uvType){for(f=0,fl=chunk_faces3.length;fl>f;f++)if(fi=chunk_faces3[f],face=obj_faces[fi],uv=obj_uvs[fi],void 0!==uv)for(i=0;3>i;i++)uvi=uv[i],uvArray[offset_uv]=uvi.u,uvArray[offset_uv+1]=uvi.v,offset_uv+=2;for(f=0,fl=chunk_faces4.length;fl>f;f++)if(fi=chunk_faces4[f],face=obj_faces[fi],uv=obj_uvs[fi],void 0!==uv)for(i=0;4>i;i++)uvi=uv[i],uvArray[offset_uv]=uvi.u,uvArray[offset_uv+1]=uvi.v,offset_uv+=2;offset_uv>0&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglUVBuffer),_gl.bufferData(_gl.ARRAY_BUFFER,uvArray,hint))}if(dirtyUvs&&obj_uvs2&&uvType){for(f=0,fl=chunk_faces3.length;fl>f;f++)if(fi=chunk_faces3[f],face=obj_faces[fi],uv2=obj_uvs2[fi],void 0!==uv2)for(i=0;3>i;i++)uv2i=uv2[i],uv2Array[offset_uv2]=uv2i.u,uv2Array[offset_uv2+1]=uv2i.v,offset_uv2+=2;for(f=0,fl=chunk_faces4.length;fl>f;f++)if(fi=chunk_faces4[f],face=obj_faces[fi],uv2=obj_uvs2[fi],void 0!==uv2)for(i=0;4>i;i++)uv2i=uv2[i],uv2Array[offset_uv2]=uv2i.u,uv2Array[offset_uv2+1]=uv2i.v,offset_uv2+=2;offset_uv2>0&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglUV2Buffer),_gl.bufferData(_gl.ARRAY_BUFFER,uv2Array,hint))}if(dirtyElements){for(f=0,fl=chunk_faces3.length;fl>f;f++)face=obj_faces[chunk_faces3[f]],faceArray[offset_face]=vertexIndex,faceArray[offset_face+1]=vertexIndex+1,faceArray[offset_face+2]=vertexIndex+2,offset_face+=3,lineArray[offset_line]=vertexIndex,lineArray[offset_line+1]=vertexIndex+1,lineArray[offset_line+2]=vertexIndex,lineArray[offset_line+3]=vertexIndex+2,lineArray[offset_line+4]=vertexIndex+1,lineArray[offset_line+5]=vertexIndex+2,offset_line+=6,vertexIndex+=3;for(f=0,fl=chunk_faces4.length;fl>f;f++)face=obj_faces[chunk_faces4[f]],faceArray[offset_face]=vertexIndex,faceArray[offset_face+1]=vertexIndex+1,faceArray[offset_face+2]=vertexIndex+3,faceArray[offset_face+3]=vertexIndex+1,faceArray[offset_face+4]=vertexIndex+2,faceArray[offset_face+5]=vertexIndex+3,offset_face+=6,lineArray[offset_line]=vertexIndex,lineArray[offset_line+1]=vertexIndex+1,lineArray[offset_line+2]=vertexIndex,lineArray[offset_line+3]=vertexIndex+3,lineArray[offset_line+4]=vertexIndex+1,lineArray[offset_line+5]=vertexIndex+2,lineArray[offset_line+6]=vertexIndex+2,lineArray[offset_line+7]=vertexIndex+3,offset_line+=8,vertexIndex+=4;_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,geometryGroup.__webglFaceBuffer),_gl.bufferData(_gl.ELEMENT_ARRAY_BUFFER,faceArray,hint)}if(customAttributes)for(i=0,il=customAttributes.length;il>i;i++)if(customAttribute=customAttributes[i],customAttribute.__original.needsUpdate){if(offset_custom=0,offset_customSrc=0,1===customAttribute.size){if(void 0===customAttribute.boundTo||"vertices"===customAttribute.boundTo){for(f=0,fl=chunk_faces3.length;fl>f;f++)face=obj_faces[chunk_faces3[f]],customAttribute.array[offset_custom]=customAttribute.value[face.a],customAttribute.array[offset_custom+1]=customAttribute.value[face.b],customAttribute.array[offset_custom+2]=customAttribute.value[face.c],offset_custom+=3;for(f=0,fl=chunk_faces4.length;fl>f;f++)face=obj_faces[chunk_faces4[f]],customAttribute.array[offset_custom]=customAttribute.value[face.a],customAttribute.array[offset_custom+1]=customAttribute.value[face.b],customAttribute.array[offset_custom+2]=customAttribute.value[face.c],customAttribute.array[offset_custom+3]=customAttribute.value[face.d],offset_custom+=4}else if("faces"===customAttribute.boundTo){for(f=0,fl=chunk_faces3.length;fl>f;f++)value=customAttribute.value[chunk_faces3[f]],customAttribute.array[offset_custom]=value,customAttribute.array[offset_custom+1]=value,customAttribute.array[offset_custom+2]=value,offset_custom+=3;for(f=0,fl=chunk_faces4.length;fl>f;f++)value=customAttribute.value[chunk_faces4[f]],customAttribute.array[offset_custom]=value,customAttribute.array[offset_custom+1]=value,customAttribute.array[offset_custom+2]=value,customAttribute.array[offset_custom+3]=value,offset_custom+=4}}else if(2===customAttribute.size){if(void 0===customAttribute.boundTo||"vertices"===customAttribute.boundTo){for(f=0,fl=chunk_faces3.length;fl>f;f++)face=obj_faces[chunk_faces3[f]],v1=customAttribute.value[face.a],v2=customAttribute.value[face.b],v3=customAttribute.value[face.c],customAttribute.array[offset_custom]=v1.x,customAttribute.array[offset_custom+1]=v1.y,customAttribute.array[offset_custom+2]=v2.x,customAttribute.array[offset_custom+3]=v2.y,customAttribute.array[offset_custom+4]=v3.x,customAttribute.array[offset_custom+5]=v3.y,offset_custom+=6;for(f=0,fl=chunk_faces4.length;fl>f;f++)face=obj_faces[chunk_faces4[f]],v1=customAttribute.value[face.a],v2=customAttribute.value[face.b],v3=customAttribute.value[face.c],v4=customAttribute.value[face.d],customAttribute.array[offset_custom]=v1.x,customAttribute.array[offset_custom+1]=v1.y,customAttribute.array[offset_custom+2]=v2.x,customAttribute.array[offset_custom+3]=v2.y,customAttribute.array[offset_custom+4]=v3.x,customAttribute.array[offset_custom+5]=v3.y,customAttribute.array[offset_custom+6]=v4.x,customAttribute.array[offset_custom+7]=v4.y,offset_custom+=8}else if("faces"===customAttribute.boundTo){for(f=0,fl=chunk_faces3.length;fl>f;f++)value=customAttribute.value[chunk_faces3[f]],v1=value,v2=value,v3=value,customAttribute.array[offset_custom]=v1.x,customAttribute.array[offset_custom+1]=v1.y,customAttribute.array[offset_custom+2]=v2.x,customAttribute.array[offset_custom+3]=v2.y,customAttribute.array[offset_custom+4]=v3.x,customAttribute.array[offset_custom+5]=v3.y,offset_custom+=6;for(f=0,fl=chunk_faces4.length;fl>f;f++)value=customAttribute.value[chunk_faces4[f]],v1=value,v2=value,v3=value,v4=value,customAttribute.array[offset_custom]=v1.x,customAttribute.array[offset_custom+1]=v1.y,customAttribute.array[offset_custom+2]=v2.x,customAttribute.array[offset_custom+3]=v2.y,customAttribute.array[offset_custom+4]=v3.x,customAttribute.array[offset_custom+5]=v3.y,customAttribute.array[offset_custom+6]=v4.x,customAttribute.array[offset_custom+7]=v4.y,offset_custom+=8}}else if(3===customAttribute.size){var pp;if(pp="c"===customAttribute.type?["r","g","b"]:["x","y","z"],void 0===customAttribute.boundTo||"vertices"===customAttribute.boundTo){for(f=0,fl=chunk_faces3.length;fl>f;f++)face=obj_faces[chunk_faces3[f]],v1=customAttribute.value[face.a],v2=customAttribute.value[face.b],v3=customAttribute.value[face.c],customAttribute.array[offset_custom]=v1[pp[0]],customAttribute.array[offset_custom+1]=v1[pp[1]],customAttribute.array[offset_custom+2]=v1[pp[2]],customAttribute.array[offset_custom+3]=v2[pp[0]],customAttribute.array[offset_custom+4]=v2[pp[1]],customAttribute.array[offset_custom+5]=v2[pp[2]],customAttribute.array[offset_custom+6]=v3[pp[0]],customAttribute.array[offset_custom+7]=v3[pp[1]],customAttribute.array[offset_custom+8]=v3[pp[2]],offset_custom+=9;for(f=0,fl=chunk_faces4.length;fl>f;f++)face=obj_faces[chunk_faces4[f]],v1=customAttribute.value[face.a],v2=customAttribute.value[face.b],v3=customAttribute.value[face.c],v4=customAttribute.value[face.d],customAttribute.array[offset_custom]=v1[pp[0]],customAttribute.array[offset_custom+1]=v1[pp[1]],customAttribute.array[offset_custom+2]=v1[pp[2]],customAttribute.array[offset_custom+3]=v2[pp[0]],customAttribute.array[offset_custom+4]=v2[pp[1]],customAttribute.array[offset_custom+5]=v2[pp[2]],customAttribute.array[offset_custom+6]=v3[pp[0]],customAttribute.array[offset_custom+7]=v3[pp[1]],customAttribute.array[offset_custom+8]=v3[pp[2]],customAttribute.array[offset_custom+9]=v4[pp[0]],customAttribute.array[offset_custom+10]=v4[pp[1]],customAttribute.array[offset_custom+11]=v4[pp[2]],offset_custom+=12}else if("faces"===customAttribute.boundTo){for(f=0,fl=chunk_faces3.length;fl>f;f++)value=customAttribute.value[chunk_faces3[f]],v1=value,v2=value,v3=value,customAttribute.array[offset_custom]=v1[pp[0]],customAttribute.array[offset_custom+1]=v1[pp[1]],customAttribute.array[offset_custom+2]=v1[pp[2]],customAttribute.array[offset_custom+3]=v2[pp[0]],customAttribute.array[offset_custom+4]=v2[pp[1]],customAttribute.array[offset_custom+5]=v2[pp[2]],customAttribute.array[offset_custom+6]=v3[pp[0]],customAttribute.array[offset_custom+7]=v3[pp[1]],customAttribute.array[offset_custom+8]=v3[pp[2]],offset_custom+=9;for(f=0,fl=chunk_faces4.length;fl>f;f++)value=customAttribute.value[chunk_faces4[f]],v1=value,v2=value,v3=value,v4=value,customAttribute.array[offset_custom]=v1[pp[0]],customAttribute.array[offset_custom+1]=v1[pp[1]],customAttribute.array[offset_custom+2]=v1[pp[2]],customAttribute.array[offset_custom+3]=v2[pp[0]],customAttribute.array[offset_custom+4]=v2[pp[1]],customAttribute.array[offset_custom+5]=v2[pp[2]],customAttribute.array[offset_custom+6]=v3[pp[0]],customAttribute.array[offset_custom+7]=v3[pp[1]],customAttribute.array[offset_custom+8]=v3[pp[2]],customAttribute.array[offset_custom+9]=v4[pp[0]],customAttribute.array[offset_custom+10]=v4[pp[1]],customAttribute.array[offset_custom+11]=v4[pp[2]],offset_custom+=12}else if("faceVertices"===customAttribute.boundTo){for(f=0,fl=chunk_faces3.length;fl>f;f++)value=customAttribute.value[chunk_faces3[f]],v1=value[0],v2=value[1],v3=value[2],customAttribute.array[offset_custom]=v1[pp[0]],customAttribute.array[offset_custom+1]=v1[pp[1]],customAttribute.array[offset_custom+2]=v1[pp[2]],customAttribute.array[offset_custom+3]=v2[pp[0]],customAttribute.array[offset_custom+4]=v2[pp[1]],customAttribute.array[offset_custom+5]=v2[pp[2]],customAttribute.array[offset_custom+6]=v3[pp[0]],customAttribute.array[offset_custom+7]=v3[pp[1]],customAttribute.array[offset_custom+8]=v3[pp[2]],offset_custom+=9;for(f=0,fl=chunk_faces4.length;fl>f;f++)value=customAttribute.value[chunk_faces4[f]],v1=value[0],v2=value[1],v3=value[2],v4=value[3],customAttribute.array[offset_custom]=v1[pp[0]],customAttribute.array[offset_custom+1]=v1[pp[1]],customAttribute.array[offset_custom+2]=v1[pp[2]],customAttribute.array[offset_custom+3]=v2[pp[0]],customAttribute.array[offset_custom+4]=v2[pp[1]],customAttribute.array[offset_custom+5]=v2[pp[2]],customAttribute.array[offset_custom+6]=v3[pp[0]],customAttribute.array[offset_custom+7]=v3[pp[1]],customAttribute.array[offset_custom+8]=v3[pp[2]],customAttribute.array[offset_custom+9]=v4[pp[0]],customAttribute.array[offset_custom+10]=v4[pp[1]],customAttribute.array[offset_custom+11]=v4[pp[2]],offset_custom+=12}}else if(4===customAttribute.size)if(void 0===customAttribute.boundTo||"vertices"===customAttribute.boundTo){for(f=0,fl=chunk_faces3.length;fl>f;f++)face=obj_faces[chunk_faces3[f]],v1=customAttribute.value[face.a],v2=customAttribute.value[face.b],v3=customAttribute.value[face.c],customAttribute.array[offset_custom]=v1.x,customAttribute.array[offset_custom+1]=v1.y,customAttribute.array[offset_custom+2]=v1.z,customAttribute.array[offset_custom+3]=v1.w,customAttribute.array[offset_custom+4]=v2.x,customAttribute.array[offset_custom+5]=v2.y,customAttribute.array[offset_custom+6]=v2.z,customAttribute.array[offset_custom+7]=v2.w,customAttribute.array[offset_custom+8]=v3.x,customAttribute.array[offset_custom+9]=v3.y,customAttribute.array[offset_custom+10]=v3.z,customAttribute.array[offset_custom+11]=v3.w,offset_custom+=12;for(f=0,fl=chunk_faces4.length;fl>f;f++)face=obj_faces[chunk_faces4[f]],v1=customAttribute.value[face.a],v2=customAttribute.value[face.b],v3=customAttribute.value[face.c],v4=customAttribute.value[face.d],customAttribute.array[offset_custom]=v1.x,customAttribute.array[offset_custom+1]=v1.y,customAttribute.array[offset_custom+2]=v1.z,customAttribute.array[offset_custom+3]=v1.w,customAttribute.array[offset_custom+4]=v2.x,customAttribute.array[offset_custom+5]=v2.y,customAttribute.array[offset_custom+6]=v2.z,customAttribute.array[offset_custom+7]=v2.w,customAttribute.array[offset_custom+8]=v3.x,customAttribute.array[offset_custom+9]=v3.y,customAttribute.array[offset_custom+10]=v3.z,customAttribute.array[offset_custom+11]=v3.w,customAttribute.array[offset_custom+12]=v4.x,customAttribute.array[offset_custom+13]=v4.y,customAttribute.array[offset_custom+14]=v4.z,customAttribute.array[offset_custom+15]=v4.w,offset_custom+=16}else if("faces"===customAttribute.boundTo){for(f=0,fl=chunk_faces3.length;fl>f;f++)value=customAttribute.value[chunk_faces3[f]],v1=value,v2=value,v3=value,customAttribute.array[offset_custom]=v1.x,customAttribute.array[offset_custom+1]=v1.y,customAttribute.array[offset_custom+2]=v1.z,customAttribute.array[offset_custom+3]=v1.w,customAttribute.array[offset_custom+4]=v2.x,customAttribute.array[offset_custom+5]=v2.y,customAttribute.array[offset_custom+6]=v2.z,customAttribute.array[offset_custom+7]=v2.w,customAttribute.array[offset_custom+8]=v3.x,customAttribute.array[offset_custom+9]=v3.y,customAttribute.array[offset_custom+10]=v3.z,customAttribute.array[offset_custom+11]=v3.w,offset_custom+=12;for(f=0,fl=chunk_faces4.length;fl>f;f++)value=customAttribute.value[chunk_faces4[f]],v1=value,v2=value,v3=value,v4=value,customAttribute.array[offset_custom]=v1.x,customAttribute.array[offset_custom+1]=v1.y,customAttribute.array[offset_custom+2]=v1.z,customAttribute.array[offset_custom+3]=v1.w,customAttribute.array[offset_custom+4]=v2.x,customAttribute.array[offset_custom+5]=v2.y,customAttribute.array[offset_custom+6]=v2.z,customAttribute.array[offset_custom+7]=v2.w,customAttribute.array[offset_custom+8]=v3.x,customAttribute.array[offset_custom+9]=v3.y,customAttribute.array[offset_custom+10]=v3.z,customAttribute.array[offset_custom+11]=v3.w,customAttribute.array[offset_custom+12]=v4.x,customAttribute.array[offset_custom+13]=v4.y,customAttribute.array[offset_custom+14]=v4.z,customAttribute.array[offset_custom+15]=v4.w,offset_custom+=16}else if("faceVertices"===customAttribute.boundTo){for(f=0,fl=chunk_faces3.length;fl>f;f++)value=customAttribute.value[chunk_faces3[f]],v1=value[0],v2=value[1],v3=value[2],customAttribute.array[offset_custom]=v1.x,customAttribute.array[offset_custom+1]=v1.y,customAttribute.array[offset_custom+2]=v1.z,customAttribute.array[offset_custom+3]=v1.w,customAttribute.array[offset_custom+4]=v2.x,customAttribute.array[offset_custom+5]=v2.y,customAttribute.array[offset_custom+6]=v2.z,customAttribute.array[offset_custom+7]=v2.w,customAttribute.array[offset_custom+8]=v3.x,customAttribute.array[offset_custom+9]=v3.y,customAttribute.array[offset_custom+10]=v3.z,customAttribute.array[offset_custom+11]=v3.w,offset_custom+=12;for(f=0,fl=chunk_faces4.length;fl>f;f++)value=customAttribute.value[chunk_faces4[f]],v1=value[0],v2=value[1],v3=value[2],v4=value[3],customAttribute.array[offset_custom]=v1.x,customAttribute.array[offset_custom+1]=v1.y,customAttribute.array[offset_custom+2]=v1.z,customAttribute.array[offset_custom+3]=v1.w,customAttribute.array[offset_custom+4]=v2.x,customAttribute.array[offset_custom+5]=v2.y,customAttribute.array[offset_custom+6]=v2.z,customAttribute.array[offset_custom+7]=v2.w,customAttribute.array[offset_custom+8]=v3.x,customAttribute.array[offset_custom+9]=v3.y,customAttribute.array[offset_custom+10]=v3.z,customAttribute.array[offset_custom+11]=v3.w,customAttribute.array[offset_custom+12]=v4.x,customAttribute.array[offset_custom+13]=v4.y,customAttribute.array[offset_custom+14]=v4.z,customAttribute.array[offset_custom+15]=v4.w,offset_custom+=16}_gl.bindBuffer(_gl.ARRAY_BUFFER,customAttribute.buffer),_gl.bufferData(_gl.ARRAY_BUFFER,customAttribute.array,hint)}dispose&&(delete geometryGroup.__inittedArrays,delete geometryGroup.__colorArray,delete geometryGroup.__normalArray,delete geometryGroup.__tangentArray,delete geometryGroup.__uvArray,delete geometryGroup.__uv2Array,delete geometryGroup.__faceArray,delete geometryGroup.__vertexArray,delete geometryGroup.__lineArray,delete geometryGroup.__skinIndexArray,delete geometryGroup.__skinWeightArray)}}function setDirectBuffers(geometry,hint,dispose){var attributes=geometry.attributes,index=attributes.index,position=attributes.position,normal=attributes.normal,uv=attributes.uv,color=attributes.color,tangent=attributes.tangent;if(geometry.elementsNeedUpdate&&void 0!==index&&(_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,index.buffer),_gl.bufferData(_gl.ELEMENT_ARRAY_BUFFER,index.array,hint)),geometry.verticesNeedUpdate&&void 0!==position&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,position.buffer),_gl.bufferData(_gl.ARRAY_BUFFER,position.array,hint)),geometry.normalsNeedUpdate&&void 0!==normal&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,normal.buffer),_gl.bufferData(_gl.ARRAY_BUFFER,normal.array,hint)),geometry.uvsNeedUpdate&&void 0!==uv&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,uv.buffer),_gl.bufferData(_gl.ARRAY_BUFFER,uv.array,hint)),geometry.colorsNeedUpdate&&void 0!==color&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,color.buffer),_gl.bufferData(_gl.ARRAY_BUFFER,color.array,hint)),geometry.tangentsNeedUpdate&&void 0!==tangent&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,tangent.buffer),_gl.bufferData(_gl.ARRAY_BUFFER,tangent.array,hint)),dispose)for(var i in geometry.attributes)delete geometry.attributes[i].array
}function renderMesh(updateBuffers,__webglFaceBuffer,__webglFaceCount){updateBuffers&&_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,__webglFaceBuffer),_gl.drawElements(_gl.TRIANGLES,__webglFaceCount,_gl.UNSIGNED_SHORT,0),_this.info.render.calls++,_this.info.render.vertices+=__webglFaceCount,_this.info.render.faces+=__webglFaceCount/3}function renderParticleSystem(__webglParticleCount){_gl.drawArrays(_gl.POINTS,0,__webglParticleCount),_this.info.render.calls++,_this.info.render.points+=__webglParticleCount}function doUpdateBuffers(updateBuffers,attributes,material,__webglVertexBuffer,__webglCustomAttributesList,__webglColorBuffer,__webglNormalBuffer,__webglTangentBuffer,__webglUVBuffer,__webglUV2Buffer,__webglSkinIndicesBuffer,__webglSkinWeightsBuffer){updateBuffers&&(doUpdateVertexBuffer(attributes.position,__webglVertexBuffer),doUpdateCustomAttributes(attributes,__webglCustomAttributesList),doUpdateColors(attributes.color,__webglColorBuffer),doUpdateNormals(attributes.normal,__webglNormalBuffer),doUpdateTangents(attributes.tangent,__webglTangentBuffer),doUpdateUV(attributes.uv,__webglUVBuffer),doUpdateUV2(attributes.uv2,__webglUV2Buffer),doUpdateSkin(material,attributes,__webglSkinIndicesBuffer,__webglSkinWeightsBuffer))}function decideUpdateBuffers(wireframe,geometryGroupID,programID){var wireframeBit=wireframe?1:0,geometryGroupHash=16777215*geometryGroupID+2*programID+wireframeBit;return geometryGroupHash!==_currentGeometryGroupHash?(_currentGeometryGroupHash=geometryGroupHash,!0):!1}function doUpdateVertexBuffer(position,__webglVertexBuffer){_gl.bindBuffer(_gl.ARRAY_BUFFER,__webglVertexBuffer),_gl.vertexAttribPointer(position,3,_gl.FLOAT,!1,0,0)}function doUpdateSkin(material,attributes,__webglSkinIndicesBuffer,__webglSkinWeightsBuffer){material.skinning&&attributes.skinIndex>=0&&attributes.skinWeight>=0&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,__webglSkinIndicesBuffer),_gl.vertexAttribPointer(attributes.skinIndex,4,_gl.FLOAT,!1,0,0),_gl.bindBuffer(_gl.ARRAY_BUFFER,__webglSkinWeightsBuffer),_gl.vertexAttribPointer(attributes.skinWeight,4,_gl.FLOAT,!1,0,0))}function doUpdateCustomAttributes(attributes,__webglCustomAttributesList){if(__webglCustomAttributesList)for(var i=0,il=__webglCustomAttributesList.length;il>i;i++){var attribute=__webglCustomAttributesList[i];attributes[attribute.buffer.belongsToAttribute]>=0&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,attribute.buffer),_gl.vertexAttribPointer(attributes[attribute.buffer.belongsToAttribute],attribute.size,_gl.FLOAT,!1,0,0))}}function doUpdateColors(color,__webglColorBuffer){color>=0&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,__webglColorBuffer),_gl.vertexAttribPointer(color,3,_gl.FLOAT,!1,0,0))}function doUpdateNormals(normal,__webglNormalBuffer){normal>=0&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,__webglNormalBuffer),_gl.vertexAttribPointer(normal,3,_gl.FLOAT,!1,0,0))}function doUpdateTangents(tangent,__webglTangentBuffer){tangent>=0&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,__webglTangentBuffer),_gl.vertexAttribPointer(tangent,4,_gl.FLOAT,!1,0,0))}function doUpdateUV(uv,__webglUVBuffer){uv>=0&&(__webglUVBuffer?(_gl.bindBuffer(_gl.ARRAY_BUFFER,__webglUVBuffer),_gl.vertexAttribPointer(uv,2,_gl.FLOAT,!1,0,0),_gl.enableVertexAttribArray(uv)):_gl.disableVertexAttribArray(uv))}function doUpdateUV2(uv2,__webglUV2Buffer){uv2>=0&&(__webglUV2Buffer?(_gl.bindBuffer(_gl.ARRAY_BUFFER,__webglUV2Buffer),_gl.vertexAttribPointer(uv2,2,_gl.FLOAT,!1,0,0),_gl.enableVertexAttribArray(uv2)):_gl.disableVertexAttribArray(uv2))}function painterSort(a,b){return b.z-a.z}function renderPlugins(plugins,scene,camera){if(plugins.length)for(var i=0,il=plugins.length;il>i;i++)_currentProgram=null,_currentCamera=null,_oldBlending=-1,_oldDepthTest=-1,_oldDepthWrite=-1,_oldDoubleSided=-1,_oldFlipSided=-1,_currentGeometryGroupHash=-1,_currentMaterialId=-1,_lightsNeedUpdate=!0,plugins[i].render(scene,camera,_currentWidth,_currentHeight),_currentProgram=null,_currentCamera=null,_oldBlending=-1,_oldDepthTest=-1,_oldDepthWrite=-1,_oldDoubleSided=-1,_oldFlipSided=-1,_currentGeometryGroupHash=-1,_currentMaterialId=-1,_lightsNeedUpdate=!0}function renderObjects(renderList,reverse,materialType,camera,lights,fog,useBlending,overrideMaterial){var webglObject,object,buffer,material,start,end,delta;reverse?(start=renderList.length-1,end=-1,delta=-1):(start=0,end=renderList.length,delta=1);for(var i=start;i!==end;i+=delta)if(webglObject=renderList[i],webglObject.render){if(object=webglObject.object,buffer=webglObject.buffer,overrideMaterial)material=overrideMaterial;else{if(material=webglObject[materialType],!material)continue;useBlending&&_this.setBlending(material.blending,material.blendEquation,material.blendSrc,material.blendDst),_this.setDepthTest(material.depthTest),_this.setDepthWrite(material.depthWrite),setPolygonOffset(material.polygonOffset,material.polygonOffsetFactor,material.polygonOffsetUnits)}_this.setMaterialFaces(material),buffer instanceof THREE.BufferGeometry?_this.renderBufferDirect(camera,lights,fog,material,buffer,object):_this.renderBuffer(camera,lights,fog,material,buffer,object)}}function renderObjectsImmediate(renderList,materialType,camera,lights,fog,useBlending,overrideMaterial){for(var webglObject,object,material,i=0,il=renderList.length;il>i;i++)if(webglObject=renderList[i],object=webglObject.object,object.visible){if(overrideMaterial)material=overrideMaterial;else{if(material=webglObject[materialType],!material)continue;useBlending&&_this.setBlending(material.blending,material.blendEquation,material.blendSrc,material.blendDst),_this.setDepthTest(material.depthTest),_this.setDepthWrite(material.depthWrite),setPolygonOffset(material.polygonOffset,material.polygonOffsetFactor,material.polygonOffsetUnits)}_this.renderImmediateObject(camera,lights,fog,material,object)}}function unrollImmediateBufferMaterial(globject){var object=globject.object,material=object.material;material.transparent?(globject.transparent=material,globject.opaque=null):(globject.opaque=material,globject.transparent=null)}function unrollBufferMaterial(globject){var material,materialIndex,meshMaterial,object=globject.object,buffer=globject.buffer;meshMaterial=object.material,meshMaterial instanceof THREE.MeshFaceMaterial?(materialIndex=buffer.materialIndex,materialIndex>=0&&(material=object.geometry.materials[materialIndex],material.transparent?(globject.transparent=material,globject.opaque=null):(globject.opaque=material,globject.transparent=null))):(material=meshMaterial,material&&(material.transparent?(globject.transparent=material,globject.opaque=null):(globject.opaque=material,globject.transparent=null)))}function sortFacesByMaterial(geometry){var f,fl,face,materialIndex,vertices,materialHash,groupHash,hash_map={},numMorphTargets=geometry.morphTargets.length,numMorphNormals=geometry.morphNormals.length;for(geometry.geometryGroups={},f=0,fl=geometry.faces.length;fl>f;f++)face=geometry.faces[f],materialIndex=face.materialIndex,materialHash=void 0!==materialIndex?materialIndex:-1,void 0===hash_map[materialHash]&&(hash_map[materialHash]={hash:materialHash,counter:0}),groupHash=hash_map[materialHash].hash+"_"+hash_map[materialHash].counter,void 0===geometry.geometryGroups[groupHash]&&(geometry.geometryGroups[groupHash]={faces3:[],faces4:[],materialIndex:materialIndex,vertices:0,numMorphTargets:numMorphTargets,numMorphNormals:numMorphNormals}),vertices=face instanceof THREE.Face3?3:4,geometry.geometryGroups[groupHash].vertices+vertices>65535&&(hash_map[materialHash].counter+=1,groupHash=hash_map[materialHash].hash+"_"+hash_map[materialHash].counter,void 0===geometry.geometryGroups[groupHash]&&(geometry.geometryGroups[groupHash]={faces3:[],faces4:[],materialIndex:materialIndex,vertices:0,numMorphTargets:numMorphTargets,numMorphNormals:numMorphNormals})),face instanceof THREE.Face3?geometry.geometryGroups[groupHash].faces3.push(f):geometry.geometryGroups[groupHash].faces4.push(f),geometry.geometryGroups[groupHash].vertices+=vertices;geometry.geometryGroupsList=[];for(var g in geometry.geometryGroups)geometry.geometryGroups[g].id=_geometryGroupCounter++,geometry.geometryGroupsList.push(geometry.geometryGroups[g])}function addObject(object,scene){var g,geometry,geometryGroup;if(!object.__webglInit)if(object.__webglInit=!0,object._modelViewMatrix=new THREE.Matrix4,object._normalMatrix=new THREE.Matrix3,object instanceof THREE.Mesh)if(geometry=object.geometry,geometry instanceof THREE.Geometry){void 0===geometry.geometryGroups&&sortFacesByMaterial(geometry);for(g in geometry.geometryGroups)geometryGroup=geometry.geometryGroups[g],geometryGroup.__webglVertexBuffer||(createMeshBuffers(geometryGroup,object),initMeshBuffers(geometryGroup,object),geometry.verticesNeedUpdate=!0,geometry.morphTargetsNeedUpdate=!0,geometry.elementsNeedUpdate=!0,geometry.uvsNeedUpdate=!0,geometry.normalsNeedUpdate=!0,geometry.tangentsNeedUpdate=!0,geometry.colorsNeedUpdate=!0)}else geometry instanceof THREE.BufferGeometry&&initDirectBuffers(geometry,object.name);else object instanceof THREE.Ribbon?(geometry=object.geometry,geometry.__webglVertexBuffer||(createRibbonBuffers(geometry,object.name),initRibbonBuffers(geometry),geometry.verticesNeedUpdate=!0,geometry.colorsNeedUpdate=!0)):object instanceof THREE.Line?(geometry=object.geometry,geometry.__webglVertexBuffer||(createLineBuffers(geometry,object.name),initLineBuffers(geometry,object),geometry.verticesNeedUpdate=!0,geometry.colorsNeedUpdate=!0)):object instanceof THREE.ParticleSystem&&(geometry=object.geometry,geometry.__webglVertexBuffer||(geometry instanceof THREE.Geometry?(createParticleBuffers(geometry,object.name),initParticleBuffers(geometry,object),geometry.verticesNeedUpdate=!0,geometry.colorsNeedUpdate=!0):geometry instanceof THREE.BufferGeometry&&initDirectBuffers(geometry,object.name)));if(!object.__webglActive){if(object instanceof THREE.Mesh)if(geometry=object.geometry,geometry instanceof THREE.BufferGeometry)addBuffer(scene.__webglObjects,geometry,object);else for(g in geometry.geometryGroups)geometryGroup=geometry.geometryGroups[g],addBuffer(scene.__webglObjects,geometryGroup,object);else object instanceof THREE.Ribbon||object instanceof THREE.Line||object instanceof THREE.ParticleSystem?(geometry=object.geometry,addBuffer(scene.__webglObjects,geometry,object)):object instanceof THREE.ImmediateRenderObject||object.immediateRenderCallback?addBufferImmediate(scene.__webglObjectsImmediate,object):object instanceof THREE.Sprite?scene.__webglSprites.push(object):object instanceof THREE.LensFlare&&scene.__webglFlares.push(object);object.__webglActive=!0}}function addBuffer(objlist,buffer,object){objlist.push({buffer:buffer,object:object,opaque:null,transparent:null})}function addBufferImmediate(objlist,object){objlist.push({object:object,opaque:null,transparent:null})}function updateObject(object){var geometryGroup,customAttributesDirty,material,geometry=object.geometry;if(object instanceof THREE.Mesh)if(geometry instanceof THREE.BufferGeometry)(geometry.verticesNeedUpdate||geometry.elementsNeedUpdate||geometry.uvsNeedUpdate||geometry.normalsNeedUpdate||geometry.colorsNeedUpdate||geometry.tangentsNeedUpdate)&&setDirectBuffers(geometry,_gl.DYNAMIC_DRAW,!geometry.dynamic),geometry.verticesNeedUpdate=!1,geometry.elementsNeedUpdate=!1,geometry.uvsNeedUpdate=!1,geometry.normalsNeedUpdate=!1,geometry.colorsNeedUpdate=!1,geometry.tangentsNeedUpdate=!1;else{for(var i=0,il=geometry.geometryGroupsList.length;il>i;i++)geometryGroup=geometry.geometryGroupsList[i],material=getBufferMaterial(object,geometryGroup),customAttributesDirty=material.attributes&&areCustomAttributesDirty(material),(geometry.verticesNeedUpdate||geometry.morphTargetsNeedUpdate||geometry.elementsNeedUpdate||geometry.uvsNeedUpdate||geometry.normalsNeedUpdate||geometry.colorsNeedUpdate||geometry.tangentsNeedUpdate||customAttributesDirty)&&setMeshBuffers(geometryGroup,object,_gl.DYNAMIC_DRAW,!geometry.dynamic,material);geometry.verticesNeedUpdate=!1,geometry.morphTargetsNeedUpdate=!1,geometry.elementsNeedUpdate=!1,geometry.uvsNeedUpdate=!1,geometry.normalsNeedUpdate=!1,geometry.colorsNeedUpdate=!1,geometry.tangentsNeedUpdate=!1,material.attributes&&clearCustomAttributes(material)}else object instanceof THREE.Ribbon?((geometry.verticesNeedUpdate||geometry.colorsNeedUpdate)&&setRibbonBuffers(geometry,_gl.DYNAMIC_DRAW),geometry.verticesNeedUpdate=!1,geometry.colorsNeedUpdate=!1):object instanceof THREE.Line?(material=getBufferMaterial(object,geometryGroup),customAttributesDirty=material.attributes&&areCustomAttributesDirty(material),(geometry.verticesNeedUpdate||geometry.colorsNeedUpdate||customAttributesDirty)&&setLineBuffers(geometry,_gl.DYNAMIC_DRAW),geometry.verticesNeedUpdate=!1,geometry.colorsNeedUpdate=!1,material.attributes&&clearCustomAttributes(material)):object instanceof THREE.ParticleSystem&&(geometry instanceof THREE.BufferGeometry?((geometry.verticesNeedUpdate||geometry.colorsNeedUpdate)&&setDirectBuffers(geometry,_gl.DYNAMIC_DRAW,!geometry.dynamic),geometry.verticesNeedUpdate=!1,geometry.colorsNeedUpdate=!1):(material=getBufferMaterial(object,geometryGroup),customAttributesDirty=material.attributes&&areCustomAttributesDirty(material),(geometry.verticesNeedUpdate||geometry.colorsNeedUpdate||object.sortParticles||customAttributesDirty)&&setParticleBuffers(geometry,_gl.DYNAMIC_DRAW,object),geometry.verticesNeedUpdate=!1,geometry.colorsNeedUpdate=!1,material.attributes&&clearCustomAttributes(material)))}function areCustomAttributesDirty(material){for(var a in material.attributes)if(material.attributes[a].needsUpdate)return!0;return!1}function clearCustomAttributes(material){for(var a in material.attributes)material.attributes[a].needsUpdate=!1}function removeObject(object,scene){object instanceof THREE.Mesh||object instanceof THREE.ParticleSystem||object instanceof THREE.Ribbon||object instanceof THREE.Line?removeInstances(scene.__webglObjects,object):object instanceof THREE.Sprite?removeInstancesDirect(scene.__webglSprites,object):object instanceof THREE.LensFlare?removeInstancesDirect(scene.__webglFlares,object):(object instanceof THREE.ImmediateRenderObject||object.immediateRenderCallback)&&removeInstances(scene.__webglObjectsImmediate,object),object.__webglActive=!1}function removeInstances(objlist,object){for(var o=objlist.length-1;o>=0;o--)objlist[o].object===object&&objlist.splice(o,1)}function removeInstancesDirect(objlist,object){for(var o=objlist.length-1;o>=0;o--)objlist[o]===object&&objlist.splice(o,1)}function setMaterialShaders(material,shaders){material.uniforms=THREE.UniformsUtils.clone(shaders.uniforms),material.vertexShader=shaders.vertexShader,material.fragmentShader=shaders.fragmentShader}function setProgram(camera,lights,fog,material,object){_usedTextureUnits=0,material.needsUpdate&&(material.program&&_this.deallocateMaterial(material),_this.initMaterial(material,lights,fog,object),material.needsUpdate=!1);var program=material.program,p_uniforms=program.uniforms,m_uniforms=material.uniforms,refreshMaterial=decideRefreshMaterial(material,program,p_uniforms,camera);if(material.skinning&&handleSkinning(object,p_uniforms),refreshMaterial){if(refreshCommonUniforms(fog,m_uniforms,material,program,lights),refreshSpecificUniforms(material,m_uniforms,lights,camera),loadUniformsGeneric(program,material.uniformsList),(material instanceof THREE.ShaderMaterial||material instanceof THREE.MeshPhongMaterial||material.envMap)&&null!==p_uniforms.cameraPosition){var position=camera.matrixWorld.getPosition();setPosUniform(p_uniforms.cameraPosition,position.x,position.y,position.z)}(material instanceof THREE.MeshPhongMaterial||material instanceof THREE.MeshLambertMaterial||material instanceof THREE.ShaderMaterial||material.skinning)&&setViewMatrixUniforms(p_uniforms.viewMatrix,camera._viewMatrixArray)}return loadUniformsMatrices(p_uniforms.modelViewMatrix,p_uniforms.normalMatrix,object._modelViewMatrix,object._normalMatrix,p_uniforms.modelMatrix,object.matrixWorld),program}function setViewMatrixUniforms(viewMatrix,_viewMatrixArray){null!==viewMatrix&&_gl.uniformMatrix4fv(viewMatrix,!1,_viewMatrixArray)}function setPosUniform(cameraPosition,x,y,z){_gl.uniform3f(cameraPosition,x,y,z)}function loadUniformsMatrices(modelViewMatrix,normalMatrix,_modelViewMatrix,_normalMatrix,modelMatrix,matrixWorld){_gl.uniformMatrix4fv(modelViewMatrix,!1,_modelViewMatrix.elements),null!==normalMatrix&&_gl.uniformMatrix3fv(normalMatrix,!1,_normalMatrix.elements),null!==modelMatrix&&_gl.uniformMatrix4fv(modelMatrix,!1,matrixWorld.elements)}function decideRefreshMaterial(material,program,p_uniforms,camera){var refreshMaterial=!1;return program!==_currentProgram&&(_gl.useProgram(program),_currentProgram=program,refreshMaterial=!0),material.id!==_currentMaterialId&&(_currentMaterialId=material.id,refreshMaterial=!0),(refreshMaterial||camera!==_currentCamera)&&(setCameraProjMatrixUniform(p_uniforms.projectionMatrix,camera._projectionMatrixArray),camera!==_currentCamera&&(_currentCamera=camera)),refreshMaterial}function setCameraProjMatrixUniform(projectionMatrix,_projectionMatrixArray){_gl.uniformMatrix4fv(projectionMatrix,!1,_projectionMatrixArray)}function handleSkinning(object,p_uniforms){if(_supportsBoneTextures&&object.useVertexTexture){if(null!==p_uniforms.boneTexture){var textureUnit=getTextureUnit();_gl.uniform1i(p_uniforms.boneTexture,textureUnit),_this.setTexture(object.boneTexture,textureUnit)}}else null!==p_uniforms.boneGlobalMatrices&&_gl.uniformMatrix4fv(p_uniforms.boneGlobalMatrices,!1,object.boneMatrices)}function refreshCommonUniforms(fog,m_uniforms,material,program,lights){fog&&material.fog&&refreshUniformsFog(m_uniforms,fog),(material instanceof THREE.MeshPhongMaterial||material instanceof THREE.MeshLambertMaterial||material.lights)&&(_lightsNeedUpdate&&(setupLights(program,lights),_lightsNeedUpdate=!1),refreshUniformsLights(m_uniforms,_lights)),(material instanceof THREE.MeshBasicMaterial||material instanceof THREE.MeshLambertMaterial||material instanceof THREE.MeshPhongMaterial)&&refreshUniformsCommon(m_uniforms,material)}function refreshSpecificUniforms(material,m_uniforms,lights,camera){material instanceof THREE.LineBasicMaterial?refreshUniformsLine(m_uniforms,material):material instanceof THREE.ParticleBasicMaterial?refreshUniformsParticle(m_uniforms,material):material instanceof THREE.MeshPhongMaterial?refreshUniformsPhong(m_uniforms,material):material instanceof THREE.MeshLambertMaterial?refreshUniformsLambert(m_uniforms,material):material instanceof THREE.MeshDepthMaterial?(m_uniforms.mNear.value=camera.near,m_uniforms.mFar.value=camera.far,m_uniforms.opacity.value=material.opacity):material instanceof THREE.MeshNormalMaterial&&(m_uniforms.opacity.value=material.opacity)}function refreshUniformsCommon(uniforms,material){uniforms.opacity.value=material.opacity,_this.gammaInput?uniforms.diffuse.value.copyGammaToLinear(material.color):uniforms.diffuse.value=material.color,uniforms.map.value=material.map,uniforms.lightMap.value=material.lightMap,uniforms.specularMap.value=material.specularMap,material.bumpMap&&(uniforms.bumpMap.value=material.bumpMap,uniforms.bumpScale.value=material.bumpScale),material.normalMap&&(uniforms.normalMap.value=material.normalMap,uniforms.normalScale.value.copy(material.normalScale));var uvScaleMap;if(material.map?uvScaleMap=material.map:material.specularMap?uvScaleMap=material.specularMap:material.normalMap?uvScaleMap=material.normalMap:material.bumpMap&&(uvScaleMap=material.bumpMap),void 0!==uvScaleMap){var offset=uvScaleMap.offset,repeat=uvScaleMap.repeat;uniforms.offsetRepeat.value.set(offset.x,offset.y,repeat.x,repeat.y)}uniforms.envMap.value=material.envMap,uniforms.flipEnvMap.value=material.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,uniforms.reflectivity.value=_this.gammaInput?material.reflectivity:material.reflectivity,uniforms.refractionRatio.value=material.refractionRatio,uniforms.combine.value=material.combine,uniforms.useRefract.value=material.envMap&&material.envMap.mapping instanceof THREE.CubeRefractionMapping}function refreshUniformsLine(uniforms,material){uniforms.diffuse.value=material.color,uniforms.opacity.value=material.opacity}function refreshUniformsParticle(uniforms,material){uniforms.psColor.value=material.color,uniforms.opacity.value=material.opacity,uniforms.size.value=material.size,uniforms.scale.value=_canvas.height/2,uniforms.map.value=material.map}function refreshUniformsFog(uniforms,fog){uniforms.fogColor.value=fog.color,fog instanceof THREE.Fog?(uniforms.fogNear.value=fog.near,uniforms.fogFar.value=fog.far):fog instanceof THREE.FogExp2&&(uniforms.fogDensity.value=fog.density)}function refreshUniformsPhong(uniforms,material){uniforms.shininess.value=material.shininess,_this.gammaInput?(uniforms.ambient.value.copyGammaToLinear(material.ambient),uniforms.emissive.value.copyGammaToLinear(material.emissive),uniforms.specular.value.copyGammaToLinear(material.specular)):(uniforms.ambient.value=material.ambient,uniforms.emissive.value=material.emissive,uniforms.specular.value=material.specular),material.wrapAround&&uniforms.wrapRGB.value.copy(material.wrapRGB)}function refreshUniformsLambert(uniforms,material){_this.gammaInput?(uniforms.ambient.value.copyGammaToLinear(material.ambient),uniforms.emissive.value.copyGammaToLinear(material.emissive)):(uniforms.ambient.value=material.ambient,uniforms.emissive.value=material.emissive),material.wrapAround&&uniforms.wrapRGB.value.copy(material.wrapRGB)}function refreshUniformsLights(uniforms,lights){uniforms.ambientLightColor.value=lights.ambient,uniforms.directionalLightColor.value=lights.directional.colors,uniforms.directionalLightDirection.value=lights.directional.positions,uniforms.pointLightColor.value=lights.point.colors,uniforms.pointLightPosition.value=lights.point.positions,uniforms.pointLightDistance.value=lights.point.distances,uniforms.spotLightColor.value=lights.spot.colors,uniforms.spotLightPosition.value=lights.spot.positions,uniforms.spotLightDistance.value=lights.spot.distances,uniforms.spotLightDirection.value=lights.spot.directions,uniforms.spotLightAngle.value=lights.spot.angles,uniforms.spotLightExponent.value=lights.spot.exponents,uniforms.hemisphereLightSkyColor.value=lights.hemi.skyColors,uniforms.hemisphereLightGroundColor.value=lights.hemi.groundColors,uniforms.hemisphereLightPosition.value=lights.hemi.positions}function getTextureUnit(){var textureUnit=_usedTextureUnits;return textureUnit>=_maxTextures&&console.warn("Trying to use "+textureUnit+" texture units while this GPU supports only "+_maxTextures),_usedTextureUnits+=1,textureUnit}function loadUniformsGeneric(program,uniforms){var uniform,value,type,location,texture,textureUnit,i,il,j,jl,offset;for(j=0,jl=uniforms.length;jl>j;j++)if(location=program.uniforms[uniforms[j][1]])if(uniform=uniforms[j][0],type=uniform.type,value=uniform.value,"i"===type)_gl.uniform1i(location,value);else if("f"===type)_gl.uniform1f(location,value);else if("v2"===type)_gl.uniform2f(location,value.x,value.y);else if("v3"===type)_gl.uniform3f(location,value.x,value.y,value.z);else if("v4"===type)_gl.uniform4f(location,value.x,value.y,value.z,value.w);else if("c"===type)_gl.uniform3f(location,value.r,value.g,value.b);else if("iv1"===type)_gl.uniform1iv(location,value);else if("iv"===type)_gl.uniform3iv(location,value);else if("fv1"===type)_gl.uniform1fv(location,value);else if("fv"===type)_gl.uniform3fv(location,value);else if("v2v"===type){for(void 0===uniform._array&&(uniform._array=new Float32Array(2*value.length)),i=0,il=value.length;il>i;i++)offset=2*i,uniform._array[offset]=value[i].x,uniform._array[offset+1]=value[i].y;_gl.uniform2fv(location,uniform._array)}else if("v3v"===type){for(void 0===uniform._array&&(uniform._array=new Float32Array(3*value.length)),i=0,il=value.length;il>i;i++)offset=3*i,uniform._array[offset]=value[i].x,uniform._array[offset+1]=value[i].y,uniform._array[offset+2]=value[i].z;_gl.uniform3fv(location,uniform._array)}else if("v4v"===type){for(void 0===uniform._array&&(uniform._array=new Float32Array(4*value.length)),i=0,il=value.length;il>i;i++)offset=4*i,uniform._array[offset]=value[i].x,uniform._array[offset+1]=value[i].y,uniform._array[offset+2]=value[i].z,uniform._array[offset+3]=value[i].w;_gl.uniform4fv(location,uniform._array)}else if("m4"===type)void 0===uniform._array&&(uniform._array=new Float32Array(16)),value.flattenToArray(uniform._array),_gl.uniformMatrix4fv(location,!1,uniform._array);else if("m4v"===type){for(void 0===uniform._array&&(uniform._array=new Float32Array(16*value.length)),i=0,il=value.length;il>i;i++)value[i].flattenToArrayOffset(uniform._array,16*i);_gl.uniformMatrix4fv(location,!1,uniform._array)}else if("t"===type){if(texture=value,textureUnit=getTextureUnit(),_gl.uniform1i(location,textureUnit),!texture)continue;texture.image instanceof Array&&6===texture.image.length?setCubeTexture(texture,textureUnit):texture instanceof THREE.WebGLRenderTargetCube?setCubeTextureDynamic(texture,textureUnit):_this.setTexture(texture,textureUnit)}else if("tv"===type){for(void 0===uniform._array&&(uniform._array=[]),i=0,il=uniform.value.length;il>i;i++)uniform._array[i]=getTextureUnit();for(_gl.uniform1iv(location,uniform._array),i=0,il=uniform.value.length;il>i;i++)texture=uniform.value[i],textureUnit=uniform._array[i],texture&&_this.setTexture(texture,textureUnit)}}function setupMatrices(object,camera){object._modelViewMatrix.multiply(camera.matrixWorldInverse,object.matrixWorld),object._normalMatrix.getInverse(object._modelViewMatrix),object._normalMatrix.transpose()}function setColorGamma(array,offset,color,intensitySq){array[offset]=color.r*color.r*intensitySq,array[offset+1]=color.g*color.g*intensitySq,array[offset+2]=color.b*color.b*intensitySq}function setColorLinear(array,offset,color,intensity){array[offset]=color.r*intensity,array[offset+1]=color.g*intensity,array[offset+2]=color.b*intensity}function setupLights(program,lights){var l,ll,light,color,skyColor,groundColor,intensity,intensitySq,position,distance,r=0,g=0,b=0,zlights=_lights,dirColors=zlights.directional.colors,dirPositions=zlights.directional.positions,pointColors=zlights.point.colors,pointPositions=zlights.point.positions,pointDistances=zlights.point.distances,spotColors=zlights.spot.colors,spotPositions=zlights.spot.positions,spotDistances=zlights.spot.distances,spotDirections=zlights.spot.directions,spotAngles=zlights.spot.angles,spotExponents=zlights.spot.exponents,hemiSkyColors=zlights.hemi.skyColors,hemiGroundColors=zlights.hemi.groundColors,hemiPositions=zlights.hemi.positions,dirLength=0,pointLength=0,spotLength=0,hemiLength=0,dirOffset=0,pointOffset=0,spotOffset=0,hemiOffset=0;for(l=0,ll=lights.length;ll>l;l++)light=lights[l],!light.onlyShadow&&light.visible&&(color=light.color,intensity=light.intensity,distance=light.distance,light instanceof THREE.AmbientLight?_this.gammaInput?(r+=color.r*color.r,g+=color.g*color.g,b+=color.b*color.b):(r+=color.r,g+=color.g,b+=color.b):light instanceof THREE.DirectionalLight?(dirOffset=3*dirLength,_this.gammaInput?setColorGamma(dirColors,dirOffset,color,intensity*intensity):setColorLinear(dirColors,dirOffset,color,intensity),_direction.copy(light.matrixWorld.getPosition()),_direction.subSelf(light.target.matrixWorld.getPosition()),_direction.normalize(),dirPositions[dirOffset]=_direction.x,dirPositions[dirOffset+1]=_direction.y,dirPositions[dirOffset+2]=_direction.z,dirLength+=1):light instanceof THREE.PointLight?(pointOffset=3*pointLength,_this.gammaInput?setColorGamma(pointColors,pointOffset,color,intensity*intensity):setColorLinear(pointColors,pointOffset,color,intensity),position=light.matrixWorld.getPosition(),pointPositions[pointOffset]=position.x,pointPositions[pointOffset+1]=position.y,pointPositions[pointOffset+2]=position.z,pointDistances[pointLength]=distance,pointLength+=1):light instanceof THREE.SpotLight?(spotOffset=3*spotLength,_this.gammaInput?setColorGamma(spotColors,spotOffset,color,intensity*intensity):setColorLinear(spotColors,spotOffset,color,intensity),position=light.matrixWorld.getPosition(),spotPositions[spotOffset]=position.x,spotPositions[spotOffset+1]=position.y,spotPositions[spotOffset+2]=position.z,spotDistances[spotLength]=distance,_direction.copy(position),_direction.subSelf(light.target.matrixWorld.getPosition()),_direction.normalize(),spotDirections[spotOffset]=_direction.x,spotDirections[spotOffset+1]=_direction.y,spotDirections[spotOffset+2]=_direction.z,spotAngles[spotLength]=Math.cos(light.angle),spotExponents[spotLength]=light.exponent,spotLength+=1):light instanceof THREE.HemisphereLight&&(skyColor=light.color,groundColor=light.groundColor,hemiOffset=3*hemiLength,_this.gammaInput?(intensitySq=intensity*intensity,setColorGamma(hemiSkyColors,hemiOffset,skyColor,intensitySq),setColorGamma(hemiGroundColors,hemiOffset,groundColor,intensitySq)):(setColorLinear(hemiSkyColors,hemiOffset,skyColor,intensity),setColorLinear(hemiGroundColors,hemiOffset,groundColor,intensity)),position=light.matrixWorld.getPosition(),hemiPositions[hemiOffset]=position.x,hemiPositions[hemiOffset+1]=position.y,hemiPositions[hemiOffset+2]=position.z,hemiLength+=1));for(l=3*dirLength,ll=dirColors.length;ll>l;l++)dirColors[l]=0;for(l=3*pointLength,ll=pointColors.length;ll>l;l++)pointColors[l]=0;for(l=3*spotLength,ll=spotColors.length;ll>l;l++)spotColors[l]=0;for(l=3*hemiLength,ll=hemiSkyColors.length;ll>l;l++)hemiSkyColors[l]=0;for(l=3*hemiLength,ll=hemiGroundColors.length;ll>l;l++)hemiGroundColors[l]=0;zlights.directional.length=dirLength,zlights.point.length=pointLength,zlights.spot.length=spotLength,zlights.hemi.length=hemiLength,zlights.ambient[0]=r,zlights.ambient[1]=g,zlights.ambient[2]=b}function setPolygonOffset(polygonoffset,factor,units){_oldPolygonOffset!==polygonoffset&&(polygonoffset?_gl.enable(_gl.POLYGON_OFFSET_FILL):_gl.disable(_gl.POLYGON_OFFSET_FILL),_oldPolygonOffset=polygonoffset),!polygonoffset||_oldPolygonOffsetFactor===factor&&_oldPolygonOffsetUnits===units||(_gl.polygonOffset(factor,units),_oldPolygonOffsetFactor=factor,_oldPolygonOffsetUnits=units)}function buildProgram(shaderID,fragmentShader,vertexShader,uniforms,attributes,parameters){var p,pl,program,code,chunks=[];shaderID?chunks.push(shaderID):(chunks.push(fragmentShader),chunks.push(vertexShader));for(p in parameters)chunks.push(p),chunks.push(parameters[p]);for(code=chunks.join(),p=0,pl=_programs.length;pl>p;p++){var programInfo=_programs[p];if(programInfo.code===code)return programInfo.usedTimes++,programInfo.program}program=_gl.createProgram(),program.displayName=parameters.name;var prefix_vertex=["precision "+_precision+" float;",_supportsVertexTextures?"#define VERTEX_TEXTURES":"",_this.gammaInput?"#define GAMMA_INPUT":"",_this.gammaOutput?"#define GAMMA_OUTPUT":"",_this.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+parameters.maxDirLights,"#define MAX_POINT_LIGHTS "+parameters.maxPointLights,"#define MAX_SPOT_LIGHTS "+parameters.maxSpotLights,"#define MAX_HEMI_LIGHTS "+parameters.maxHemiLights,"#define MAX_SHADOWS "+parameters.maxShadows,"#define MAX_BONES "+parameters.maxBones,parameters.map?"#define USE_MAP":"",parameters.envMap?"#define USE_ENVMAP":"",parameters.lightMap?"#define USE_LIGHTMAP":"",parameters.bumpMap?"#define USE_BUMPMAP":"",parameters.normalMap?"#define USE_NORMALMAP":"",parameters.specularMap?"#define USE_SPECULARMAP":"",parameters.vertexColors?"#define USE_COLOR":"",parameters.skinning?"#define USE_SKINNING":"",parameters.useVertexTexture?"#define BONE_TEXTURE":"",parameters.boneTextureWidth?"#define N_BONE_PIXEL_X "+parameters.boneTextureWidth.toFixed(1):"",parameters.boneTextureHeight?"#define N_BONE_PIXEL_Y "+parameters.boneTextureHeight.toFixed(1):"",parameters.morphTargets?"#define USE_MORPHTARGETS":"",parameters.morphNormals?"#define USE_MORPHNORMALS":"",parameters.perPixel?"#define PHONG_PER_PIXEL":"",parameters.wrapAround?"#define WRAP_AROUND":"",parameters.doubleSided?"#define DOUBLE_SIDED":"",parameters.flipSided?"#define FLIP_SIDED":"",parameters.shadowMapEnabled?"#define USE_SHADOWMAP":"",parameters.shadowMapSoft?"#define SHADOWMAP_SOFT":"",parameters.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",parameters.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",parameters.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","attribute vec2 uv2;","#ifdef USE_COLOR","attribute vec3 color;","#endif","#ifdef USE_SKINNING","attribute vec4 skinIndex;","attribute vec4 skinWeight;","#endif",""].join("\n"),prefix_fragment=["precision "+_precision+" float;",parameters.bumpMap||parameters.normalMap?"#extension GL_OES_standard_derivatives : enable":"","#define MAX_DIR_LIGHTS "+parameters.maxDirLights,"#define MAX_POINT_LIGHTS "+parameters.maxPointLights,"#define MAX_SPOT_LIGHTS "+parameters.maxSpotLights,"#define MAX_HEMI_LIGHTS "+parameters.maxHemiLights,"#define MAX_SHADOWS "+parameters.maxShadows,parameters.alphaTest?"#define ALPHATEST "+parameters.alphaTest:"",_supportsVertexTextures?"#define VERTEX_TEXTURES":"",_this.gammaInput?"#define GAMMA_INPUT":"",_this.gammaOutput?"#define GAMMA_OUTPUT":"",_this.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",parameters.useFog&&parameters.fog?"#define USE_FOG":"",parameters.useFog&&parameters.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",parameters.map?"#define USE_MAP":"",parameters.envMap?"#define USE_ENVMAP":"",parameters.lightMap?"#define USE_LIGHTMAP":"",parameters.bumpMap?"#define USE_BUMPMAP":"",parameters.normalMap?"#define USE_NORMALMAP":"",parameters.specularMap?"#define USE_SPECULARMAP":"",parameters.vertexColors?"#define USE_COLOR":"",parameters.metal?"#define METAL":"",parameters.perPixel?"#define PHONG_PER_PIXEL":"",parameters.wrapAround?"#define WRAP_AROUND":"",parameters.doubleSided?"#define DOUBLE_SIDED":"",parameters.flipSided?"#define FLIP_SIDED":"",parameters.shadowMapEnabled?"#define USE_SHADOWMAP":"",parameters.shadowMapSoft?"#define SHADOWMAP_SOFT":"",parameters.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",parameters.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",""].join("\n"),glFragmentShader=getShader("fragment",prefix_fragment+fragmentShader),glVertexShader=getShader("vertex",prefix_vertex+vertexShader);
if(_gl.attachShader(program,glVertexShader),_gl.attachShader(program,glFragmentShader),_gl.linkProgram(program),!_gl.getProgramParameter(program,_gl.LINK_STATUS)){var errorString="Could not initialise shader ["+parameters.name+"] , VALIDATE_STATUS: "+_gl.getProgramParameter(program,_gl.VALIDATE_STATUS)+", gl error ["+_gl.getError()+"]";console.error(errorString),_this.onError(errorString)}_gl.deleteShader(glFragmentShader),_gl.deleteShader(glVertexShader),program.uniforms={},program.attributes={};var identifiers,u,a,i;identifiers=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","modelMatrix","cameraPosition","morphTargetInfluences"],parameters.useVertexTexture?identifiers.push("boneTexture"):identifiers.push("boneGlobalMatrices");for(u in uniforms)identifiers.push(u);for(cacheUniformLocations(program,identifiers),identifiers=["position","normal","uv","uv2","tangent","color","skinIndex","skinWeight"],i=0;parameters.maxMorphTargets>i;i++)identifiers.push("morphTarget"+i);for(i=0;parameters.maxMorphNormals>i;i++)identifiers.push("morphNormal"+i);for(a in attributes)identifiers.push(a);return cacheAttributeLocations(program,identifiers),program.id=_programs_counter++,_programs.push({program:program,code:code,usedTimes:1}),_this.info.memory.programs=_programs.length,program}function cacheUniformLocations(program,identifiers){var i,l,id;for(i=0,l=identifiers.length;l>i;i++)id=identifiers[i],program.uniforms[id]=_gl.getUniformLocation(program,id)}function cacheAttributeLocations(program,identifiers){var i,l,id;for(i=0,l=identifiers.length;l>i;i++)id=identifiers[i],program.attributes[id]=_gl.getAttribLocation(program,id)}function addLineNumbers(string){for(var chunks=string.split("\n"),i=0,il=chunks.length;il>i;i++)chunks[i]=i+1+": "+chunks[i];return chunks.join("\n")}function getShader(type,string){var shader;if("fragment"===type?shader=_gl.createShader(_gl.FRAGMENT_SHADER):"vertex"===type&&(shader=_gl.createShader(_gl.VERTEX_SHADER)),_gl.shaderSource(shader,string),_gl.compileShader(shader),!_gl.getShaderParameter(shader,_gl.COMPILE_STATUS)){var errorString="SHADER COMPILATION ERROR: "+_gl.getShaderInfoLog(shader);return console.error(errorString),_this.onError(errorString),console.error(addLineNumbers(string)),null}return shader}function isPowerOfTwo(value){return 0===(value&value-1)}function setTextureParameters(textureType,texture,isImagePowerOfTwo){isImagePowerOfTwo?(_gl.texParameteri(textureType,_gl.TEXTURE_WRAP_S,paramThreeToGL(texture.wrapS)),_gl.texParameteri(textureType,_gl.TEXTURE_WRAP_T,paramThreeToGL(texture.wrapT)),_gl.texParameteri(textureType,_gl.TEXTURE_MAG_FILTER,paramThreeToGL(texture.magFilter)),_gl.texParameteri(textureType,_gl.TEXTURE_MIN_FILTER,paramThreeToGL(texture.minFilter))):(_gl.texParameteri(textureType,_gl.TEXTURE_WRAP_S,_gl.CLAMP_TO_EDGE),_gl.texParameteri(textureType,_gl.TEXTURE_WRAP_T,_gl.CLAMP_TO_EDGE),_gl.texParameteri(textureType,_gl.TEXTURE_MAG_FILTER,filterFallback(texture.magFilter)),_gl.texParameteri(textureType,_gl.TEXTURE_MIN_FILTER,filterFallback(texture.minFilter))),_glExtensionTextureFilterAnisotropic&&_maxAnisotropy>1&&texture.type!==THREE.FloatType&&(texture.anisotropy>1||texture.__oldAnisotropy)&&(_gl.texParameterf(textureType,_glExtensionTextureFilterAnisotropic.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(texture.anisotropy,_maxAnisotropy)),texture.__oldAnisotropy=texture.anisotropy)}function setTextureUpdate(texture,slot){texture.__webglInit||(texture.__webglInit=!0,texture.__webglTexture=_gl.createTexture(),texture.__webglTexture.displayName=texture.name,_this.info.memory.textures++),_gl.activeTexture(_gl.TEXTURE0+slot),_gl.bindTexture(_gl.TEXTURE_2D,texture.__webglTexture),_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL,texture.flipY),_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,texture.premultiplyAlpha);var image=texture.image,isImagePowerOfTwo=isPowerOfTwo(image.width)&&isPowerOfTwo(image.height),glFormat=paramThreeToGL(texture.format),glType=paramThreeToGL(texture.type);if(setTextureParameters(_gl.TEXTURE_2D,texture,isImagePowerOfTwo),texture instanceof THREE.CompressedTexture)for(var mipmap,mipmaps=texture.mipmaps,i=0,il=mipmaps.length;il>i;i++)mipmap=mipmaps[i],_gl.compressedTexImage2D(_gl.TEXTURE_2D,i,glFormat,mipmap.width,mipmap.height,0,mipmap.data);else texture instanceof THREE.DataTexture?_gl.texImage2D(_gl.TEXTURE_2D,0,glFormat,image.width,image.height,0,glFormat,glType,image.data):_gl.texImage2D(_gl.TEXTURE_2D,0,glFormat,glFormat,glType,texture.image);texture.generateMipmaps&&isImagePowerOfTwo&&_gl.generateMipmap(_gl.TEXTURE_2D),texture.needsUpdate=!1}function setTexttureNonUpdate(__webglTexture,slot){_gl.activeTexture(_gl.TEXTURE0+slot),_gl.bindTexture(_gl.TEXTURE_2D,__webglTexture)}function clampToMaxSize(image,maxSize){if(maxSize>=image.width&&maxSize>=image.height)return image;var maxDimension=Math.max(image.width,image.height),newWidth=Math.floor(image.width*maxSize/maxDimension),newHeight=Math.floor(image.height*maxSize/maxDimension),canvas=document.createElement("canvas");canvas.width=newWidth,canvas.height=newHeight;var ctx=canvas.getContext("2d");return ctx.drawImage(image,0,0,image.width,image.height,0,0,newWidth,newHeight),canvas}function setCubeTexture(texture,slot){if(6===texture.image.length)if(texture.needsUpdate){texture.image.__webglTextureCube||(texture.image.__webglTextureCube=_gl.createTexture()),_gl.activeTexture(_gl.TEXTURE0+slot),_gl.bindTexture(_gl.TEXTURE_CUBE_MAP,texture.image.__webglTextureCube),_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL,texture.flipY);for(var isCompressed=texture instanceof THREE.CompressedTexture,cubeImage=[],i=0;6>i;i++)cubeImage[i]=_this.autoScaleCubemaps&&!isCompressed?clampToMaxSize(texture.image[i],_maxCubemapSize):texture.image[i];var image=cubeImage[0],isImagePowerOfTwo=isPowerOfTwo(image.width)&&isPowerOfTwo(image.height),glFormat=paramThreeToGL(texture.format),glType=paramThreeToGL(texture.type);setTextureParameters(_gl.TEXTURE_CUBE_MAP,texture,isImagePowerOfTwo);for(var i=0;6>i;i++)if(isCompressed)for(var mipmap,mipmaps=cubeImage[i].mipmaps,j=0,jl=mipmaps.length;jl>j;j++)mipmap=mipmaps[j],_gl.compressedTexImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+i,j,glFormat,mipmap.width,mipmap.height,0,mipmap.data);else _gl.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+i,0,glFormat,glFormat,glType,cubeImage[i]);texture.generateMipmaps&&isImagePowerOfTwo&&_gl.generateMipmap(_gl.TEXTURE_CUBE_MAP),texture.needsUpdate=!1,texture.onUpdate&&texture.onUpdate()}else _gl.activeTexture(_gl.TEXTURE0+slot),_gl.bindTexture(_gl.TEXTURE_CUBE_MAP,texture.image.__webglTextureCube)}function setCubeTextureDynamic(texture,slot){_gl.activeTexture(_gl.TEXTURE0+slot),_gl.bindTexture(_gl.TEXTURE_CUBE_MAP,texture.__webglTexture)}function setupFrameBuffer(framebuffer,renderTarget,textureTarget){_gl.bindFramebuffer(_gl.FRAMEBUFFER,framebuffer),_gl.framebufferTexture2D(_gl.FRAMEBUFFER,_gl.COLOR_ATTACHMENT0,textureTarget,renderTarget.__webglTexture,0)}function setupRenderBuffer(renderbuffer,renderTarget){_gl.bindRenderbuffer(_gl.RENDERBUFFER,renderbuffer),renderTarget.depthBuffer&&!renderTarget.stencilBuffer?(_gl.renderbufferStorage(_gl.RENDERBUFFER,_gl.DEPTH_COMPONENT16,renderTarget.width,renderTarget.height),_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER,_gl.DEPTH_ATTACHMENT,_gl.RENDERBUFFER,renderbuffer)):renderTarget.depthBuffer&&renderTarget.stencilBuffer?(_gl.renderbufferStorage(_gl.RENDERBUFFER,_gl.DEPTH_STENCIL,renderTarget.width,renderTarget.height),_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER,_gl.DEPTH_STENCIL_ATTACHMENT,_gl.RENDERBUFFER,renderbuffer)):_gl.renderbufferStorage(_gl.RENDERBUFFER,_gl.RGBA4,renderTarget.width,renderTarget.height)}function updateRenderTargetMipmap(renderTarget){renderTarget instanceof THREE.WebGLRenderTargetCube?(_gl.bindTexture(_gl.TEXTURE_CUBE_MAP,renderTarget.__webglTexture),_gl.generateMipmap(_gl.TEXTURE_CUBE_MAP),_gl.bindTexture(_gl.TEXTURE_CUBE_MAP,null)):(_gl.bindTexture(_gl.TEXTURE_2D,renderTarget.__webglTexture),_gl.generateMipmap(_gl.TEXTURE_2D),_gl.bindTexture(_gl.TEXTURE_2D,null))}function filterFallback(f){return f===THREE.NearestFilter||f===THREE.NearestMipMapNearestFilter||f===THREE.NearestMipMapLinearFilter?_gl.NEAREST:_gl.LINEAR}function paramThreeToGL(p){if(p===THREE.RepeatWrapping)return _gl.REPEAT;if(p===THREE.ClampToEdgeWrapping)return _gl.CLAMP_TO_EDGE;if(p===THREE.MirroredRepeatWrapping)return _gl.MIRRORED_REPEAT;if(p===THREE.NearestFilter)return _gl.NEAREST;if(p===THREE.NearestMipMapNearestFilter)return _gl.NEAREST_MIPMAP_NEAREST;if(p===THREE.NearestMipMapLinearFilter)return _gl.NEAREST_MIPMAP_LINEAR;if(p===THREE.LinearFilter)return _gl.LINEAR;if(p===THREE.LinearMipMapNearestFilter)return _gl.LINEAR_MIPMAP_NEAREST;if(p===THREE.LinearMipMapLinearFilter)return _gl.LINEAR_MIPMAP_LINEAR;if(p===THREE.UnsignedByteType)return _gl.UNSIGNED_BYTE;if(p===THREE.UnsignedShort4444Type)return _gl.UNSIGNED_SHORT_4_4_4_4;if(p===THREE.UnsignedShort5551Type)return _gl.UNSIGNED_SHORT_5_5_5_1;if(p===THREE.UnsignedShort565Type)return _gl.UNSIGNED_SHORT_5_6_5;if(p===THREE.ByteType)return _gl.BYTE;if(p===THREE.ShortType)return _gl.SHORT;if(p===THREE.UnsignedShortType)return _gl.UNSIGNED_SHORT;if(p===THREE.IntType)return _gl.INT;if(p===THREE.UnsignedIntType)return _gl.UNSIGNED_INT;if(p===THREE.FloatType)return _gl.FLOAT;if(p===THREE.AlphaFormat)return _gl.ALPHA;if(p===THREE.RGBFormat)return _gl.RGB;if(p===THREE.RGBAFormat)return _gl.RGBA;if(p===THREE.LuminanceFormat)return _gl.LUMINANCE;if(p===THREE.LuminanceAlphaFormat)return _gl.LUMINANCE_ALPHA;if(p===THREE.AddEquation)return _gl.FUNC_ADD;if(p===THREE.SubtractEquation)return _gl.FUNC_SUBTRACT;if(p===THREE.ReverseSubtractEquation)return _gl.FUNC_REVERSE_SUBTRACT;if(p===THREE.ZeroFactor)return _gl.ZERO;if(p===THREE.OneFactor)return _gl.ONE;if(p===THREE.SrcColorFactor)return _gl.SRC_COLOR;if(p===THREE.OneMinusSrcColorFactor)return _gl.ONE_MINUS_SRC_COLOR;if(p===THREE.SrcAlphaFactor)return _gl.SRC_ALPHA;if(p===THREE.OneMinusSrcAlphaFactor)return _gl.ONE_MINUS_SRC_ALPHA;if(p===THREE.DstAlphaFactor)return _gl.DST_ALPHA;if(p===THREE.OneMinusDstAlphaFactor)return _gl.ONE_MINUS_DST_ALPHA;if(p===THREE.DstColorFactor)return _gl.DST_COLOR;if(p===THREE.OneMinusDstColorFactor)return _gl.ONE_MINUS_DST_COLOR;if(p===THREE.SrcAlphaSaturateFactor)return _gl.SRC_ALPHA_SATURATE;if(void 0!==_glExtensionCompressedTextureS3TC){if(p===THREE.RGB_S3TC_DXT1_Format)return _glExtensionCompressedTextureS3TC.COMPRESSED_RGB_S3TC_DXT1_EXT;if(p===THREE.RGBA_S3TC_DXT1_Format)return _glExtensionCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(p===THREE.RGBA_S3TC_DXT3_Format)return _glExtensionCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(p===THREE.RGBA_S3TC_DXT5_Format)return _glExtensionCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}function allocateBones(object){if(_supportsBoneTextures&&object&&object.useVertexTexture)return 1024;var nVertexUniforms=_gl.getParameter(_gl.MAX_VERTEX_UNIFORM_VECTORS),nVertexMatrices=Math.floor((nVertexUniforms-20)/4),maxBones=nVertexMatrices;return void 0!==object&&object instanceof THREE.SkinnedMesh&&(maxBones=Math.min(object.bones.length,maxBones),object.bones.length>maxBones&&console.warn("WebGLRenderer: too many bones - "+object.bones.length+", this GPU supports just "+maxBones+" (try OpenGL instead of ANGLE)")),maxBones}function allocateLights(lights){var l,ll,light,dirLights,pointLights,spotLights,hemiLights,maxDirLights,maxPointLights,maxSpotLights,maxHemiLights;for(dirLights=pointLights=spotLights=hemiLights=maxDirLights=maxPointLights=maxSpotLights=maxHemiLights=0,l=0,ll=lights.length;ll>l;l++)light=lights[l],light.onlyShadow||(light instanceof THREE.DirectionalLight&&dirLights++,light instanceof THREE.PointLight&&pointLights++,light instanceof THREE.SpotLight&&spotLights++,light instanceof THREE.HemisphereLight&&hemiLights++);return _maxLights>=pointLights+spotLights+dirLights+hemiLights?(maxDirLights=dirLights,maxPointLights=pointLights,maxSpotLights=spotLights,maxHemiLights=hemiLights):(maxDirLights=Math.ceil(_maxLights*dirLights/(pointLights+dirLights)),maxPointLights=_maxLights-maxDirLights,maxSpotLights=maxPointLights,maxHemiLights=maxDirLights),{directional:maxDirLights,point:maxPointLights,spot:maxSpotLights,hemi:maxHemiLights}}function allocateShadows(lights){var l,ll,light,maxShadows=0;for(l=0,ll=lights.length;ll>l;l++)light=lights[l],light.castShadow&&(light instanceof THREE.SpotLight&&maxShadows++,light instanceof THREE.DirectionalLight&&!light.shadowCascade&&maxShadows++);return maxShadows}function initGL(){try{if(!(_gl=_canvas.getContext("experimental-webgl",{alpha:_alpha,premultipliedAlpha:_premultipliedAlpha,antialias:_antialias,stencil:_stencil,preserveDrawingBuffer:_preserveDrawingBuffer})))throw"Error creating WebGL context."}catch(error){console.error(error)}if(_glExtensionTextureFloat=_gl.getExtension("OES_texture_float"),_glExtensionStandardDerivatives=_gl.getExtension("OES_standard_derivatives"),_glExtensionTextureFilterAnisotropic=_gl.getExtension("EXT_texture_filter_anisotropic")||_gl.getExtension("MOZ_EXT_texture_filter_anisotropic")||_gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic"),_glExtensionCompressedTextureS3TC=_gl.getExtension("WEBGL_compressed_texture_s3tc")||_gl.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||_gl.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"),_glExtensionTextureFloat||console.log("THREE.WebGLRenderer: Float textures not supported."),_glExtensionStandardDerivatives||console.log("THREE.WebGLRenderer: Standard derivatives not supported."),_glExtensionTextureFilterAnisotropic||(console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported."),THREE.WebGLRenderer.AnisotropySupported=!1),_glExtensionCompressedTextureS3TC){var i,formats=_gl.getParameter(_gl.COMPRESSED_TEXTURE_FORMATS),dxt5Supported=!1,dxt3Supported=!1,dxt1Supported=!1,dxt1Supported2=!1;if(null!=formats){for(i in formats)formats[i]==_glExtensionCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT5_EXT&&(dxt5Supported=!0),formats[i]==_glExtensionCompressedTextureS3TC.COMPRESSED_RGB_S3TC_DXT1_EXT&&(dxt1Supported=!0),formats[i]==_glExtensionCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT1_EXT&&(dxt1Supported2=!0),formats[i]==_glExtensionCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT3_EXT&&(dxt3Supported=!0);THREE.WebGLRenderer.DDSSupported=dxt5Supported&&dxt3Supported&&dxt1Supported&&dxt1Supported2}else THREE.WebGLRenderer.DDSSupported=!1}else THREE.WebGLRenderer.DDSSupported=!1,console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.")}function setDefaultGLState(){_gl.clearColor(0,0,0,1),_gl.clearDepth(1),_gl.clearStencil(0),_gl.enable(_gl.DEPTH_TEST),_gl.depthFunc(_gl.LEQUAL),_gl.frontFace(_gl.CCW),_gl.cullFace(_gl.BACK),_gl.enable(_gl.CULL_FACE),_gl.enable(_gl.BLEND),_gl.blendEquation(_gl.FUNC_ADD),_gl.blendFunc(_gl.SRC_ALPHA,_gl.ONE_MINUS_SRC_ALPHA),_gl.clearColor(_clearColor.r,_clearColor.g,_clearColor.b,_clearAlpha)}console.log("THREE.WebGLRenderer",THREE.REVISION),parameters=parameters||{};var _canvas=void 0!==parameters.canvas?parameters.canvas:document.createElement("canvas"),_precision=void 0!==parameters.precision?parameters.precision:"highp",_alpha=void 0!==parameters.alpha?parameters.alpha:!0,_premultipliedAlpha=void 0!==parameters.premultipliedAlpha?parameters.premultipliedAlpha:!0,_antialias=void 0!==parameters.antialias?parameters.antialias:!1,_stencil=void 0!==parameters.stencil?parameters.stencil:!0,_preserveDrawingBuffer=void 0!==parameters.preserveDrawingBuffer?parameters.preserveDrawingBuffer:!1,_clearColor=void 0!==parameters.clearColor?new THREE.Color(parameters.clearColor):new THREE.Color(0),_clearAlpha=void 0!==parameters.clearAlpha?parameters.clearAlpha:0,_maxLights=void 0!==parameters.maxLights?parameters.maxLights:4;this.domElement=_canvas,this.context=null,THREE.WebGLRenderer.DDSSupported=!0,THREE.WebGLRenderer.AnisotropySupported=!0,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.autoUpdateObjects=!0,this.autoUpdateScene=!0,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyBasedShading=!1,this.shadowMapEnabled=!1,this.shadowMapAutoUpdate=!0,this.shadowMapSoft=!0,this.shadowMapCullFrontFaces=!0,this.shadowMapDebug=!1,this.shadowMapCascade=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.renderPluginsPre=[],this.renderPluginsPost=[],this.onError=function(){},this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var _gl,_glExtensionTextureFloat,_glExtensionStandardDerivatives,_glExtensionTextureFilterAnisotropic,_glExtensionCompressedTextureS3TC,_this=this,_programs=[],_programs_counter=0,_currentProgram=null,_currentFramebuffer=null,_currentMaterialId=-1,_currentGeometryGroupHash=null,_currentCamera=null,_geometryGroupCounter=0,_usedTextureUnits=0,_oldDoubleSided=-1,_oldFlipSided=-1,_oldBlending=-1,_oldBlendEquation=-1,_oldBlendSrc=-1,_oldBlendDst=-1,_oldDepthTest=-1,_oldDepthWrite=-1,_oldPolygonOffset=null,_oldPolygonOffsetFactor=null,_oldPolygonOffsetUnits=null,_viewportX=0,_viewportY=0,_viewportWidth=0,_viewportHeight=0,_currentWidth=0,_currentHeight=0,_frustum=new THREE.Frustum,_projScreenMatrix=new THREE.Matrix4,_projScreenMatrixPS=new THREE.Matrix4,_vector3=new THREE.Vector4,_direction=new THREE.Vector3,_lightsNeedUpdate=!0,_lights={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],angles:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}};initGL(),setDefaultGLState(),this.context=_gl;var _maxTextures=_gl.getParameter(_gl.MAX_TEXTURE_IMAGE_UNITS),_maxVertexTextures=_gl.getParameter(_gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);_gl.getParameter(_gl.MAX_TEXTURE_SIZE);var _maxCubemapSize=_gl.getParameter(_gl.MAX_CUBE_MAP_TEXTURE_SIZE),_maxAnisotropy=_glExtensionTextureFilterAnisotropic?_gl.getParameter(_glExtensionTextureFilterAnisotropic.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,_supportsVertexTextures=_maxVertexTextures>0,_supportsBoneTextures=_supportsVertexTextures&&_glExtensionTextureFloat;_glExtensionCompressedTextureS3TC?_gl.getParameter(_gl.COMPRESSED_TEXTURE_FORMATS):[],this.getContext=function(){return _gl},this.supportsVertexTextures=function(){return _supportsVertexTextures},this.getMaxAnisotropy=function(){return _maxAnisotropy},this.setSize=function(width,height){_canvas.width=width,_canvas.height=height,this.setViewport(0,0,_canvas.width,_canvas.height)},this.setViewport=function(x,y,width,height){_viewportX=void 0!==x?x:0,_viewportY=void 0!==y?y:0,_viewportWidth=void 0!==width?width:_canvas.width,_viewportHeight=void 0!==height?height:_canvas.height,_gl.viewport(_viewportX,_viewportY,_viewportWidth,_viewportHeight)},this.setScissor=function(x,y,width,height){_gl.scissor(x,y,width,height)},this.enableScissorTest=function(enable){enable?_gl.enable(_gl.SCISSOR_TEST):_gl.disable(_gl.SCISSOR_TEST)},this.setClearColorHex=function(hex,alpha){_clearColor.setHex(hex),_clearAlpha=alpha,_gl.clearColor(_clearColor.r,_clearColor.g,_clearColor.b,_clearAlpha)},this.setClearColor=function(color,alpha){_clearColor.copy(color),_clearAlpha=alpha,_gl.clearColor(_clearColor.r,_clearColor.g,_clearColor.b,_clearAlpha)},this.getClearColor=function(){return _clearColor},this.getClearAlpha=function(){return _clearAlpha},this.clear=function(color,depth,stencil){var bits=0;(void 0===color||color)&&(bits|=_gl.COLOR_BUFFER_BIT),(void 0===depth||depth)&&(bits|=_gl.DEPTH_BUFFER_BIT),(void 0===stencil||stencil)&&(bits|=_gl.STENCIL_BUFFER_BIT),_gl.clear(bits)},this.clearTarget=function(renderTarget,color,depth,stencil){this.setRenderTarget(renderTarget),this.clear(color,depth,stencil)},this.addPostPlugin=function(plugin){plugin.init(this),this.renderPluginsPost.push(plugin)},this.addPrePlugin=function(plugin){plugin.init(this),this.renderPluginsPre.push(plugin)},this.deallocateObject=function(object){if(object.__webglInit)if(object.__webglInit=!1,delete object._modelViewMatrix,delete object._normalMatrix,delete object._normalMatrixArray,delete object._modelViewMatrixArray,delete object._modelMatrixArray,object instanceof THREE.Mesh)for(var g in object.geometry.geometryGroups)deleteMeshBuffers(object.geometry.geometryGroups[g]);else object instanceof THREE.Ribbon?deleteRibbonBuffers(object.geometry):object instanceof THREE.Line?deleteLineBuffers(object.geometry):object instanceof THREE.ParticleSystem&&deleteParticleBuffers(object.geometry)},this.deallocateTexture=function(texture){texture.__webglInit&&(texture.__webglInit=!1,_gl.deleteTexture(texture.__webglTexture),_this.info.memory.textures--)},this.deallocateRenderTarget=function(renderTarget){if(renderTarget&&renderTarget.__webglTexture)if(_gl.deleteTexture(renderTarget.__webglTexture),renderTarget instanceof THREE.WebGLRenderTargetCube)for(var i=0;6>i;i++)_gl.deleteFramebuffer(renderTarget.__webglFramebuffer[i]),_gl.deleteRenderbuffer(renderTarget.__webglRenderbuffer[i]);else _gl.deleteFramebuffer(renderTarget.__webglFramebuffer),_gl.deleteRenderbuffer(renderTarget.__webglRenderbuffer)},this.deallocateMaterial=function(material){var program=material.program;if(program){material.program=void 0;var i,il,programInfo,deleteProgram=!1;for(i=0,il=_programs.length;il>i;i++)if(programInfo=_programs[i],programInfo.program===program){programInfo.usedTimes--,0===programInfo.usedTimes&&(deleteProgram=!0);break}if(deleteProgram){var newPrograms=[];for(i=0,il=_programs.length;il>i;i++)programInfo=_programs[i],programInfo.program!==program&&newPrograms.push(programInfo);_programs=newPrograms,_gl.deleteProgram(program),_this.info.memory.programs--}}},this.updateShadowMap=function(scene,camera){_currentProgram=null,_oldBlending=-1,_oldDepthTest=-1,_oldDepthWrite=-1,_currentGeometryGroupHash=-1,_currentMaterialId=-1,_lightsNeedUpdate=!0,_oldDoubleSided=-1,_oldFlipSided=-1,this.shadowMapPlugin.update(scene,camera)},this.renderBufferImmediate=function(object,program,material){if(object.hasPositions&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,object.__webglVertexBuffer),_gl.bufferData(_gl.ARRAY_BUFFER,object.positionArray,_gl.DYNAMIC_DRAW),_gl.enableVertexAttribArray(program.attributes.position),_gl.vertexAttribPointer(program.attributes.position,3,_gl.FLOAT,!1,0,0)),object.hasNormals){if(_gl.bindBuffer(_gl.ARRAY_BUFFER,object.__webglNormalBuffer),material.shading===THREE.FlatShading){var nx,ny,nz,nax,nbx,ncx,nay,nby,ncy,naz,nbz,ncz,normalArray,i,il=3*object.count;for(i=0;il>i;i+=9)normalArray=object.normalArray,nax=normalArray[i],nay=normalArray[i+1],naz=normalArray[i+2],nbx=normalArray[i+3],nby=normalArray[i+4],nbz=normalArray[i+5],ncx=normalArray[i+6],ncy=normalArray[i+7],ncz=normalArray[i+8],nx=(nax+nbx+ncx)/3,ny=(nay+nby+ncy)/3,nz=(naz+nbz+ncz)/3,normalArray[i]=nx,normalArray[i+1]=ny,normalArray[i+2]=nz,normalArray[i+3]=nx,normalArray[i+4]=ny,normalArray[i+5]=nz,normalArray[i+6]=nx,normalArray[i+7]=ny,normalArray[i+8]=nz}_gl.bufferData(_gl.ARRAY_BUFFER,object.normalArray,_gl.DYNAMIC_DRAW),_gl.enableVertexAttribArray(program.attributes.normal),_gl.vertexAttribPointer(program.attributes.normal,3,_gl.FLOAT,!1,0,0)}object.hasUvs&&material.map&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,object.__webglUvBuffer),_gl.bufferData(_gl.ARRAY_BUFFER,object.uvArray,_gl.DYNAMIC_DRAW),_gl.enableVertexAttribArray(program.attributes.uv),_gl.vertexAttribPointer(program.attributes.uv,2,_gl.FLOAT,!1,0,0)),object.hasColors&&material.vertexColors!==THREE.NoColors&&(_gl.bindBuffer(_gl.ARRAY_BUFFER,object.__webglColorBuffer),_gl.bufferData(_gl.ARRAY_BUFFER,object.colorArray,_gl.DYNAMIC_DRAW),_gl.enableVertexAttribArray(program.attributes.color),_gl.vertexAttribPointer(program.attributes.color,3,_gl.FLOAT,!1,0,0)),_gl.drawArrays(_gl.TRIANGLES,0,object.count),object.count=0},this.renderBufferDirect=function(camera,lights,fog,material,geometry,object){if(material.visible!==!1){var program,attributes;program=setProgram(camera,lights,fog,material,object),attributes=program.attributes;var updateBuffers=!1,wireframeBit=material.wireframe?1:0,geometryHash=16777215*geometry.id+2*program.id+wireframeBit;if(geometryHash!==_currentGeometryGroupHash&&(_currentGeometryGroupHash=geometryHash,updateBuffers=!0),object instanceof THREE.Mesh){var offsets=geometry.offsets;offsets.length>1&&(updateBuffers=!0);for(var i=0,il=offsets.length;il>i;++i){var startIndex=offsets[i].index;if(updateBuffers){var position=geometry.attributes.position,positionSize=position.itemSize;_gl.bindBuffer(_gl.ARRAY_BUFFER,position.buffer),_gl.vertexAttribPointer(attributes.position,positionSize,_gl.FLOAT,!1,0,4*startIndex*positionSize);var normal=geometry.attributes.normal;if(attributes.normal>=0&&normal){var normalSize=normal.itemSize;_gl.bindBuffer(_gl.ARRAY_BUFFER,normal.buffer),_gl.vertexAttribPointer(attributes.normal,normalSize,_gl.FLOAT,!1,0,4*startIndex*normalSize)}var uv=geometry.attributes.uv;if(attributes.uv>=0&&uv)if(uv.buffer){var uvSize=uv.itemSize;_gl.bindBuffer(_gl.ARRAY_BUFFER,uv.buffer),_gl.vertexAttribPointer(attributes.uv,uvSize,_gl.FLOAT,!1,0,4*startIndex*uvSize),_gl.enableVertexAttribArray(attributes.uv)}else _gl.disableVertexAttribArray(attributes.uv);var color=geometry.attributes.color;if(attributes.color>=0&&color){var colorSize=color.itemSize;_gl.bindBuffer(_gl.ARRAY_BUFFER,color.buffer),_gl.vertexAttribPointer(attributes.color,colorSize,_gl.FLOAT,!1,0,4*startIndex*colorSize)}var tangent=geometry.attributes.tangent;if(attributes.tangent>=0&&tangent){var tangentSize=tangent.itemSize;_gl.bindBuffer(_gl.ARRAY_BUFFER,tangent.buffer),_gl.vertexAttribPointer(attributes.tangent,tangentSize,_gl.FLOAT,!1,0,4*startIndex*tangentSize)}var index=geometry.attributes.index;_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,index.buffer)}_gl.drawElements(_gl.TRIANGLES,offsets[i].count,_gl.UNSIGNED_SHORT,2*offsets[i].start),_this.info.render.calls++,_this.info.render.vertices+=offsets[i].count,_this.info.render.faces+=offsets[i].count/3}}else if(object instanceof THREE.ParticleSystem&&updateBuffers){var position=geometry.attributes.position,positionSize=position.itemSize;_gl.bindBuffer(_gl.ARRAY_BUFFER,position.buffer),_gl.vertexAttribPointer(attributes.position,positionSize,_gl.FLOAT,!1,0,0);var color=geometry.attributes.color;if(attributes.color>=0&&color){var colorSize=color.itemSize;_gl.bindBuffer(_gl.ARRAY_BUFFER,color.buffer),_gl.vertexAttribPointer(attributes.color,colorSize,_gl.FLOAT,!1,0,0)}_gl.drawArrays(_gl.POINTS,0,position.numItems/3),_this.info.render.calls++,_this.info.render.points+=position.numItems/3}}},this.renderBuffer=function(camera,lights,fog,material,geometryGroup,object){if(material.visible!==!1){var program,attributes;program=setProgram(camera,lights,fog,material,object),attributes=program.attributes;var updateBuffers=decideUpdateBuffers(material.wireframe,geometryGroup.id,program.id);doUpdateBuffers(updateBuffers,attributes,material,geometryGroup.__webglVertexBuffer,geometryGroup.__webglCustomAttributesList,geometryGroup.__webglColorBuffer,geometryGroup.__webglNormalBuffer,geometryGroup.__webglTangentBuffer,geometryGroup.__webglUVBuffer,geometryGroup.__webglUV2Buffer,geometryGroup.__webglSkinIndicesBuffer,geometryGroup.__webglSkinWeightsBuffer),object instanceof THREE.Mesh&&renderMesh(updateBuffers,geometryGroup.__webglFaceBuffer,geometryGroup.__webglFaceCount),object instanceof THREE.ParticleSystem&&renderParticleSystem(geometryGroup.__webglParticleCount)}},this.render=function(scene,camera,renderTarget,forceClear){if(camera instanceof THREE.Camera==!1)return console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera."),void 0;var i,il,webglObject,object,renderList,lights=scene.__lights,fog=scene.fog;for(_currentMaterialId=-1,_lightsNeedUpdate=!0,this.autoUpdateScene&&scene.updateMatrixWorld(),void 0===camera.parent&&camera.updateMatrixWorld(),camera._viewMatrixArray||(camera._viewMatrixArray=new Float32Array(16)),camera._projectionMatrixArray||(camera._projectionMatrixArray=new Float32Array(16)),camera.matrixWorldInverse.getInverse(camera.matrixWorld),camera.matrixWorldInverse.flattenToArray(camera._viewMatrixArray),camera.projectionMatrix.flattenToArray(camera._projectionMatrixArray),_projScreenMatrix.multiply(camera.projectionMatrix,camera.matrixWorldInverse),_frustum.setFromMatrix(_projScreenMatrix),this.autoUpdateObjects&&this.initWebGLObjects(scene),renderPlugins(this.renderPluginsPre,scene,camera),_this.info.render.calls=0,_this.info.render.vertices=0,_this.info.render.faces=0,_this.info.render.points=0,this.setRenderTarget(renderTarget),(this.autoClear||forceClear)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),renderList=scene.__webglObjects,i=0,il=renderList.length;il>i;i++)webglObject=renderList[i],object=webglObject.object,webglObject.render=!1,object.visible&&((object instanceof THREE.Mesh||object instanceof THREE.ParticleSystem)&&object.frustumCulled&&!_frustum.contains(object)||(setupMatrices(object,camera),unrollBufferMaterial(webglObject),webglObject.render=!0,this.sortObjects===!0&&(null!==object.renderDepth?webglObject.z=object.renderDepth:(_vector3.copy(object.matrixWorld.getPosition()),_projScreenMatrix.multiplyVector3(_vector3),webglObject.z=_vector3.z))));for(this.sortObjects&&renderList.sort(painterSort),renderList=scene.__webglObjectsImmediate,i=0,il=renderList.length;il>i;i++)webglObject=renderList[i],object=webglObject.object,object.visible&&(setupMatrices(object,camera),unrollImmediateBufferMaterial(webglObject));if(scene.overrideMaterial){var material=scene.overrideMaterial;this.setBlending(material.blending,material.blendEquation,material.blendSrc,material.blendDst),this.setDepthTest(material.depthTest),this.setDepthWrite(material.depthWrite),setPolygonOffset(material.polygonOffset,material.polygonOffsetFactor,material.polygonOffsetUnits),renderObjects(scene.__webglObjects,!1,"",camera,lights,fog,!0,material),renderObjectsImmediate(scene.__webglObjectsImmediate,"",camera,lights,fog,!1,material)}else this.setBlending(THREE.NormalBlending),renderObjects(scene.__webglObjects,!0,"opaque",camera,lights,fog,!1),renderObjectsImmediate(scene.__webglObjectsImmediate,"opaque",camera,lights,fog,!1),renderObjects(scene.__webglObjects,!1,"transparent",camera,lights,fog,!0),renderObjectsImmediate(scene.__webglObjectsImmediate,"transparent",camera,lights,fog,!0);renderPlugins(this.renderPluginsPost,scene,camera),renderTarget&&renderTarget.generateMipmaps&&renderTarget.minFilter!==THREE.NearestFilter&&renderTarget.minFilter!==THREE.LinearFilter&&updateRenderTargetMipmap(renderTarget),this.setDepthTest(!0),this.setDepthWrite(!0)},this.renderImmediateObject=function(camera,lights,fog,material,object){var program=setProgram(camera,lights,fog,material,object);_currentGeometryGroupHash=-1,_this.setMaterialFaces(material),object.immediateRenderCallback?object.immediateRenderCallback(program,_gl,_frustum):object.render(function(object){_this.renderBufferImmediate(object,program,material)})},this.initWebGLObjects=function(scene){for(scene.__webglObjects||(scene.__webglObjects=[],scene.__webglObjectsImmediate=[],scene.__webglSprites=[],scene.__webglFlares=[]);scene.__objectsAdded.length;)addObject(scene.__objectsAdded[0],scene),scene.__objectsAdded.splice(0,1);for(;scene.__objectsRemoved.length;)removeObject(scene.__objectsRemoved[0],scene),scene.__objectsRemoved.splice(0,1);for(var o=0,ol=scene.__webglObjects.length;ol>o;o++)updateObject(scene.__webglObjects[o].object)},this.initMaterial=function(material,lights,fog,object){var u,a,i,parameters,maxLightCount,maxBones,maxShadows,shaderID;material instanceof THREE.MeshDepthMaterial?shaderID="depth":material instanceof THREE.MeshNormalMaterial?shaderID="normal":material instanceof THREE.MeshBasicMaterial?shaderID="basic":material instanceof THREE.MeshLambertMaterial?shaderID="lambert":material instanceof THREE.MeshPhongMaterial?shaderID="phong":material instanceof THREE.LineBasicMaterial?shaderID="basic":material instanceof THREE.ParticleBasicMaterial&&(shaderID="particle_basic"),shaderID&&setMaterialShaders(material,THREE.ShaderLib[shaderID]),maxLightCount=allocateLights(lights),maxShadows=allocateShadows(lights),maxBones=allocateBones(object),parameters={map:!!material.map,envMap:!!material.envMap,lightMap:!!material.lightMap,bumpMap:!!material.bumpMap,normalMap:!!material.normalMap,specularMap:!!material.specularMap,vertexColors:material.vertexColors,fog:fog,useFog:material.fog,sizeAttenuation:material.sizeAttenuation,skinning:material.skinning,maxBones:maxBones,useVertexTexture:_supportsBoneTextures&&object&&object.useVertexTexture,boneTextureWidth:object&&object.boneTextureWidth,boneTextureHeight:object&&object.boneTextureHeight,morphTargets:material.morphTargets,morphNormals:material.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:maxLightCount.directional,maxPointLights:maxLightCount.point,maxSpotLights:maxLightCount.spot,maxHemiLights:maxLightCount.hemi,maxShadows:maxShadows,shadowMapEnabled:this.shadowMapEnabled&&object.receiveShadow,shadowMapSoft:this.shadowMapSoft,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:material.alphaTest,metal:material.metal,perPixel:material.perPixel,wrapAround:material.wrapAround,doubleSided:material.side===THREE.DoubleSide,flipSided:material.side===THREE.BackSide,name:material.name},material.program=buildProgram(shaderID,material.fragmentShader,material.vertexShader,material.uniforms,material.attributes,parameters);
var attributes=material.program.attributes;if(attributes.position>=0&&_gl.enableVertexAttribArray(attributes.position),attributes.color>=0&&_gl.enableVertexAttribArray(attributes.color),attributes.normal>=0&&_gl.enableVertexAttribArray(attributes.normal),attributes.tangent>=0&&_gl.enableVertexAttribArray(attributes.tangent),material.skinning&&attributes.skinIndex>=0&&attributes.skinWeight>=0&&(_gl.enableVertexAttribArray(attributes.skinIndex),_gl.enableVertexAttribArray(attributes.skinWeight)),material.attributes)for(a in material.attributes)void 0!==attributes[a]&&attributes[a]>=0&&_gl.enableVertexAttribArray(attributes[a]);if(material.morphTargets){material.numSupportedMorphTargets=0;var id,base="morphTarget";for(i=0;this.maxMorphTargets>i;i++)id=base+i,attributes[id]>=0&&(_gl.enableVertexAttribArray(attributes[id]),material.numSupportedMorphTargets++)}if(material.morphNormals){material.numSupportedMorphNormals=0;var id,base="morphNormal";for(i=0;this.maxMorphNormals>i;i++)id=base+i,attributes[id]>=0&&(_gl.enableVertexAttribArray(attributes[id]),material.numSupportedMorphNormals++)}material.uniformsList=[];for(u in material.uniforms)material.uniformsList.push([material.uniforms[u],u])},this.setFaceCulling=function(cullFace,frontFace){cullFace?(frontFace&&"ccw"!==frontFace?_gl.frontFace(_gl.CW):_gl.frontFace(_gl.CCW),"back"===cullFace?_gl.cullFace(_gl.BACK):"front"===cullFace?_gl.cullFace(_gl.FRONT):_gl.cullFace(_gl.FRONT_AND_BACK),_gl.enable(_gl.CULL_FACE)):_gl.disable(_gl.CULL_FACE)},this.setMaterialFaces=function(material){var doubleSided=material.side===THREE.DoubleSide,flipSided=material.side===THREE.BackSide;_oldDoubleSided!==doubleSided&&(doubleSided?_gl.disable(_gl.CULL_FACE):_gl.enable(_gl.CULL_FACE),_oldDoubleSided=doubleSided),_oldFlipSided!==flipSided&&(flipSided?_gl.frontFace(_gl.CW):_gl.frontFace(_gl.CCW),_oldFlipSided=flipSided)},this.setDepthTest=function(depthTest){_oldDepthTest!==depthTest&&(depthTest?_gl.enable(_gl.DEPTH_TEST):_gl.disable(_gl.DEPTH_TEST),_oldDepthTest=depthTest)},this.setDepthWrite=function(depthWrite){_oldDepthWrite!==depthWrite&&(_gl.depthMask(depthWrite),_oldDepthWrite=depthWrite)},this.setBlending=function(blending,blendEquation,blendSrc,blendDst){blending!==_oldBlending&&(blending===THREE.NoBlending?_gl.disable(_gl.BLEND):blending===THREE.AdditiveBlending?(_gl.enable(_gl.BLEND),_gl.blendEquation(_gl.FUNC_ADD),_gl.blendFunc(_gl.SRC_ALPHA,_gl.ONE)):blending===THREE.SubtractiveBlending?(_gl.enable(_gl.BLEND),_gl.blendEquation(_gl.FUNC_ADD),_gl.blendFunc(_gl.ZERO,_gl.ONE_MINUS_SRC_COLOR)):blending===THREE.MultiplyBlending?(_gl.enable(_gl.BLEND),_gl.blendEquation(_gl.FUNC_ADD),_gl.blendFunc(_gl.ZERO,_gl.SRC_COLOR)):blending===THREE.CustomBlending?_gl.enable(_gl.BLEND):(_gl.enable(_gl.BLEND),_gl.blendEquationSeparate(_gl.FUNC_ADD,_gl.FUNC_ADD),_gl.blendFuncSeparate(_gl.SRC_ALPHA,_gl.ONE_MINUS_SRC_ALPHA,_gl.ONE,_gl.ONE_MINUS_SRC_ALPHA)),_oldBlending=blending),blending===THREE.CustomBlending?(blendEquation!==_oldBlendEquation&&(_gl.blendEquation(paramThreeToGL(blendEquation)),_oldBlendEquation=blendEquation),(blendSrc!==_oldBlendSrc||blendDst!==_oldBlendDst)&&(_gl.blendFunc(paramThreeToGL(blendSrc),paramThreeToGL(blendDst)),_oldBlendSrc=blendSrc,_oldBlendDst=blendDst)):(_oldBlendEquation=null,_oldBlendSrc=null,_oldBlendDst=null)},this.setTexture=function(texture,slot){texture.needsUpdate?setTextureUpdate(texture,slot):setTexttureNonUpdate(texture.__webglTexture,slot)},this.setRenderTarget=function(renderTarget){var isCube=renderTarget instanceof THREE.WebGLRenderTargetCube;if(renderTarget&&!renderTarget.__webglFramebuffer){void 0===renderTarget.depthBuffer&&(renderTarget.depthBuffer=!0),void 0===renderTarget.stencilBuffer&&(renderTarget.stencilBuffer=!0),renderTarget.__webglTexture=_gl.createTexture();var isTargetPowerOfTwo=isPowerOfTwo(renderTarget.width)&&isPowerOfTwo(renderTarget.height),glFormat=paramThreeToGL(renderTarget.format),glType=paramThreeToGL(renderTarget.type);if(isCube){renderTarget.__webglFramebuffer=[],renderTarget.__webglRenderbuffer=[],_gl.bindTexture(_gl.TEXTURE_CUBE_MAP,renderTarget.__webglTexture),setTextureParameters(_gl.TEXTURE_CUBE_MAP,renderTarget,isTargetPowerOfTwo);for(var i=0;6>i;i++)renderTarget.__webglFramebuffer[i]=_gl.createFramebuffer(),renderTarget.__webglRenderbuffer[i]=_gl.createRenderbuffer(),_gl.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+i,0,glFormat,renderTarget.width,renderTarget.height,0,glFormat,glType,null),setupFrameBuffer(renderTarget.__webglFramebuffer[i],renderTarget,_gl.TEXTURE_CUBE_MAP_POSITIVE_X+i),setupRenderBuffer(renderTarget.__webglRenderbuffer[i],renderTarget);isTargetPowerOfTwo&&_gl.generateMipmap(_gl.TEXTURE_CUBE_MAP)}else renderTarget.__webglFramebuffer=_gl.createFramebuffer(),renderTarget.__webglRenderbuffer=_gl.createRenderbuffer(),_gl.bindTexture(_gl.TEXTURE_2D,renderTarget.__webglTexture),setTextureParameters(_gl.TEXTURE_2D,renderTarget,isTargetPowerOfTwo),_gl.texImage2D(_gl.TEXTURE_2D,0,glFormat,renderTarget.width,renderTarget.height,0,glFormat,glType,null),setupFrameBuffer(renderTarget.__webglFramebuffer,renderTarget,_gl.TEXTURE_2D),setupRenderBuffer(renderTarget.__webglRenderbuffer,renderTarget),isTargetPowerOfTwo&&_gl.generateMipmap(_gl.TEXTURE_2D);isCube?_gl.bindTexture(_gl.TEXTURE_CUBE_MAP,null):_gl.bindTexture(_gl.TEXTURE_2D,null),_gl.bindRenderbuffer(_gl.RENDERBUFFER,null),_gl.bindFramebuffer(_gl.FRAMEBUFFER,null)}var framebuffer,width,height,vx,vy;renderTarget?(framebuffer=isCube?renderTarget.__webglFramebuffer[renderTarget.activeCubeFace]:renderTarget.__webglFramebuffer,width=renderTarget.width,height=renderTarget.height,vx=0,vy=0):(framebuffer=null,width=_viewportWidth,height=_viewportHeight,vx=_viewportX,vy=_viewportY),framebuffer!==_currentFramebuffer&&(_gl.bindFramebuffer(_gl.FRAMEBUFFER,framebuffer),_gl.viewport(vx,vy,width,height),_currentFramebuffer=framebuffer),_currentWidth=width,_currentHeight=height},this.addPostPlugin(new THREE.LensFlarePlugin)},THREE.WebGLRenderTarget=function(width,height,options){this.width=width,this.height=height,options=options||{},this.wrapS=void 0!==options.wrapS?options.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==options.wrapT?options.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==options.magFilter?options.magFilter:THREE.LinearFilter,this.minFilter=void 0!==options.minFilter?options.minFilter:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==options.anisotropy?options.anisotropy:1,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=void 0!==options.format?options.format:THREE.RGBAFormat,this.type=void 0!==options.type?options.type:THREE.UnsignedByteType,this.depthBuffer=void 0!==options.depthBuffer?options.depthBuffer:!0,this.stencilBuffer=void 0!==options.stencilBuffer?options.stencilBuffer:!0,this.generateMipmaps=!0},THREE.WebGLRenderTarget.prototype.clone=function(){var tmp=new THREE.WebGLRenderTarget(this.width,this.height);return tmp.wrapS=this.wrapS,tmp.wrapT=this.wrapT,tmp.magFilter=this.magFilter,tmp.anisotropy=this.anisotropy,tmp.minFilter=this.minFilter,tmp.offset.copy(this.offset),tmp.repeat.copy(this.repeat),tmp.format=this.format,tmp.type=this.type,tmp.depthBuffer=this.depthBuffer,tmp.stencilBuffer=this.stencilBuffer,tmp.generateMipmaps=this.generateMipmaps,tmp},THREE.WebGLRenderTargetCube=function(width,height,options){THREE.WebGLRenderTarget.call(this,width,height,options),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.ShaderChunk={fog_pars_fragment:["#ifdef USE_FOG","uniform vec3 fogColor;","#ifdef FOG_EXP2","uniform float fogDensity;","#else","uniform float fogNear;","uniform float fogFar;","#endif","#endif"].join("\n"),fog_fragment:["#ifdef USE_FOG","float depth = gl_FragCoord.z / gl_FragCoord.w;","#ifdef FOG_EXP2","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","#else","float fogFactor = smoothstep( fogNear, fogFar, depth );","#endif","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","#endif"].join("\n"),envmap_pars_fragment:["#ifdef USE_ENVMAP","uniform float reflectivity;","uniform samplerCube envMap;","uniform float flipEnvMap;","uniform int combine;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","uniform bool useRefract;","uniform float refractionRatio;","#else","varying vec3 vReflect;","#endif","#endif"].join("\n"),envmap_fragment:["#ifdef USE_ENVMAP","vec3 reflectVec;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","if ( useRefract ) {","reflectVec = refract( cameraToVertex, normal, refractionRatio );","} else { ","reflectVec = reflect( cameraToVertex, normal );","}","#else","reflectVec = vReflect;","#endif","#ifdef DOUBLE_SIDED","float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );","vec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );","#else","vec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );","#endif","#ifdef GAMMA_INPUT","cubeColor.xyz *= cubeColor.xyz;","#endif","if ( combine == 1 ) {","gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );","} else {","gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );","}","#endif"].join("\n"),envmap_pars_vertex:["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","varying vec3 vReflect;","uniform float refractionRatio;","uniform bool useRefract;","#endif"].join("\n"),worldpos_vertex:["#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )","#ifdef USE_SKINNING","vec4 mPosition = modelMatrix * skinned;","#endif","#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )","vec4 mPosition = modelMatrix * vec4( morphed, 1.0 );","#endif","#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )","vec4 mPosition = modelMatrix * vec4( position, 1.0 );","#endif","#endif"].join("\n"),envmap_vertex:["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","vec3 nWorld = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;","if ( useRefract ) {","vReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refractionRatio );","} else {","vReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );","}","#endif"].join("\n"),map_particle_pars_fragment:["#ifdef USE_MAP","uniform sampler2D map;","#endif"].join("\n"),map_particle_fragment:["#ifdef USE_MAP","gl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );","#endif"].join("\n"),map_pars_vertex:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","varying vec2 vUv;","uniform vec4 offsetRepeat;","#endif"].join("\n"),map_pars_fragment:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","varying vec2 vUv;","#endif","#ifdef USE_MAP","uniform sampler2D map;","#endif"].join("\n"),map_vertex:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","vUv = uv * offsetRepeat.zw + offsetRepeat.xy;","#endif"].join("\n"),map_fragment:["#ifdef USE_MAP","#ifdef GAMMA_INPUT","vec4 texelColor = texture2D( map, vUv );","texelColor.xyz *= texelColor.xyz;","gl_FragColor = gl_FragColor * texelColor;","#else","gl_FragColor = gl_FragColor * texture2D( map, vUv );","#endif","#endif"].join("\n"),lightmap_pars_fragment:["#ifdef USE_LIGHTMAP","varying vec2 vUv2;","uniform sampler2D lightMap;","#endif"].join("\n"),lightmap_pars_vertex:["#ifdef USE_LIGHTMAP","varying vec2 vUv2;","#endif"].join("\n"),lightmap_fragment:["#ifdef USE_LIGHTMAP","gl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );","#endif"].join("\n"),lightmap_vertex:["#ifdef USE_LIGHTMAP","vUv2 = uv2;","#endif"].join("\n"),bumpmap_pars_fragment:["#ifdef USE_BUMPMAP","uniform sampler2D bumpMap;","uniform float bumpScale;","vec2 dHdxy_fwd() {","vec2 dSTdx = dFdx( vUv );","vec2 dSTdy = dFdy( vUv );","float Hll = bumpScale * texture2D( bumpMap, vUv ).x;","float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;","float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;","return vec2( dBx, dBy );","}","vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {","vec3 vSigmaX = dFdx( surf_pos );","vec3 vSigmaY = dFdy( surf_pos );","vec3 vN = surf_norm;","vec3 R1 = cross( vSigmaY, vN );","vec3 R2 = cross( vN, vSigmaX );","float fDet = dot( vSigmaX, R1 );","vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );","return normalize( abs( fDet ) * surf_norm - vGrad );","}","#endif"].join("\n"),normalmap_pars_fragment:["#ifdef USE_NORMALMAP","uniform sampler2D normalMap;","uniform vec2 normalScale;","vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {","vec3 q0 = dFdx( eye_pos.xyz );","vec3 q1 = dFdy( eye_pos.xyz );","vec2 st0 = dFdx( vUv.st );","vec2 st1 = dFdy( vUv.st );","vec3 S = normalize(  q0 * st1.t - q1 * st0.t );","vec3 T = normalize( -q0 * st1.s + q1 * st0.s );","vec3 N = normalize( surf_norm );","vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;","mapN.xy = normalScale * mapN.xy;","mat3 tsn = mat3( S, T, N );","return normalize( tsn * mapN );","}","#endif"].join("\n"),specularmap_pars_fragment:["#ifdef USE_SPECULARMAP","uniform sampler2D specularMap;","#endif"].join("\n"),specularmap_fragment:["float specularStrength;","#ifdef USE_SPECULARMAP","vec4 texelSpecular = texture2D( specularMap, vUv );","specularStrength = texelSpecular.r;","#else","specularStrength = 1.0;","#endif"].join("\n"),lights_lambert_pars_vertex:["uniform vec3 ambient;","uniform vec3 diffuse;","uniform vec3 emissive;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngle[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif"].join("\n"),lights_lambert_vertex:["vLightFront = vec3( 0.0 );","#ifdef DOUBLE_SIDED","vLightBack = vec3( 0.0 );","#endif","transformedNormal = normalize( transformedNormal );","#if MAX_DIR_LIGHTS > 0","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","float dotProduct = dot( transformedNormal, dirVector );","vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += directionalLightColor[ i ] * directionalLightWeighting;","#ifdef DOUBLE_SIDED","vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;","#endif","}","#endif","#if MAX_POINT_LIGHTS > 0","for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","float dotProduct = dot( transformedNormal, lVector );","vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;","#ifdef DOUBLE_SIDED","vLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","lVector = normalize( lVector );","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - mPosition.xyz ) );","if ( spotEffect > spotLightAngle[ i ] ) {","spotEffect = pow( spotEffect, spotLightExponent[ i ] );","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","float dotProduct = dot( transformedNormal, lVector );","vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;","#ifdef DOUBLE_SIDED","vLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;","#endif","}","}","#endif","#if MAX_HEMI_LIGHTS > 0","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","lVector = normalize( lVector );","float dotProduct = dot( transformedNormal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;","vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","#ifdef DOUBLE_SIDED","vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );","#endif","}","#endif","vLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;","#ifdef DOUBLE_SIDED","vLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;","#endif"].join("\n"),lights_phong_pars_vertex:["#ifndef PHONG_PER_PIXEL","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","varying vec4 vPointLight[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","varying vec3 vWorldPosition;","#endif"].join("\n"),lights_phong_vertex:["#ifndef PHONG_PER_PIXEL","#if MAX_POINT_LIGHTS > 0","for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","vPointLight[ i ] = vec4( lVector, lDistance );","}","#endif","#if MAX_SPOT_LIGHTS > 0","for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","vSpotLight[ i ] = vec4( lVector, lDistance );","}","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","vWorldPosition = mPosition.xyz;","#endif"].join("\n"),lights_phong_pars_fragment:["uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","#ifdef PHONG_PER_PIXEL","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#else","varying vec4 vPointLight[ MAX_POINT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngle[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","#ifdef PHONG_PER_PIXEL","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#else","varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","varying vec3 vWorldPosition;","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif","varying vec3 vViewPosition;","varying vec3 vNormal;"].join("\n"),lights_phong_fragment:["vec3 normal = normalize( vNormal );","vec3 viewPosition = normalize( vViewPosition );","#ifdef DOUBLE_SIDED","normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );","#endif","#ifdef USE_NORMALMAP","normal = perturbNormal2Arb( -viewPosition, normal );","#elif defined( USE_BUMPMAP )","normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );","#endif","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse  = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","#ifdef PHONG_PER_PIXEL","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","#else","vec3 lVector = normalize( vPointLight[ i ].xyz );","float lDistance = vPointLight[ i ].w;","#endif","float dotProduct = dot( normal, lVector );","#ifdef WRAP_AROUND","float pointDiffuseWeightFull = max( dotProduct, 0.0 );","float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","#else","float pointDiffuseWeight = max( dotProduct, 0.0 );","#endif","pointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;","vec3 pointHalfVector = normalize( lVector + viewPosition );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );","pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;","#else","pointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","vec3 spotDiffuse  = vec3( 0.0 );","vec3 spotSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","#ifdef PHONG_PER_PIXEL","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","#else","vec3 lVector = normalize( vSpotLight[ i ].xyz );","float lDistance = vSpotLight[ i ].w;","#endif","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","if ( spotEffect > spotLightAngle[ i ] ) {","spotEffect = pow( spotEffect, spotLightExponent[ i ] );","float dotProduct = dot( normal, lVector );","#ifdef WRAP_AROUND","float spotDiffuseWeightFull = max( dotProduct, 0.0 );","float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","#else","float spotDiffuseWeight = max( dotProduct, 0.0 );","#endif","spotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;","vec3 spotHalfVector = normalize( lVector + viewPosition );","float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );","spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;","#else","spotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;","#endif","}","}","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse  = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, dirVector );","#ifdef WRAP_AROUND","float dirDiffuseWeightFull = max( dotProduct, 0.0 );","float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );","#else","float dirDiffuseWeight = max( dotProduct, 0.0 );","#endif","dirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;","vec3 dirHalfVector = normalize( dirVector + viewPosition );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );","dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","#else","dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;","#endif","}","#endif","#if MAX_HEMI_LIGHTS > 0","vec3 hemiDiffuse  = vec3( 0.0 );","vec3 hemiSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );","vec3 lVector = normalize( lPosition.xyz + vViewPosition.xyz );","float dotProduct = dot( normal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","hemiDiffuse += diffuse * hemiColor;","vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","float hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );","vec3 lVectorGround = normalize( -lPosition.xyz + vViewPosition.xyz );","vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","float hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotProductGround = dot( normal, lVectorGround );","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );","vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );","hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","#else","hemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;","#endif","}","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#if MAX_HEMI_LIGHTS > 0","totalDiffuse += hemiDiffuse;","totalSpecular += hemiSpecular;","#endif","#if MAX_POINT_LIGHTS > 0","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","totalDiffuse += spotDiffuse;","totalSpecular += spotSpecular;","#endif","#ifdef METAL","gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );","#else","gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;","#endif"].join("\n"),color_pars_fragment:["#ifdef USE_COLOR","varying vec3 vColor;","#endif"].join("\n"),color_fragment:["#ifdef USE_COLOR","gl_FragColor = gl_FragColor * vec4( vColor, opacity );","#endif"].join("\n"),color_pars_vertex:["#ifdef USE_COLOR","varying vec3 vColor;","#endif"].join("\n"),color_vertex:["#ifdef USE_COLOR","#ifdef GAMMA_INPUT","vColor = color * color;","#else","vColor = color;","#endif","#endif"].join("\n"),skinning_pars_vertex:["#ifdef USE_SKINNING","#ifdef BONE_TEXTURE","uniform sampler2D boneTexture;","mat4 getBoneMatrix( const in float i ) {","float j = i * 4.0;","float x = mod( j, N_BONE_PIXEL_X );","float y = floor( j / N_BONE_PIXEL_X );","const float dx = 1.0 / N_BONE_PIXEL_X;","const float dy = 1.0 / N_BONE_PIXEL_Y;","y = dy * ( y + 0.5 );","vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );","vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );","vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );","vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );","mat4 bone = mat4( v1, v2, v3, v4 );","return bone;","}","#else","uniform mat4 boneGlobalMatrices[ MAX_BONES ];","mat4 getBoneMatrix( const in float i ) {","mat4 bone = boneGlobalMatrices[ int(i) ];","return bone;","}","#endif","#endif"].join("\n"),skinbase_vertex:["#ifdef USE_SKINNING","mat4 boneMatX = getBoneMatrix( skinIndex.x );","mat4 boneMatY = getBoneMatrix( skinIndex.y );","#endif"].join("\n"),skinning_vertex:["#ifdef USE_SKINNING","#ifdef USE_MORPHTARGETS","vec4 skinVertex = vec4( morphed, 1.0 );","#else","vec4 skinVertex = vec4( position, 1.0 );","#endif","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned 	  += boneMatY * skinVertex * skinWeight.y;","#endif"].join("\n"),morphtarget_pars_vertex:["#ifdef USE_MORPHTARGETS","#ifndef USE_MORPHNORMALS","uniform float morphTargetInfluences[ 8 ];","#else","uniform float morphTargetInfluences[ 4 ];","#endif","#endif"].join("\n"),morphtarget_vertex:["#ifdef USE_MORPHTARGETS","vec3 morphed = vec3( 0.0 );","morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];","morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];","morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];","morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];","#ifndef USE_MORPHNORMALS","morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];","morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];","morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];","morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];","#endif","morphed += position;","#endif"].join("\n"),default_vertex:["vec4 mvPosition;","#ifdef USE_SKINNING","mvPosition = modelViewMatrix * skinned;","#endif","#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )","mvPosition = modelViewMatrix * vec4( morphed, 1.0 );","#endif","#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )","mvPosition = modelViewMatrix * vec4( position, 1.0 );","#endif","gl_Position = projectionMatrix * mvPosition;"].join("\n"),morphnormal_vertex:["#ifdef USE_MORPHNORMALS","vec3 morphedNormal = vec3( 0.0 );","morphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];","morphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];","morphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];","morphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];","morphedNormal += normal;","#endif"].join("\n"),skinnormal_vertex:["#ifdef USE_SKINNING","mat4 skinMatrix = skinWeight.x * boneMatX;","skinMatrix 	+= skinWeight.y * boneMatY;","#ifdef USE_MORPHNORMALS","vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );","#else","vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );","#endif","#endif"].join("\n"),defaultnormal_vertex:["vec3 objectNormal;","#ifdef USE_SKINNING","objectNormal = skinnedNormal.xyz;","#endif","#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )","objectNormal = morphedNormal;","#endif","#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )","objectNormal = normal;","#endif","#ifdef FLIP_SIDED","objectNormal = -objectNormal;","#endif","vec3 transformedNormal = normalMatrix * objectNormal;"].join("\n"),shadowmap_pars_fragment:["#ifdef USE_SHADOWMAP","uniform sampler2D shadowMap[ MAX_SHADOWS ];","uniform vec2 shadowMapSize[ MAX_SHADOWS ];","uniform float shadowDarkness[ MAX_SHADOWS ];","uniform float shadowBias[ MAX_SHADOWS ];","varying vec4 vShadowCoord[ MAX_SHADOWS ];","float unpackDepth( const in vec4 rgba_depth ) {","const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );","float depth = dot( rgba_depth, bit_shift );","return depth;","}","#endif"].join("\n"),shadowmap_fragment:["#ifdef USE_SHADOWMAP","#ifdef SHADOWMAP_DEBUG","vec3 frustumColors[3];","frustumColors[0] = vec3( 1.0, 0.5, 0.0 );","frustumColors[1] = vec3( 0.0, 1.0, 0.8 );","frustumColors[2] = vec3( 0.0, 0.5, 1.0 );","#endif","#ifdef SHADOWMAP_CASCADE","int inFrustumCount = 0;","#endif","float fDepth;","vec3 shadowColor = vec3( 1.0 );","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;","bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );","bool inFrustum = all( inFrustumVec );","#ifdef SHADOWMAP_CASCADE","inFrustumCount += int( inFrustum );","bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );","#else","bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );","#endif","bool frustumTest = all( frustumTestVec );","if ( frustumTest ) {","shadowCoord.z += shadowBias[ i ];","#ifdef SHADOWMAP_SOFT","float shadow = 0.0;","const float shadowDelta = 1.0 / 9.0;","float xPixelOffset = 1.0 / shadowMapSize[ i ].x;","float yPixelOffset = 1.0 / shadowMapSize[ i ].y;","float dx0 = -1.25 * xPixelOffset;","float dy0 = -1.25 * yPixelOffset;","float dx1 = 1.25 * xPixelOffset;","float dy1 = 1.25 * yPixelOffset;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );","#else","vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );","float fDepth = unpackDepth( rgbaDepth );","if ( fDepth < shadowCoord.z )","shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );","#endif","}","#ifdef SHADOWMAP_DEBUG","#ifdef SHADOWMAP_CASCADE","if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];","#else","if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];","#endif","#endif","}","#ifdef GAMMA_OUTPUT","shadowColor *= shadowColor;","#endif","gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;","#endif"].join("\n"),shadowmap_pars_vertex:["#ifdef USE_SHADOWMAP","varying vec4 vShadowCoord[ MAX_SHADOWS ];","uniform mat4 shadowMatrix[ MAX_SHADOWS ];","#endif"].join("\n"),shadowmap_vertex:["#ifdef USE_SHADOWMAP","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vShadowCoord[ i ] = shadowMatrix[ i ] * mPosition;","}","#endif"].join("\n"),alphatest_fragment:["#ifdef ALPHATEST","if ( gl_FragColor.a < ALPHATEST ) discard;","#endif"].join("\n"),linear_to_gamma_fragment:["#ifdef GAMMA_OUTPUT","gl_FragColor.xyz = sqrt( gl_FragColor.xyz );","#endif"].join("\n")},THREE.UniformsUtils={merge:function(uniforms){var u,p,tmp,merged={};
for(u=0;uniforms.length>u;u++){tmp=this.clone(uniforms[u]);for(p in tmp)merged[p]=tmp[p]}return merged},clone:function(uniforms_src){var u,p,parameter_src,uniforms_dst={};for(u in uniforms_src){uniforms_dst[u]={};for(p in uniforms_src[u])parameter_src=uniforms_src[u][p],uniforms_dst[u][p]=parameter_src instanceof THREE.Color||parameter_src instanceof THREE.Vector2||parameter_src instanceof THREE.Vector3||parameter_src instanceof THREE.Vector4||parameter_src instanceof THREE.Matrix4||parameter_src instanceof THREE.Texture?parameter_src.clone():parameter_src instanceof Array?parameter_src.slice():parameter_src}return uniforms_dst}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightPosition:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngle:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:["void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float mNear;","uniform float mFar;","uniform float opacity;","void main() {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float color = 1.0 - smoothstep( mNear, mFar, depth );","gl_FragColor = vec4( vec3( color ), opacity );","}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;","void main() {","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","vNormal = normalMatrix * normal;","gl_Position = projectionMatrix * mvPosition;","}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vNormal;","void main() {","gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );","}"].join("\n")},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","varying vec3 vLightBack;","#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","varying vec3 vLightBack;","#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED","if ( gl_FrontFacing )","gl_FragColor.xyz *= vLightFront;","else","gl_FragColor.xyz *= vLightBack;","#else","gl_FragColor.xyz *= vLightFront;","#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG","varying vec3 vViewPosition;","varying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = transformedNormal;",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform vec3 ambient;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;","uniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","#ifdef USE_SIZEATTENUATION","gl_PointSize = size * ( scale / length( mvPosition.xyz ) );","#else","gl_PointSize = size;","#endif","gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {","gl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:["vec4 pack_depth( const in float depth ) {","const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","const vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","vec4 res = fract( depth * bit_shift );","res -= res.xxyz * bit_mask;","return res;","}","void main() {","gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );","}"].join("\n")}},THREE.Fog=function(hex,near,far){this.color=new THREE.Color(hex),this.near=void 0!==near?near:1,this.far=void 0!==far?far:1e3},THREE.FogExp2=function(hex,density){this.color=new THREE.Color(hex),this.density=void 0!==density?density:25e-5},THREE.Scene=function(){THREE.Object3D.call(this),this.fog=null,this.overrideMaterial=null,this.matrixAutoUpdate=!1,this.__objects=[],this.__lights=[],this.__objectsAdded=[],this.__objectsRemoved=[]},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.__addObject=function(object){if(object instanceof THREE.Light)-1===this.__lights.indexOf(object)&&this.__lights.push(object),object.target&&void 0===object.target.parent&&this.add(object.target);else if(!(object instanceof THREE.Camera||object instanceof THREE.Bone)&&-1===this.__objects.indexOf(object)){this.__objects.push(object),this.__objectsAdded.push(object);var i=this.__objectsRemoved.indexOf(object);-1!==i&&this.__objectsRemoved.splice(i,1)}for(var c=0;object.children.length>c;c++)this.__addObject(object.children[c])},THREE.Scene.prototype.__removeObject=function(object){if(object instanceof THREE.Light){var i=this.__lights.indexOf(object);-1!==i&&this.__lights.splice(i,1)}else if(!(object instanceof THREE.Camera)){var i=this.__objects.indexOf(object);if(-1!==i){this.__objects.splice(i,1),this.__objectsRemoved.push(object);var ai=this.__objectsAdded.indexOf(object);-1!==ai&&this.__objectsAdded.splice(ai,1)}}for(var c=0;object.children.length>c;c++)this.__removeObject(object.children[c])},THREE.CompressedTexture=function(mipmaps,width,height,format,type,mapping,wrapS,wrapT,magFilter,minFilter){THREE.Texture.call(this,null,mapping,wrapS,wrapT,magFilter,minFilter,format,type),this.image={width:width,height:height},this.mipmaps=mipmaps},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.clone=function(){var texture=new THREE.CompressedTexture;return texture.image=this.image,texture.mipmaps=this.mipmaps,texture.format=this.format,texture.type=this.type,texture.mapping=this.mapping,texture.wrapS=this.wrapS,texture.wrapT=this.wrapT,texture.magFilter=this.magFilter,texture.minFilter=this.minFilter,texture.anisotropy=this.anisotropy,texture.offset.copy(this.offset),texture.repeat.copy(this.repeat),texture},THREE.DataTexture=function(data,width,height,format,type,mapping,wrapS,wrapT,magFilter,minFilter){THREE.Texture.call(this,null,mapping,wrapS,wrapT,magFilter,minFilter,format,type),this.image={data:data,width:width,height:height}},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.clone=function(){var clonedTexture=new THREE.DataTexture(this.image.data,this.image.width,this.image.height,this.format,this.type,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);return clonedTexture.offset.copy(this.offset),clonedTexture.repeat.copy(this.repeat),clonedTexture},THREE.ColorUtils={adjustHSV:function(color,h,s,v){var hsv=THREE.ColorUtils.__hsv;THREE.ColorUtils.rgbToHsv(color,hsv),hsv.h=THREE.Math.clamp(hsv.h+h,0,1),hsv.s=THREE.Math.clamp(hsv.s+s,0,1),hsv.v=THREE.Math.clamp(hsv.v+v,0,1),color.setHSV(hsv.h,hsv.s,hsv.v)},rgbToHsv:function(color,hsv){var hue,saturation,r=color.r,g=color.g,b=color.b,max=Math.max(Math.max(r,g),b),min=Math.min(Math.min(r,g),b),value=max;if(min===max)hue=0,saturation=0;else{var delta=max-min;saturation=delta/max,hue=r===max?(g-b)/delta:g===max?2+(b-r)/delta:4+(r-g)/delta,hue/=6,0>hue&&(hue+=1),hue>1&&(hue-=1)}return void 0===hsv&&(hsv={h:0,s:0,v:0}),hsv.h=hue,hsv.s=saturation,hsv.v=value,hsv}},THREE.ColorUtils.__hsv={h:0,s:0,v:0},THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(data){var family=data.familyName.toLowerCase(),ThreeFont=this;return ThreeFont.faces[family]=ThreeFont.faces[family]||{},ThreeFont.faces[family][data.cssFontWeight]=ThreeFont.faces[family][data.cssFontWeight]||{},ThreeFont.faces[family][data.cssFontWeight][data.cssFontStyle]=data,ThreeFont.faces[family][data.cssFontWeight][data.cssFontStyle]=data,data},drawText:function(text){var i,face=this.getFace(),scale=this.size/face.resolution,offset=0,chars=(text+"").split(""),length=chars.length,fontPaths=[];for(i=0;length>i;i++){var path=new THREE.Path,ret=this.extractGlyphPoints(chars[i],face,scale,offset,path);offset+=ret.offset,fontPaths.push(ret.path)}var width=offset/2;return{paths:fontPaths,offset:width}},extractGlyphPoints:function(c,face,scale,offset,path){var i,i2,divisions,outline,action,length,scaleX,scaleY,x,y,cpx,cpy,cpx0,cpy0,cpx1,cpy1,cpx2,cpy2,laste,pts=[],glyph=face.glyphs[c]||face.glyphs["?"];if(glyph){if(glyph.o)for(outline=glyph._cachedOutline||(glyph._cachedOutline=glyph.o.split(" ")),length=outline.length,scaleX=scale,scaleY=scale,i=0;length>i;)switch(action=outline[i++]){case"m":x=outline[i++]*scaleX+offset,y=outline[i++]*scaleY,path.moveTo(x,y);break;case"l":x=outline[i++]*scaleX+offset,y=outline[i++]*scaleY,path.lineTo(x,y);break;case"q":if(cpx=outline[i++]*scaleX+offset,cpy=outline[i++]*scaleY,cpx1=outline[i++]*scaleX+offset,cpy1=outline[i++]*scaleY,path.quadraticCurveTo(cpx1,cpy1,cpx,cpy),laste=pts[pts.length-1])for(cpx0=laste.x,cpy0=laste.y,i2=1,divisions=this.divisions;divisions>=i2;i2++){var t=i2/divisions;THREE.Shape.Utils.b2(t,cpx0,cpx1,cpx),THREE.Shape.Utils.b2(t,cpy0,cpy1,cpy)}break;case"b":if(cpx=outline[i++]*scaleX+offset,cpy=outline[i++]*scaleY,cpx1=outline[i++]*scaleX+offset,cpy1=outline[i++]*-scaleY,cpx2=outline[i++]*scaleX+offset,cpy2=outline[i++]*-scaleY,path.bezierCurveTo(cpx,cpy,cpx1,cpy1,cpx2,cpy2),laste=pts[pts.length-1])for(cpx0=laste.x,cpy0=laste.y,i2=1,divisions=this.divisions;divisions>=i2;i2++){var t=i2/divisions;THREE.Shape.Utils.b3(t,cpx0,cpx1,cpx2,cpx),THREE.Shape.Utils.b3(t,cpy0,cpy1,cpy2,cpy)}}return{offset:glyph.ha*scale,path:path}}}},THREE.FontUtils.generateShapes=function(text,parameters){parameters=parameters||{};var size=void 0!==parameters.size?parameters.size:100,curveSegments=void 0!==parameters.curveSegments?parameters.curveSegments:4,font=void 0!==parameters.font?parameters.font:"helvetiker",weight=void 0!==parameters.weight?parameters.weight:"normal",style=void 0!==parameters.style?parameters.style:"normal";THREE.FontUtils.size=size,THREE.FontUtils.divisions=curveSegments,THREE.FontUtils.face=font,THREE.FontUtils.weight=weight,THREE.FontUtils.style=style;for(var data=THREE.FontUtils.drawText(text),paths=data.paths,shapes=[],p=0,pl=paths.length;pl>p;p++)Array.prototype.push.apply(shapes,paths[p].toShapes());return shapes},function(namespace){var EPSILON=1e-10,process=function(contour,indices){var n=contour.length;if(3>n)return null;var u,v,w,result=[],verts=[],vertIndices=[];if(area(contour)>0)for(v=0;n>v;v++)verts[v]=v;else for(v=0;n>v;v++)verts[v]=n-1-v;var nv=n,count=2*nv;for(v=nv-1;nv>2;){if(0>=count--)return console.log("Warning, unable to triangulate polygon!"),indices?vertIndices:result;if(u=v,u>=nv&&(u=0),v=u+1,v>=nv&&(v=0),w=v+1,w>=nv&&(w=0),snip(contour,u,v,w,nv,verts)){var a,b,c,s,t;for(a=verts[u],b=verts[v],c=verts[w],result.push([contour[a],contour[b],contour[c]]),vertIndices.push([verts[u],verts[v],verts[w]]),s=v,t=v+1;nv>t;s++,t++)verts[s]=verts[t];nv--,count=2*nv}}return indices?vertIndices:result},area=function(contour){for(var n=contour.length,a=0,p=n-1,q=0;n>q;p=q++)a+=contour[p].x*contour[q].y-contour[q].x*contour[p].y;return.5*a},insideTriangle=function(ax,ay,bx,by,cx,cy,px,py){var aX,aY,bX,bY,cX,cY,apx,apy,bpx,bpy,cpx,cpy,cCROSSap,bCROSScp,aCROSSbp;return aX=cx-bx,aY=cy-by,bX=ax-cx,bY=ay-cy,cX=bx-ax,cY=by-ay,apx=px-ax,apy=py-ay,bpx=px-bx,bpy=py-by,cpx=px-cx,cpy=py-cy,aCROSSbp=aX*bpy-aY*bpx,cCROSSap=cX*apy-cY*apx,bCROSScp=bX*cpy-bY*cpx,aCROSSbp>=0&&bCROSScp>=0&&cCROSSap>=0},snip=function(contour,u,v,w,n,verts){var p,ax,ay,bx,by,cx,cy,px,py;if(ax=contour[verts[u]].x,ay=contour[verts[u]].y,bx=contour[verts[v]].x,by=contour[verts[v]].y,cx=contour[verts[w]].x,cy=contour[verts[w]].y,EPSILON>(bx-ax)*(cy-ay)-(by-ay)*(cx-ax))return!1;for(p=0;n>p;p++)if(p!=u&&p!=v&&p!=w&&(px=contour[verts[p]].x,py=contour[verts[p]].y,insideTriangle(ax,ay,bx,by,cx,cy,px,py)))return!1;return!0};return namespace.Triangulate=process,namespace.Triangulate.area=area,namespace}(THREE.FontUtils),self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace},THREE.GeometryUtils={merge:function(geometry1,object2){for(var matrix,matrixRotation,vertexOffset=geometry1.vertices.length,geometry2=(geometry1.faceVertexUvs[0].length,object2 instanceof THREE.Mesh?object2.geometry:object2),vertices1=geometry1.vertices,vertices2=geometry2.vertices,faces1=geometry1.faces,faces2=geometry2.faces,uvs1=geometry1.faceVertexUvs[0],uvs2=geometry2.faceVertexUvs[0],geo1MaterialsMap={},i=0;geometry1.materials.length>i;i++){var id=geometry1.materials[i].id;geo1MaterialsMap[id]=i}object2 instanceof THREE.Mesh&&(object2.matrixAutoUpdate&&object2.updateMatrix(),matrix=object2.matrix,matrixRotation=new THREE.Matrix4,matrixRotation.extractRotation(matrix,object2.scale));for(var i=0,il=vertices2.length;il>i;i++){var vertex=vertices2[i],vertexCopy=vertex.clone();matrix&&matrix.multiplyVector3(vertexCopy),vertices1.push(vertexCopy)}for(i=0,il=faces2.length;il>i;i++){var faceCopy,normal,color,face=faces2[i],faceVertexNormals=face.vertexNormals,faceVertexColors=face.vertexColors;face instanceof THREE.Face3?faceCopy=new THREE.Face3(face.a+vertexOffset,face.b+vertexOffset,face.c+vertexOffset):face instanceof THREE.Face4&&(faceCopy=new THREE.Face4(face.a+vertexOffset,face.b+vertexOffset,face.c+vertexOffset,face.d+vertexOffset)),faceCopy.normal.copy(face.normal),matrixRotation&&matrixRotation.multiplyVector3(faceCopy.normal);for(var j=0,jl=faceVertexNormals.length;jl>j;j++)normal=faceVertexNormals[j].clone(),matrixRotation&&matrixRotation.multiplyVector3(normal),faceCopy.vertexNormals.push(normal);faceCopy.color.copy(face.color);for(var j=0,jl=faceVertexColors.length;jl>j;j++)color=faceVertexColors[j],faceCopy.vertexColors.push(color.clone());if(void 0!==face.materialIndex){var material2=geometry2.materials[face.materialIndex],materialId2=material2.id,materialIndex=geo1MaterialsMap[materialId2];void 0===materialIndex&&(materialIndex=geometry1.materials.length,geo1MaterialsMap[materialId2]=materialIndex,geometry1.materials.push(material2)),faceCopy.materialIndex=materialIndex}faceCopy.centroid.copy(face.centroid),matrix&&matrix.multiplyVector3(faceCopy.centroid),faces1.push(faceCopy)}for(i=0,il=uvs2.length;il>i;i++){for(var uv=uvs2[i],uvCopy=[],j=0,jl=uv.length;jl>j;j++)uvCopy.push(new THREE.UV(uv[j].u,uv[j].v));uvs1.push(uvCopy)}},clone:function(geometry){var i,il,cloneGeo=new THREE.Geometry,vertices=geometry.vertices,faces=geometry.faces,uvs=geometry.faceVertexUvs[0];for(geometry.materials&&(cloneGeo.materials=geometry.materials.slice()),i=0,il=vertices.length;il>i;i++){var vertex=vertices[i];cloneGeo.vertices.push(vertex.clone())}for(i=0,il=faces.length;il>i;i++){var face=faces[i];cloneGeo.faces.push(face.clone())}for(i=0,il=uvs.length;il>i;i++){for(var uv=uvs[i],uvCopy=[],j=0,jl=uv.length;jl>j;j++)uvCopy.push(new THREE.UV(uv[j].u,uv[j].v));cloneGeo.faceVertexUvs[0].push(uvCopy)}return cloneGeo},randomPointInTriangle:function(vectorA,vectorB,vectorC){var a,b,c,point=new THREE.Vector3,tmp=THREE.GeometryUtils.__v1;return a=THREE.GeometryUtils.random(),b=THREE.GeometryUtils.random(),a+b>1&&(a=1-a,b=1-b),c=1-a-b,point.copy(vectorA),point.multiplyScalar(a),tmp.copy(vectorB),tmp.multiplyScalar(b),point.addSelf(tmp),tmp.copy(vectorC),tmp.multiplyScalar(c),point.addSelf(tmp),point},randomPointInFace:function(face,geometry,useCachedAreas){var vA,vB,vC,vD;if(face instanceof THREE.Face3)return vA=geometry.vertices[face.a],vB=geometry.vertices[face.b],vC=geometry.vertices[face.c],THREE.GeometryUtils.randomPointInTriangle(vA,vB,vC);if(face instanceof THREE.Face4){vA=geometry.vertices[face.a],vB=geometry.vertices[face.b],vC=geometry.vertices[face.c],vD=geometry.vertices[face.d];var area1,area2;useCachedAreas?face._area1&&face._area2?(area1=face._area1,area2=face._area2):(area1=THREE.GeometryUtils.triangleArea(vA,vB,vD),area2=THREE.GeometryUtils.triangleArea(vB,vC,vD),face._area1=area1,face._area2=area2):(area1=THREE.GeometryUtils.triangleArea(vA,vB,vD),area2=THREE.GeometryUtils.triangleArea(vB,vC,vD));var r=THREE.GeometryUtils.random()*(area1+area2);return area1>r?THREE.GeometryUtils.randomPointInTriangle(vA,vB,vD):THREE.GeometryUtils.randomPointInTriangle(vB,vC,vD)}},randomPointsInGeometry:function(geometry,n){function binarySearchIndices(value){function binarySearch(start,end){if(start>end)return start;var mid=start+Math.floor((end-start)/2);return cumulativeAreas[mid]>value?binarySearch(start,mid-1):value>cumulativeAreas[mid]?binarySearch(mid+1,end):mid}var result=binarySearch(0,cumulativeAreas.length-1);return result}var face,i,vA,vB,vC,vD,faces=geometry.faces,vertices=geometry.vertices,il=faces.length,totalArea=0,cumulativeAreas=[];for(i=0;il>i;i++)face=faces[i],face instanceof THREE.Face3?(vA=vertices[face.a],vB=vertices[face.b],vC=vertices[face.c],face._area=THREE.GeometryUtils.triangleArea(vA,vB,vC)):face instanceof THREE.Face4&&(vA=vertices[face.a],vB=vertices[face.b],vC=vertices[face.c],vD=vertices[face.d],face._area1=THREE.GeometryUtils.triangleArea(vA,vB,vD),face._area2=THREE.GeometryUtils.triangleArea(vB,vC,vD),face._area=face._area1+face._area2),totalArea+=face._area,cumulativeAreas[i]=totalArea;var r,index,result=[],stats={};for(i=0;n>i;i++)r=THREE.GeometryUtils.random()*totalArea,index=binarySearchIndices(r),result[i]=THREE.GeometryUtils.randomPointInFace(faces[index],geometry,!0),stats[index]?stats[index]+=1:stats[index]=1;return result},triangleArea:function(vectorA,vectorB,vectorC){var s,a,b,c,tmp=THREE.GeometryUtils.__v1;return tmp.sub(vectorA,vectorB),a=tmp.length(),tmp.sub(vectorA,vectorC),b=tmp.length(),tmp.sub(vectorB,vectorC),c=tmp.length(),s=.5*(a+b+c),Math.sqrt(s*(s-a)*(s-b)*(s-c))},center:function(geometry){geometry.computeBoundingBox();var bb=geometry.boundingBox,offset=new THREE.Vector3;return offset.add(bb.min,bb.max),offset.multiplyScalar(-.5),geometry.applyMatrix((new THREE.Matrix4).makeTranslation(offset.x,offset.y,offset.z)),geometry.computeBoundingBox(),offset},normalizeUVs:function(geometry){for(var uvSet=geometry.faceVertexUvs[0],i=0,il=uvSet.length;il>i;i++)for(var uvs=uvSet[i],j=0,jl=uvs.length;jl>j;j++)1!==uvs[j].u&&(uvs[j].u=uvs[j].u-Math.floor(uvs[j].u)),1!==uvs[j].v&&(uvs[j].v=uvs[j].v-Math.floor(uvs[j].v))},triangulateQuads:function(geometry){var i,il,j,jl,faces=[],faceUvs=[],faceVertexUvs=[];for(i=0,il=geometry.faceUvs.length;il>i;i++)faceUvs[i]=[];for(i=0,il=geometry.faceVertexUvs.length;il>i;i++)faceVertexUvs[i]=[];for(i=0,il=geometry.faces.length;il>i;i++){var face=geometry.faces[i];if(face instanceof THREE.Face4){var a=face.a,b=face.b,c=face.c,d=face.d,triA=new THREE.Face3,triB=new THREE.Face3;for(triA.color.copy(face.color),triB.color.copy(face.color),triA.materialIndex=face.materialIndex,triB.materialIndex=face.materialIndex,triA.a=a,triA.b=b,triA.c=d,triB.a=b,triB.b=c,triB.c=d,4===face.vertexColors.length&&(triA.vertexColors[0]=face.vertexColors[0].clone(),triA.vertexColors[1]=face.vertexColors[1].clone(),triA.vertexColors[2]=face.vertexColors[3].clone(),triB.vertexColors[0]=face.vertexColors[1].clone(),triB.vertexColors[1]=face.vertexColors[2].clone(),triB.vertexColors[2]=face.vertexColors[3].clone()),faces.push(triA,triB),j=0,jl=geometry.faceVertexUvs.length;jl>j;j++)if(geometry.faceVertexUvs[j].length){var uvs=geometry.faceVertexUvs[j][i],uvA=uvs[0],uvB=uvs[1],uvC=uvs[2],uvD=uvs[3],uvsTriA=[uvA.clone(),uvB.clone(),uvD.clone()],uvsTriB=[uvB.clone(),uvC.clone(),uvD.clone()];faceVertexUvs[j].push(uvsTriA,uvsTriB)}for(j=0,jl=geometry.faceUvs.length;jl>j;j++)if(geometry.faceUvs[j].length){var faceUv=geometry.faceUvs[j][i];faceUvs[j].push(faceUv,faceUv)}}else{for(faces.push(face),j=0,jl=geometry.faceUvs.length;jl>j;j++)faceUvs[j].push(geometry.faceUvs[j][i]);for(j=0,jl=geometry.faceVertexUvs.length;jl>j;j++)faceVertexUvs[j].push(geometry.faceVertexUvs[j][i])}}geometry.faces=faces,geometry.faceUvs=faceUvs,geometry.faceVertexUvs=faceVertexUvs,geometry.computeCentroids(),geometry.computeFaceNormals(),geometry.computeVertexNormals(),geometry.hasTangents&&geometry.computeTangents()},explode:function(geometry){for(var vertices=[],i=0,il=geometry.faces.length;il>i;i++){var n=vertices.length,face=geometry.faces[i];if(face instanceof THREE.Face4){var a=face.a,b=face.b,c=face.c,d=face.d,va=geometry.vertices[a],vb=geometry.vertices[b],vc=geometry.vertices[c],vd=geometry.vertices[d];vertices.push(va.clone()),vertices.push(vb.clone()),vertices.push(vc.clone()),vertices.push(vd.clone()),face.a=n,face.b=n+1,face.c=n+2,face.d=n+3}else{var a=face.a,b=face.b,c=face.c,va=geometry.vertices[a],vb=geometry.vertices[b],vc=geometry.vertices[c];vertices.push(va.clone()),vertices.push(vb.clone()),vertices.push(vc.clone()),face.a=n,face.b=n+1,face.c=n+2}}geometry.vertices=vertices,delete geometry.__tmpVertices},tessellate:function(geometry,maxEdgeLength){var i,il,face,a,b,c,d,va,vb,vc,vd,dab,dbc,dac,dcd,dad,m,m1,m2,vm,vm1,vm2,vnm,vnm1,vnm2,vcm,vcm1,vcm2,triA,triB,quadA,quadB,edge,faces=[],faceVertexUvs=[];for(i=0,il=geometry.faceVertexUvs.length;il>i;i++)faceVertexUvs[i]=[];for(i=0,il=geometry.faces.length;il>i;i++)if(face=geometry.faces[i],face instanceof THREE.Face3)if(a=face.a,b=face.b,c=face.c,va=geometry.vertices[a],vb=geometry.vertices[b],vc=geometry.vertices[c],dab=va.distanceTo(vb),dbc=vb.distanceTo(vc),dac=va.distanceTo(vc),dab>maxEdgeLength||dbc>maxEdgeLength||dac>maxEdgeLength){m=geometry.vertices.length,triA=face.clone(),triB=face.clone(),dab>=dbc&&dab>=dac?(vm=va.clone(),vm.lerpSelf(vb,.5),triA.a=a,triA.b=m,triA.c=c,triB.a=m,triB.b=b,triB.c=c,3===face.vertexNormals.length&&(vnm=face.vertexNormals[0].clone(),vnm.lerpSelf(face.vertexNormals[1],.5),triA.vertexNormals[1].copy(vnm),triB.vertexNormals[0].copy(vnm)),3===face.vertexColors.length&&(vcm=face.vertexColors[0].clone(),vcm.lerpSelf(face.vertexColors[1],.5),triA.vertexColors[1].copy(vcm),triB.vertexColors[0].copy(vcm)),edge=0):dbc>=dab&&dbc>=dac?(vm=vb.clone(),vm.lerpSelf(vc,.5),triA.a=a,triA.b=b,triA.c=m,triB.a=m,triB.b=c,triB.c=a,3===face.vertexNormals.length&&(vnm=face.vertexNormals[1].clone(),vnm.lerpSelf(face.vertexNormals[2],.5),triA.vertexNormals[2].copy(vnm),triB.vertexNormals[0].copy(vnm),triB.vertexNormals[1].copy(face.vertexNormals[2]),triB.vertexNormals[2].copy(face.vertexNormals[0])),3===face.vertexColors.length&&(vcm=face.vertexColors[1].clone(),vcm.lerpSelf(face.vertexColors[2],.5),triA.vertexColors[2].copy(vcm),triB.vertexColors[0].copy(vcm),triB.vertexColors[1].copy(face.vertexColors[2]),triB.vertexColors[2].copy(face.vertexColors[0])),edge=1):(vm=va.clone(),vm.lerpSelf(vc,.5),triA.a=a,triA.b=b,triA.c=m,triB.a=m,triB.b=b,triB.c=c,3===face.vertexNormals.length&&(vnm=face.vertexNormals[0].clone(),vnm.lerpSelf(face.vertexNormals[2],.5),triA.vertexNormals[2].copy(vnm),triB.vertexNormals[0].copy(vnm)),3===face.vertexColors.length&&(vcm=face.vertexColors[0].clone(),vcm.lerpSelf(face.vertexColors[2],.5),triA.vertexColors[2].copy(vcm),triB.vertexColors[0].copy(vcm)),edge=2),faces.push(triA,triB),geometry.vertices.push(vm);var j,jl,uvs,uvA,uvB,uvC,uvM,uvsTriA,uvsTriB;for(j=0,jl=geometry.faceVertexUvs.length;jl>j;j++)geometry.faceVertexUvs[j].length&&(uvs=geometry.faceVertexUvs[j][i],uvA=uvs[0],uvB=uvs[1],uvC=uvs[2],0===edge?(uvM=uvA.clone(),uvM.lerpSelf(uvB,.5),uvsTriA=[uvA.clone(),uvM.clone(),uvC.clone()],uvsTriB=[uvM.clone(),uvB.clone(),uvC.clone()]):1===edge?(uvM=uvB.clone(),uvM.lerpSelf(uvC,.5),uvsTriA=[uvA.clone(),uvB.clone(),uvM.clone()],uvsTriB=[uvM.clone(),uvC.clone(),uvA.clone()]):(uvM=uvA.clone(),uvM.lerpSelf(uvC,.5),uvsTriA=[uvA.clone(),uvB.clone(),uvM.clone()],uvsTriB=[uvM.clone(),uvB.clone(),uvC.clone()]),faceVertexUvs[j].push(uvsTriA,uvsTriB))}else for(faces.push(face),j=0,jl=geometry.faceVertexUvs.length;jl>j;j++)faceVertexUvs[j].push(geometry.faceVertexUvs[j][i]);else if(a=face.a,b=face.b,c=face.c,d=face.d,va=geometry.vertices[a],vb=geometry.vertices[b],vc=geometry.vertices[c],vd=geometry.vertices[d],dab=va.distanceTo(vb),dbc=vb.distanceTo(vc),dcd=vc.distanceTo(vd),dad=va.distanceTo(vd),dab>maxEdgeLength||dbc>maxEdgeLength||dcd>maxEdgeLength||dad>maxEdgeLength){m1=geometry.vertices.length,m2=geometry.vertices.length+1,quadA=face.clone(),quadB=face.clone(),dab>=dbc&&dab>=dcd&&dab>=dad||dcd>=dbc&&dcd>=dab&&dcd>=dad?(vm1=va.clone(),vm1.lerpSelf(vb,.5),vm2=vc.clone(),vm2.lerpSelf(vd,.5),quadA.a=a,quadA.b=m1,quadA.c=m2,quadA.d=d,quadB.a=m1,quadB.b=b,quadB.c=c,quadB.d=m2,4===face.vertexNormals.length&&(vnm1=face.vertexNormals[0].clone(),vnm1.lerpSelf(face.vertexNormals[1],.5),vnm2=face.vertexNormals[2].clone(),vnm2.lerpSelf(face.vertexNormals[3],.5),quadA.vertexNormals[1].copy(vnm1),quadA.vertexNormals[2].copy(vnm2),quadB.vertexNormals[0].copy(vnm1),quadB.vertexNormals[3].copy(vnm2)),4===face.vertexColors.length&&(vcm1=face.vertexColors[0].clone(),vcm1.lerpSelf(face.vertexColors[1],.5),vcm2=face.vertexColors[2].clone(),vcm2.lerpSelf(face.vertexColors[3],.5),quadA.vertexColors[1].copy(vcm1),quadA.vertexColors[2].copy(vcm2),quadB.vertexColors[0].copy(vcm1),quadB.vertexColors[3].copy(vcm2)),edge=0):(vm1=vb.clone(),vm1.lerpSelf(vc,.5),vm2=vd.clone(),vm2.lerpSelf(va,.5),quadA.a=a,quadA.b=b,quadA.c=m1,quadA.d=m2,quadB.a=m2,quadB.b=m1,quadB.c=c,quadB.d=d,4===face.vertexNormals.length&&(vnm1=face.vertexNormals[1].clone(),vnm1.lerpSelf(face.vertexNormals[2],.5),vnm2=face.vertexNormals[3].clone(),vnm2.lerpSelf(face.vertexNormals[0],.5),quadA.vertexNormals[2].copy(vnm1),quadA.vertexNormals[3].copy(vnm2),quadB.vertexNormals[0].copy(vnm2),quadB.vertexNormals[1].copy(vnm1)),4===face.vertexColors.length&&(vcm1=face.vertexColors[1].clone(),vcm1.lerpSelf(face.vertexColors[2],.5),vcm2=face.vertexColors[3].clone(),vcm2.lerpSelf(face.vertexColors[0],.5),quadA.vertexColors[2].copy(vcm1),quadA.vertexColors[3].copy(vcm2),quadB.vertexColors[0].copy(vcm2),quadB.vertexColors[1].copy(vcm1)),edge=1),faces.push(quadA,quadB),geometry.vertices.push(vm1,vm2);
var j,jl,uvs,uvA,uvB,uvC,uvD,uvM1,uvM2,uvsQuadA,uvsQuadB;for(j=0,jl=geometry.faceVertexUvs.length;jl>j;j++)geometry.faceVertexUvs[j].length&&(uvs=geometry.faceVertexUvs[j][i],uvA=uvs[0],uvB=uvs[1],uvC=uvs[2],uvD=uvs[3],0===edge?(uvM1=uvA.clone(),uvM1.lerpSelf(uvB,.5),uvM2=uvC.clone(),uvM2.lerpSelf(uvD,.5),uvsQuadA=[uvA.clone(),uvM1.clone(),uvM2.clone(),uvD.clone()],uvsQuadB=[uvM1.clone(),uvB.clone(),uvC.clone(),uvM2.clone()]):(uvM1=uvB.clone(),uvM1.lerpSelf(uvC,.5),uvM2=uvD.clone(),uvM2.lerpSelf(uvA,.5),uvsQuadA=[uvA.clone(),uvB.clone(),uvM1.clone(),uvM2.clone()],uvsQuadB=[uvM2.clone(),uvM1.clone(),uvC.clone(),uvD.clone()]),faceVertexUvs[j].push(uvsQuadA,uvsQuadB))}else for(faces.push(face),j=0,jl=geometry.faceVertexUvs.length;jl>j;j++)faceVertexUvs[j].push(geometry.faceVertexUvs[j][i]);geometry.faces=faces,geometry.faceVertexUvs=faceVertexUvs}},THREE.GeometryUtils.random=THREE.Math.random16,THREE.GeometryUtils.__v1=new THREE.Vector3,THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(url,mapping,onLoad,onError){var image=new Image,texture=new THREE.Texture(image,mapping),loader=new THREE.ImageLoader;return loader.addEventListener("load",function(event){texture.image=event.content,texture.needsUpdate=!0,onLoad&&onLoad(texture)}),loader.addEventListener("error",function(event){onError&&onError(event.message)}),loader.crossOrigin=this.crossOrigin,loader.load(url,image),texture},loadCompressedTexture:function(url,mapping,onLoad,onError){var texture=new THREE.CompressedTexture;texture.mapping=mapping;var request=new XMLHttpRequest;return request.onload=function(){var buffer=request.response,dds=THREE.ImageUtils.parseDDS(buffer,!0);texture.format=dds.format,texture.mipmaps=dds.mipmaps,texture.image.width=dds.width,texture.image.height=dds.height,texture.generateMipmaps=!1,texture.needsUpdate=!0,onLoad&&onLoad(texture)},request.onerror=onError,request.open("GET",url,!0),request.responseType="arraybuffer",request.send(null),texture},loadTextureCube:function(array,mapping,onLoad,onError){var images=[];images.loadCount=0;var texture=new THREE.Texture;texture.image=images,void 0!==mapping&&(texture.mapping=mapping),texture.flipY=!1;for(var i=0,il=array.length;il>i;++i){var cubeImage=new Image;images[i]=cubeImage,cubeImage.onload=function(){images.loadCount+=1,6===images.loadCount&&(texture.needsUpdate=!0,onLoad&&onLoad())},cubeImage.onerror=onError,cubeImage.crossOrigin=this.crossOrigin,cubeImage.src=array[i]}return texture},loadCompressedTextureCube:function(array,mapping,onLoad,onError){var images=[];images.loadCount=0;var texture=new THREE.CompressedTexture;texture.image=images,void 0!==mapping&&(texture.mapping=mapping),texture.flipY=!1,texture.generateMipmaps=!1;for(var generateCubeFaceCallback=function(rq,img){return function(){var buffer=rq.response,dds=THREE.ImageUtils.parseDDS(buffer,!0);img.format=dds.format,img.mipmaps=dds.mipmaps,img.width=dds.width,img.height=dds.height,images.loadCount+=1,6===images.loadCount&&(texture.format=dds.format,texture.needsUpdate=!0,onLoad&&onLoad())}},i=0,il=array.length;il>i;++i){var cubeImage={};images[i]=cubeImage;var request=new XMLHttpRequest;request.onload=generateCubeFaceCallback(request,cubeImage),request.onerror=onError;var url=array[i];request.open("GET",url,!0),request.responseType="arraybuffer",request.send(null)}return texture},parseDDS:function(buffer,loadMipmaps){function fourCCToInt32(value){return value.charCodeAt(0)+(value.charCodeAt(1)<<8)+(value.charCodeAt(2)<<16)+(value.charCodeAt(3)<<24)}function int32ToFourCC(value){return String.fromCharCode(255&value,255&value>>8,255&value>>16,255&value>>24)}var dds={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},DDS_MAGIC=542327876,DDSD_MIPMAPCOUNT=131072,DDPF_FOURCC=4,FOURCC_DXT1=fourCCToInt32("DXT1"),FOURCC_DXT3=fourCCToInt32("DXT3"),FOURCC_DXT5=fourCCToInt32("DXT5"),headerLengthInt=31,off_magic=0,off_size=1,off_flags=2,off_height=3,off_width=4,off_mipmapCount=7,off_pfFlags=20,off_pfFourCC=21,header=new Int32Array(buffer,0,headerLengthInt);if(header[off_magic]!==DDS_MAGIC)return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),dds;if(!header[off_pfFlags]&DDPF_FOURCC)return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),dds;var blockBytes,fourCC=header[off_pfFourCC];switch(fourCC){case FOURCC_DXT1:blockBytes=8,dds.format=THREE.RGB_S3TC_DXT1_Format;break;case FOURCC_DXT3:blockBytes=16,dds.format=THREE.RGBA_S3TC_DXT3_Format;break;case FOURCC_DXT5:blockBytes=16,dds.format=THREE.RGBA_S3TC_DXT5_Format;break;default:return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",int32ToFourCC(fourCC)),dds}dds.mipmapCount=1,header[off_flags]&DDSD_MIPMAPCOUNT&&loadMipmaps!==!1&&(dds.mipmapCount=Math.max(1,header[off_mipmapCount])),dds.width=header[off_width],dds.height=header[off_height];for(var dataOffset=header[off_size]+4,width=dds.width,height=dds.height,i=0;dds.mipmapCount>i;i++){var dataLength=Math.max(4,width)/4*Math.max(4,height)/4*blockBytes,byteArray=new Uint8Array(buffer,dataOffset,dataLength),mipmap={data:byteArray,width:width,height:height};dds.mipmaps.push(mipmap),dataOffset+=dataLength,width=Math.max(.5*width,1),height=Math.max(.5*height,1)}return dds},getNormalMap:function(image,depth){var cross=function(a,b){return[a[1]*b[2]-a[2]*b[1],a[2]*b[0]-a[0]*b[2],a[0]*b[1]-a[1]*b[0]]},subtract=function(a,b){return[a[0]-b[0],a[1]-b[1],a[2]-b[2]]},normalize=function(a){var l=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/l,a[1]/l,a[2]/l]};depth=1|depth;var width=image.width,height=image.height,canvas=document.createElement("canvas");canvas.width=width,canvas.height=height;var context=canvas.getContext("2d");context.drawImage(image,0,0);for(var data=context.getImageData(0,0,width,height).data,imageData=context.createImageData(width,height),output=imageData.data,x=0;width>x;x++)for(var y=0;height>y;y++){var ly=0>y-1?0:y-1,uy=y+1>height-1?height-1:y+1,lx=0>x-1?0:x-1,ux=x+1>width-1?width-1:x+1,points=[],origin=[0,0,data[4*(y*width+x)]/255*depth];points.push([-1,0,data[4*(y*width+lx)]/255*depth]),points.push([-1,-1,data[4*(ly*width+lx)]/255*depth]),points.push([0,-1,data[4*(ly*width+x)]/255*depth]),points.push([1,-1,data[4*(ly*width+ux)]/255*depth]),points.push([1,0,data[4*(y*width+ux)]/255*depth]),points.push([1,1,data[4*(uy*width+ux)]/255*depth]),points.push([0,1,data[4*(uy*width+x)]/255*depth]),points.push([-1,1,data[4*(uy*width+lx)]/255*depth]);for(var normals=[],num_points=points.length,i=0;num_points>i;i++){var v1=points[i],v2=points[(i+1)%num_points];v1=subtract(v1,origin),v2=subtract(v2,origin),normals.push(normalize(cross(v1,v2)))}for(var normal=[0,0,0],i=0;normals.length>i;i++)normal[0]+=normals[i][0],normal[1]+=normals[i][1],normal[2]+=normals[i][2];normal[0]/=normals.length,normal[1]/=normals.length,normal[2]/=normals.length;var idx=4*(y*width+x);output[idx]=0|255*((normal[0]+1)/2),output[idx+1]=0|255*((normal[1]+1)/2),output[idx+2]=0|255*normal[2],output[idx+3]=255}return context.putImageData(imageData,0,0),canvas},generateDataTexture:function(width,height,color){for(var size=width*height,data=new Uint8Array(3*size),r=Math.floor(255*color.r),g=Math.floor(255*color.g),b=Math.floor(255*color.b),i=0;size>i;i++)data[3*i]=r,data[3*i+1]=g,data[3*i+2]=b;var texture=new THREE.DataTexture(data,width,height,THREE.RGBFormat);return texture.needsUpdate=!0,texture}},THREE.SceneUtils={showHierarchy:function(root,visible){THREE.SceneUtils.traverseHierarchy(root,function(node){node.visible=visible})},traverseHierarchy:function(root,callback){var n,i,l=root.children.length;for(i=0;l>i;i++)n=root.children[i],callback(n),THREE.SceneUtils.traverseHierarchy(n,callback)},createMultiMaterialObject:function(geometry,materials){var i,il=materials.length,group=new THREE.Object3D;for(i=0;il>i;i++){var object=new THREE.Mesh(geometry,materials[i]);group.add(object)}return group},cloneObject:function(source){var object;source instanceof THREE.MorphAnimMesh?(object=new THREE.MorphAnimMesh(source.geometry,source.material),object.duration=source.duration,object.mirroredLoop=source.mirroredLoop,object.time=source.time,object.lastKeyframe=source.lastKeyframe,object.currentKeyframe=source.currentKeyframe,object.direction=source.direction,object.directionBackwards=source.directionBackwards):source instanceof THREE.SkinnedMesh?object=new THREE.SkinnedMesh(source.geometry,source.material,source.useVertexTexture):source instanceof THREE.Mesh?object=new THREE.Mesh(source.geometry,source.material):source instanceof THREE.Line?object=new THREE.Line(source.geometry,source.material,source.type):source instanceof THREE.Ribbon?object=new THREE.Ribbon(source.geometry,source.material):source instanceof THREE.ParticleSystem?(object=new THREE.ParticleSystem(source.geometry,source.material),object.sortParticles=source.sortParticles):source instanceof THREE.Particle?object=new THREE.Particle(source.material):source instanceof THREE.Sprite?(object=new THREE.Sprite({}),object.color.copy(source.color),object.map=source.map,object.blending=source.blending,object.useScreenCoordinates=source.useScreenCoordinates,object.mergeWith3D=source.mergeWith3D,object.affectedByDistance=source.affectedByDistance,object.scaleByViewport=source.scaleByViewport,object.alignment=source.alignment,object.rotation3d.copy(source.rotation3d),object.rotation=source.rotation,object.opacity=source.opacity,object.uvOffset.copy(source.uvOffset),object.uvScale.copy(source.uvScale)):source instanceof THREE.LOD?object=new THREE.LOD:source instanceof THREE.Object3D&&(object=new THREE.Object3D),object.name=source.name,object.parent=source.parent,object.up.copy(source.up),object.position.copy(source.position),object.rotation instanceof THREE.Vector3&&object.rotation.copy(source.rotation),object.eulerOrder=source.eulerOrder,object.scale.copy(source.scale),object.dynamic=source.dynamic,object.renderDepth=source.renderDepth,object.rotationAutoUpdate=source.rotationAutoUpdate,object.matrix.copy(source.matrix),object.matrixWorld.copy(source.matrixWorld),object.matrixRotationWorld.copy(source.matrixRotationWorld),object.matrixAutoUpdate=source.matrixAutoUpdate,object.matrixWorldNeedsUpdate=source.matrixWorldNeedsUpdate,object.quaternion.copy(source.quaternion),object.useQuaternion=source.useQuaternion,object.boundRadius=source.boundRadius,object.boundRadiusScale=source.boundRadiusScale,object.visible=source.visible,object.castShadow=source.castShadow,object.receiveShadow=source.receiveShadow,object.frustumCulled=source.frustumCulled;for(var i=0;source.children.length>i;i++){var child=THREE.SceneUtils.cloneObject(source.children[i]);object.children[i]=child,child.parent=object}if(source instanceof THREE.LOD)for(var i=0;source.LODs.length>i;i++){var lod=source.LODs[i];object.LODs[i]={visibleAtDistance:lod.visibleAtDistance,object3D:object.children[i]}}return object},detach:function(child,parent,scene){child.applyMatrix(parent.matrixWorld),parent.remove(child),scene.add(child)},attach:function(child,scene,parent){var matrixWorldInverse=new THREE.Matrix4;matrixWorldInverse.getInverse(parent.matrixWorld),child.applyMatrix(matrixWorldInverse),scene.remove(child),parent.add(child)}},THREE.WebGLRenderer&&(THREE.ShaderUtils={lib:{additive:{uniforms:{tDiffuse:{type:"t",value:0,texture:null},tAdd:{type:"t",value:1,texture:null}},vertexShader:["varying vec2 vUv;","void main() {","vUv = vec2( uv.x, 1.0 - uv.y );","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform sampler2D tAdd;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","vec4 glow = texture2D( tAdd, vUv );","gl_FragColor = texel + vec4(0.5, 0.75, 1.0, 1.0) * glow * 2.0;","}"].join("n")},fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:null}},fragmentShader:["uniform samplerCube tCube;","varying vec3 vReflect;","varying vec3 vRefract[3];","varying float vReflectionFactor;","void main() {","vec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );","vec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );","refractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;","refractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;","refractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;","refractedColor.a = 1.0;","gl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );","}"].join("\n"),vertexShader:["uniform float mRefractionRatio;","uniform float mFresnelBias;","uniform float mFresnelScale;","uniform float mFresnelPower;","varying vec3 vReflect;","varying vec3 vRefract[3];","varying float vReflectionFactor;","void main() {","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","vec4 mPosition = modelMatrix * vec4( position, 1.0 );","vec3 nWorld = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );","vec3 I = mPosition.xyz - cameraPosition;","vReflect = reflect( I, nWorld );","vRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );","vRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );","vRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );","vReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );","gl_Position = projectionMatrix * mvPosition;","}"].join("\n")},normal:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:.98},uReflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;","uniform vec3 uDiffuseColor;","uniform vec3 uSpecularColor;","uniform float uShininess;","uniform float uOpacity;","uniform bool enableDiffuse;","uniform bool enableSpecular;","uniform bool enableAO;","uniform bool enableReflection;","uniform sampler2D tDiffuse;","uniform sampler2D tNormal;","uniform sampler2D tSpecular;","uniform sampler2D tAO;","uniform samplerCube tCube;","uniform vec2 uNormalScale;","uniform bool useRefract;","uniform float uRefractionRatio;","uniform float uReflectivity;","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngle[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {","gl_FragColor = vec4( vec3( 1.0 ), uOpacity );","vec3 specularTex = vec3( 1.0 );","vec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;","normalTex.xy *= uNormalScale;","normalTex = normalize( normalTex );","if( enableDiffuse ) {","#ifdef GAMMA_INPUT","vec4 texelColor = texture2D( tDiffuse, vUv );","texelColor.xyz *= texelColor.xyz;","gl_FragColor = gl_FragColor * texelColor;","#else","gl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );","#endif","}","if( enableAO ) {","#ifdef GAMMA_INPUT","vec4 aoColor = texture2D( tAO, vUv );","aoColor.xyz *= aoColor.xyz;","gl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;","#else","gl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;","#endif","}","if( enableSpecular )","specularTex = texture2D( tSpecular, vUv ).xyz;","mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );","vec3 finalNormal = tsb * normalTex;","#ifdef FLIP_SIDED","finalNormal = -finalNormal;","#endif","vec3 normal = normalize( finalNormal );","vec3 viewPosition = normalize( vViewPosition );","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 pointVector = lPosition.xyz + vViewPosition.xyz;","float pointDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","pointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );","pointVector = normalize( pointVector );","#ifdef WRAP_AROUND","float pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );","float pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );","vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","#else","float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );","#endif","pointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;","vec3 pointHalfVector = normalize( pointVector + viewPosition );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","float pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );","pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;","#else","pointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","vec3 spotDiffuse = vec3( 0.0 );","vec3 spotSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 spotVector = lPosition.xyz + vViewPosition.xyz;","float spotDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","spotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );","spotVector = normalize( spotVector );","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","if ( spotEffect > spotLightAngle[ i ] ) {","spotEffect = pow( spotEffect, spotLightExponent[ i ] );","#ifdef WRAP_AROUND","float spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );","float spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );","vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","#else","float spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );","#endif","spotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;","vec3 spotHalfVector = normalize( spotVector + viewPosition );","float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","float spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );","spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;","#else","spotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;","#endif","}","}","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","#ifdef WRAP_AROUND","float directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );","float directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );","vec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );","#else","float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );","#endif","dirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;","vec3 dirHalfVector = normalize( dirVector + viewPosition );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );","dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","#else","dirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;","#endif","}","#endif","#if MAX_HEMI_LIGHTS > 0","vec3 hemiDiffuse  = vec3( 0.0 );","vec3 hemiSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );","vec3 lVector = normalize( lPosition.xyz + vViewPosition.xyz );","float dotProduct = dot( normal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","hemiDiffuse += uDiffuseColor * hemiColor;","vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","float hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );","vec3 lVectorGround = normalize( -lPosition.xyz + vViewPosition.xyz );","vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","float hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotProductGround = dot( normal, lVectorGround );","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );","vec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );","hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","#else","hemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;","#endif","}","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#if MAX_HEMI_LIGHTS > 0","totalDiffuse += hemiDiffuse;","totalSpecular += hemiSpecular;","#endif","#if MAX_POINT_LIGHTS > 0","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","totalDiffuse += spotDiffuse;","totalSpecular += spotSpecular;","#endif","#ifdef METAL","gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );","#else","gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;","#endif","if ( enableReflection ) {","vec3 vReflect;","vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","if ( useRefract ) {","vReflect = refract( cameraToVertex, normal, uRefractionRatio );","} else {","vReflect = reflect( cameraToVertex, normal );","}","vec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );","#ifdef GAMMA_INPUT","cubeColor.xyz *= cubeColor.xyz;","#endif","gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );","}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;","uniform vec2 uOffset;","uniform vec2 uRepeat;","uniform bool enableDisplacement;","#ifdef VERTEX_TEXTURES","uniform sampler2D tDisplacement;","uniform float uDisplacementScale;","uniform float uDisplacementBias;","#endif","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,"#ifdef USE_SKINNING","vNormal = normalMatrix * skinnedNormal.xyz;","vec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );","vTangent = normalMatrix * skinnedTangent.xyz;","#else","vNormal = normalMatrix * normal;","vTangent = normalMatrix * tangent.xyz;","#endif","vBinormal = cross( vNormal, vTangent ) * tangent.w;","vUv = uv * uRepeat + uOffset;",THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,"gl_Position = projectionMatrix * mvPosition;","vWorldPosition = mPosition.xyz;","vViewPosition = -mvPosition.xyz;","#ifdef USE_SHADOWMAP","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vShadowCoord[ i ] = shadowMatrix[ i ] * mPosition;","}","#endif","}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vViewPosition;","void main() {","vec4 mPosition = modelMatrix * vec4( position, 1.0 );","vViewPosition = cameraPosition - mPosition.xyz;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","uniform float tFlip;","varying vec3 vViewPosition;","void main() {","vec3 wPos = cameraPosition - vViewPosition;","gl_FragColor = textureCube( tCube, vec3( tFlip * wPos.x, wPos.yz ) );","}"].join("\n")}}}),THREE.Animation=function(root,name,interpolationType){this.root=root,this.data=THREE.AnimationHandler.get(name),this.hierarchy=THREE.AnimationHandler.parse(root),this.currentTime=0,this.timeScale=1,this.isPlaying=!1,this.isPaused=!0,this.loop=!0,this.interpolationType=void 0!==interpolationType?interpolationType:THREE.AnimationHandler.LINEAR,this.points=[],this.target=new THREE.Vector3},THREE.Animation.prototype.play=function(loop,startTimeMS){if(this.isPlaying===!1){this.isPlaying=!0,this.loop=void 0!==loop?loop:!0,this.currentTime=void 0!==startTimeMS?startTimeMS:0;var h,object,hl=this.hierarchy.length;for(h=0;hl>h;h++){object=this.hierarchy[h],this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD&&(object.useQuaternion=!0),object.matrixAutoUpdate=!0,void 0===object.animationCache&&(object.animationCache={},object.animationCache.prevKey={pos:0,rot:0,scl:0},object.animationCache.nextKey={pos:0,rot:0,scl:0},object.animationCache.originalMatrix=object instanceof THREE.Bone?object.skinMatrix:object.matrix);var prevKey=object.animationCache.prevKey,nextKey=object.animationCache.nextKey;prevKey.pos=this.data.hierarchy[h].keys[0],prevKey.rot=this.data.hierarchy[h].keys[0],prevKey.scl=this.data.hierarchy[h].keys[0],nextKey.pos=this.getNextKeyWith("pos",h,1),nextKey.rot=this.getNextKeyWith("rot",h,1),nextKey.scl=this.getNextKeyWith("scl",h,1)}this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.Animation.prototype.pause=function(){this.isPaused===!0?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.Animation.prototype.stop=function(){this.isPlaying=!1,this.isPaused=!1,THREE.AnimationHandler.removeFromUpdate(this)},THREE.Animation.prototype.update=function(deltaTimeMS){if(this.isPlaying!==!1){var type,scale,vector,prevXYZ,nextXYZ,prevKey,nextKey,object,animationCache,frame,types=["pos","rot","scl"];this.data.JIT.hierarchy;var currentTime,unloopedCurrentTime,currentPoint,forwardPoint,angle;this.currentTime+=deltaTimeMS*this.timeScale,unloopedCurrentTime=this.currentTime,currentTime=this.currentTime=this.currentTime%this.data.length,frame=parseInt(Math.min(currentTime*this.data.fps,this.data.length*this.data.fps),10);for(var h=0,hl=this.hierarchy.length;hl>h;h++){object=this.hierarchy[h],animationCache=object.animationCache;for(var t=0;3>t;t++){if(type=types[t],prevKey=animationCache.prevKey[type],nextKey=animationCache.nextKey[type],unloopedCurrentTime>=nextKey.time){if(unloopedCurrentTime>currentTime){if(!this.loop)return this.stop(),void 0;for(prevKey=this.data.hierarchy[h].keys[0],nextKey=this.getNextKeyWith(type,h,1);currentTime>nextKey.time;)prevKey=nextKey,nextKey=this.getNextKeyWith(type,h,nextKey.index+1)}else do prevKey=nextKey,nextKey=this.getNextKeyWith(type,h,nextKey.index+1);while(currentTime>nextKey.time);animationCache.prevKey[type]=prevKey,animationCache.nextKey[type]=nextKey}object.matrixAutoUpdate=!0,object.matrixWorldNeedsUpdate=!0,scale=(currentTime-prevKey.time)/(nextKey.time-prevKey.time),prevXYZ=prevKey[type],nextXYZ=nextKey[type],(0>scale||scale>1)&&(console.log("THREE.Animation.update: Warning! Scale out of bounds:"+scale+" on bone "+h),scale=0>scale?0:1),"pos"===type?(vector=object.position,this.interpolationType===THREE.AnimationHandler.LINEAR?(vector.x=prevXYZ[0]+(nextXYZ[0]-prevXYZ[0])*scale,vector.y=prevXYZ[1]+(nextXYZ[1]-prevXYZ[1])*scale,vector.z=prevXYZ[2]+(nextXYZ[2]-prevXYZ[2])*scale):(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)&&(this.points[0]=this.getPrevKeyWith("pos",h,prevKey.index-1).pos,this.points[1]=prevXYZ,this.points[2]=nextXYZ,this.points[3]=this.getNextKeyWith("pos",h,nextKey.index+1).pos,scale=.33*scale+.33,currentPoint=this.interpolateCatmullRom(this.points,scale),vector.x=currentPoint[0],vector.y=currentPoint[1],vector.z=currentPoint[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(forwardPoint=this.interpolateCatmullRom(this.points,1.01*scale),this.target.set(forwardPoint[0],forwardPoint[1],forwardPoint[2]),this.target.subSelf(vector),this.target.y=0,this.target.normalize(),angle=Math.atan2(this.target.x,this.target.z),object.rotation.set(0,angle,0)))):"rot"===type?THREE.Quaternion.slerp(prevXYZ,nextXYZ,object.quaternion,scale):"scl"===type&&(vector=object.scale,vector.x=prevXYZ[0]+(nextXYZ[0]-prevXYZ[0])*scale,vector.y=prevXYZ[1]+(nextXYZ[1]-prevXYZ[1])*scale,vector.z=prevXYZ[2]+(nextXYZ[2]-prevXYZ[2])*scale)
}}}},THREE.Animation.prototype.interpolateCatmullRom=function(points,scale){var point,intPoint,weight,w2,w3,pa,pb,pc,pd,c=[],v3=[];return point=(points.length-1)*scale,intPoint=Math.floor(point),weight=point-intPoint,c[0]=0===intPoint?intPoint:intPoint-1,c[1]=intPoint,c[2]=intPoint>points.length-2?intPoint:intPoint+1,c[3]=intPoint>points.length-3?intPoint:intPoint+2,pa=points[c[0]],pb=points[c[1]],pc=points[c[2]],pd=points[c[3]],w2=weight*weight,w3=weight*w2,v3[0]=this.interpolate(pa[0],pb[0],pc[0],pd[0],weight,w2,w3),v3[1]=this.interpolate(pa[1],pb[1],pc[1],pd[1],weight,w2,w3),v3[2]=this.interpolate(pa[2],pb[2],pc[2],pd[2],weight,w2,w3),v3},THREE.Animation.prototype.interpolate=function(p0,p1,p2,p3,t,t2,t3){var v0=.5*(p2-p0),v1=.5*(p3-p1);return(2*(p1-p2)+v0+v1)*t3+(-3*(p1-p2)-2*v0-v1)*t2+v0*t+p1},THREE.Animation.prototype.getNextKeyWith=function(type,h,key){var keys=this.data.hierarchy[h].keys;for(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?key=keys.length-1>key?key:keys.length-1:key%=keys.length;keys.length>key;key++)if(void 0!==keys[key][type])return keys[key];return this.data.hierarchy[h].keys[0]},THREE.Animation.prototype.getPrevKeyWith=function(type,h,key){var keys=this.data.hierarchy[h].keys;for(key=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?key>0?key:0:key>=0?key:key+keys.length;key>=0;key--)if(void 0!==keys[key][type])return keys[key];return this.data.hierarchy[h].keys[keys.length-1]},THREE.AnimationHandler=function(){var playing=[],library={},that={};that.update=function(deltaTimeMS){for(var i=0;playing.length>i;i++)playing[i].update(deltaTimeMS)},that.addToUpdate=function(animation){-1===playing.indexOf(animation)&&playing.push(animation)},that.removeFromUpdate=function(animation){var index=playing.indexOf(animation);-1!==index&&playing.splice(index,1)},that.add=function(data){void 0!==library[data.name]&&console.log("THREE.AnimationHandler.add: Warning! "+data.name+" already exists in library. Overwriting."),library[data.name]=data,initData(data)},that.get=function(name){return"string"==typeof name?library[name]?library[name]:(console.log("THREE.AnimationHandler.get: Couldn't find animation "+name),null):void 0},that.parse=function(root){var hierarchy=[];if(root instanceof THREE.SkinnedMesh)for(var b=0;root.bones.length>b;b++)hierarchy.push(root.bones[b]);else parseRecurseHierarchy(root,hierarchy);return hierarchy};var parseRecurseHierarchy=function(root,hierarchy){hierarchy.push(root);for(var c=0;root.children.length>c;c++)parseRecurseHierarchy(root.children[c],hierarchy)},initData=function(data){if(data.initialized!==!0){for(var h=0;data.hierarchy.length>h;h++){for(var k=0;data.hierarchy[h].keys.length>k;k++)if(0>data.hierarchy[h].keys[k].time&&(data.hierarchy[h].keys[k].time=0),void 0!==data.hierarchy[h].keys[k].rot&&!(data.hierarchy[h].keys[k].rot instanceof THREE.Quaternion)){var quat=data.hierarchy[h].keys[k].rot;data.hierarchy[h].keys[k].rot=new THREE.Quaternion(quat[0],quat[1],quat[2],quat[3])}if(data.hierarchy[h].keys.length&&void 0!==data.hierarchy[h].keys[0].morphTargets){for(var usedMorphTargets={},k=0;data.hierarchy[h].keys.length>k;k++)for(var m=0;data.hierarchy[h].keys[k].morphTargets.length>m;m++){var morphTargetName=data.hierarchy[h].keys[k].morphTargets[m];usedMorphTargets[morphTargetName]=-1}data.hierarchy[h].usedMorphTargets=usedMorphTargets;for(var k=0;data.hierarchy[h].keys.length>k;k++){var influences={};for(var morphTargetName in usedMorphTargets){for(var m=0;data.hierarchy[h].keys[k].morphTargets.length>m;m++)if(data.hierarchy[h].keys[k].morphTargets[m]===morphTargetName){influences[morphTargetName]=data.hierarchy[h].keys[k].morphTargetsInfluences[m];break}m===data.hierarchy[h].keys[k].morphTargets.length&&(influences[morphTargetName]=0)}data.hierarchy[h].keys[k].morphTargetsInfluences=influences}}for(var k=1;data.hierarchy[h].keys.length>k;k++)data.hierarchy[h].keys[k].time===data.hierarchy[h].keys[k-1].time&&(data.hierarchy[h].keys.splice(k,1),k--);for(var k=0;data.hierarchy[h].keys.length>k;k++)data.hierarchy[h].keys[k].index=k}var lengthInFrames=parseInt(data.length*data.fps,10);data.JIT={},data.JIT.hierarchy=[];for(var h=0;data.hierarchy.length>h;h++)data.JIT.hierarchy.push(Array(lengthInFrames));data.initialized=!0}};return that.LINEAR=0,that.CATMULLROM=1,that.CATMULLROM_FORWARD=2,that}(),THREE.AnimationMorphTarget=function(root,data){this.root=root,this.data=THREE.AnimationHandler.get(data),this.hierarchy=THREE.AnimationHandler.parse(root),this.currentTime=0,this.timeScale=1,this.isPlaying=!1,this.isPaused=!0,this.loop=!0,this.influence=1},THREE.AnimationMorphTarget.prototype.play=function(loop,startTimeMS){if(!this.isPlaying){this.isPlaying=!0,this.loop=void 0!==loop?loop:!0,this.currentTime=void 0!==startTimeMS?startTimeMS:0;for(var h=0;this.hierarchy.length>h;h++)void 0===this.hierarchy[h].animationCache&&(this.hierarchy[h].animationCache={},this.hierarchy[h].animationCache.prevKey=0,this.hierarchy[h].animationCache.nextKey=0),this.hierarchy[h].animationCache.prevKey=this.data.hierarchy[h].keys[0],this.hierarchy[h].animationCache.nextKey=this.data.hierarchy[h].keys[1];this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.AnimationMorphTarget.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.AnimationMorphTarget.prototype.stop=function(){this.isPlaying=!1,this.isPaused=!1,THREE.AnimationHandler.removeFromUpdate(this);for(var h=0;this.hierarchy.length>h;h++)void 0!==this.hierarchy[h].animationCache&&delete this.hierarchy[h].animationCache},THREE.AnimationMorphTarget.prototype.update=function(deltaTimeMS){if(this.isPlaying){var scale,prevKey,nextKey,object,animationCache,currentTime,unloopedCurrentTime;this.currentTime+=deltaTimeMS*this.timeScale,unloopedCurrentTime=this.currentTime,currentTime=this.currentTime=this.currentTime%this.data.length;for(var h=0,hl=this.hierarchy.length;hl>h;h++){if(object=this.hierarchy[h],animationCache=object.animationCache,prevKey=animationCache.prevKey,nextKey=animationCache.nextKey,unloopedCurrentTime>=nextKey.time){if(unloopedCurrentTime>currentTime){if(!this.loop)return this.stop(),void 0;for(prevKey=this.data.hierarchy[h].keys[0],nextKey=this.data.hierarchy[h].keys[1];currentTime>nextKey.time;)prevKey=nextKey,nextKey=this.data.hierarchy[h].keys[nextKey.index+1]}else do prevKey=nextKey,nextKey=this.data.hierarchy[h].keys[nextKey.index+1];while(currentTime>nextKey.time);animationCache.prevKey=prevKey,animationCache.nextKey=nextKey}scale=(currentTime-prevKey.time)/(nextKey.time-prevKey.time),(0>scale||scale>1)&&(console.log("THREE.AnimationMorphTarget.update: Warning! Scale out of bounds:"+scale),scale=0>scale?0:1);var pi,ni,mt,i,pmti=prevKey.morphTargetsInfluences,nmti=nextKey.morphTargetsInfluences;for(mt in pmti)pi=pmti[mt],ni=nmti[mt],i=this.root.getMorphTargetIndexByName(mt),this.root.morphTargetInfluences[i]=(pi+(ni-pi)*scale)*this.influence}}},THREE.KeyFrameAnimation=function(root,data,JITCompile){this.root=root,this.data=THREE.AnimationHandler.get(data),this.hierarchy=THREE.AnimationHandler.parse(root),this.currentTime=0,this.timeScale=.001,this.isPlaying=!1,this.isPaused=!0,this.loop=!0,this.JITCompile=void 0!==JITCompile?JITCompile:!0;for(var h=0,hl=this.hierarchy.length;hl>h;h++){var keys=this.data.hierarchy[h].keys,sids=this.data.hierarchy[h].sids,obj=this.hierarchy[h];if(keys.length&&sids){for(var s=0;sids.length>s;s++){var sid=sids[s],next=this.getNextKeyWith(sid,h,0);next&&next.apply(sid)}obj.matrixAutoUpdate=!1,this.data.hierarchy[h].node.updateMatrix(),obj.matrixWorldNeedsUpdate=!0}}},THREE.KeyFrameAnimation.prototype.play=function(loop,startTimeMS){if(!this.isPlaying){this.isPlaying=!0,this.loop=void 0!==loop?loop:!0,this.currentTime=void 0!==startTimeMS?startTimeMS:0,this.startTimeMs=startTimeMS,this.startTime=1e7,this.endTime=-this.startTime;var h,object,node,hl=this.hierarchy.length;for(h=0;hl>h;h++){object=this.hierarchy[h],node=this.data.hierarchy[h],object.useQuaternion=!0,void 0===node.animationCache&&(node.animationCache={},node.animationCache.prevKey=null,node.animationCache.nextKey=null,node.animationCache.originalMatrix=object instanceof THREE.Bone?object.skinMatrix:object.matrix);var keys=this.data.hierarchy[h].keys;keys.length&&(node.animationCache.prevKey=keys[0],node.animationCache.nextKey=keys[1],this.startTime=Math.min(keys[0].time,this.startTime),this.endTime=Math.max(keys[keys.length-1].time,this.endTime))}this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.KeyFrameAnimation.prototype.stop=function(){this.isPlaying=!1,this.isPaused=!1,THREE.AnimationHandler.removeFromUpdate(this);for(var h=0;this.data.hierarchy.length>h;h++){var obj=this.hierarchy[h],node=this.data.hierarchy[h];if(void 0!==node.animationCache){var original=node.animationCache.originalMatrix;obj instanceof THREE.Bone?(original.copy(obj.skinMatrix),obj.skinMatrix=original):(original.copy(obj.matrix),obj.matrix=original),delete node.animationCache}}},THREE.KeyFrameAnimation.prototype.update=function(deltaTimeMS){if(this.isPlaying){var prevKey,nextKey,object,node,frame,currentTime,unloopedCurrentTime,looped,JIThierarchy=this.data.JIT.hierarchy;if(this.currentTime+=deltaTimeMS*this.timeScale,unloopedCurrentTime=this.currentTime,currentTime=this.currentTime=this.currentTime%this.data.length,this.startTimeMs>currentTime&&(currentTime=this.currentTime=this.startTimeMs+currentTime),frame=parseInt(Math.min(currentTime*this.data.fps,this.data.length*this.data.fps),10),looped=unloopedCurrentTime>currentTime,looped&&!this.loop){for(var h=0,hl=this.hierarchy.length;hl>h;h++){var keys=this.data.hierarchy[h].keys,sids=this.data.hierarchy[h].sids,end=keys.length-1,obj=this.hierarchy[h];if(keys.length){for(var s=0;sids.length>s;s++){var sid=sids[s],prev=this.getPrevKeyWith(sid,h,end);prev&&prev.apply(sid)}this.data.hierarchy[h].node.updateMatrix(),obj.matrixWorldNeedsUpdate=!0}}return this.stop(),void 0}if(!(this.startTime>currentTime)){for(var h=0,hl=this.hierarchy.length;hl>h;h++){object=this.hierarchy[h],node=this.data.hierarchy[h];var keys=node.keys,animationCache=node.animationCache;if(this.JITCompile&&void 0!==JIThierarchy[h][frame])object instanceof THREE.Bone?(object.skinMatrix=JIThierarchy[h][frame],object.matrixWorldNeedsUpdate=!1):(object.matrix=JIThierarchy[h][frame],object.matrixWorldNeedsUpdate=!0);else if(keys.length){if(this.JITCompile&&animationCache&&(object instanceof THREE.Bone?object.skinMatrix=animationCache.originalMatrix:object.matrix=animationCache.originalMatrix),prevKey=animationCache.prevKey,nextKey=animationCache.nextKey,prevKey&&nextKey){if(unloopedCurrentTime>=nextKey.time){if(looped&&this.loop)for(prevKey=keys[0],nextKey=keys[1];currentTime>nextKey.time;)prevKey=nextKey,nextKey=keys[prevKey.index+1];else if(!looped)for(var lastIndex=keys.length-1;currentTime>nextKey.time&&nextKey.index!==lastIndex;)prevKey=nextKey,nextKey=keys[prevKey.index+1];animationCache.prevKey=prevKey,animationCache.nextKey=nextKey}nextKey.time>=currentTime?prevKey.interpolate(nextKey,currentTime):prevKey.interpolate(nextKey,nextKey.time)}this.data.hierarchy[h].node.updateMatrix(),object.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===JIThierarchy[0][frame]){this.hierarchy[0].updateMatrixWorld(!0);for(var h=0;this.hierarchy.length>h;h++)JIThierarchy[h][frame]=this.hierarchy[h]instanceof THREE.Bone?this.hierarchy[h].skinMatrix.clone():this.hierarchy[h].matrix.clone()}}}},THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(sid,h,key){var keys=this.data.hierarchy[h].keys;for(key%=keys.length;keys.length>key;key++)if(keys[key].hasTarget(sid))return keys[key];return keys[0]},THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(sid,h,key){var keys=this.data.hierarchy[h].keys;for(key=key>=0?key:key+keys.length;key>=0;key--)if(keys[key].hasTarget(sid))return keys[key];return keys[keys.length-1]},THREE.FirstPersonControls=function(object,domElement){function bind(scope,fn){return function(){fn.apply(scope,arguments)}}this.object=object,this.target=new THREE.Vector3(0,0,0),this.domElement=void 0!==domElement?domElement:document,this.movementSpeed=1,this.lookSpeed=.005,this.lookVertical=!0,this.autoForward=!1,this.activeLook=!0,this.heightSpeed=!1,this.heightCoef=1,this.heightMin=0,this.heightMax=1,this.constrainVertical=!1,this.verticalMin=0,this.verticalMax=Math.PI,this.autoSpeedFactor=0,this.mouseX=0,this.mouseY=0,this.lat=0,this.lon=0,this.phi=0,this.theta=0,this.moveForward=!1,this.moveBackward=!1,this.moveLeft=!1,this.moveRight=!1,this.freeze=!1,this.mouseDragOn=!1,this.viewHalfX=0,this.viewHalfY=0,this.domElement!==document&&this.domElement.setAttribute("tabindex",-1),this.handleResize=function(){this.domElement===document?(this.viewHalfX=window.innerWidth/2,this.viewHalfY=window.innerHeight/2):(this.viewHalfX=this.domElement.offsetWidth/2,this.viewHalfY=this.domElement.offsetHeight/2)},this.onMouseDown=function(event){if(this.domElement!==document&&this.domElement.focus(),event.preventDefault(),event.stopPropagation(),this.activeLook)switch(event.button){case 0:this.moveForward=!0;break;case 2:this.moveBackward=!0}this.mouseDragOn=!0},this.onMouseUp=function(event){if(event.preventDefault(),event.stopPropagation(),this.activeLook)switch(event.button){case 0:this.moveForward=!1;break;case 2:this.moveBackward=!1}this.mouseDragOn=!1},this.onMouseMove=function(event){this.domElement===document?(this.mouseX=event.pageX-this.viewHalfX,this.mouseY=event.pageY-this.viewHalfY):(this.mouseX=event.pageX-this.domElement.offsetLeft-this.viewHalfX,this.mouseY=event.pageY-this.domElement.offsetTop-this.viewHalfY)},this.onKeyDown=function(event){switch(event.keyCode){case 38:case 87:this.moveForward=!0;break;case 37:case 65:this.moveLeft=!0;break;case 40:case 83:this.moveBackward=!0;break;case 39:case 68:this.moveRight=!0;break;case 82:this.moveUp=!0;break;case 70:this.moveDown=!0;break;case 81:this.freeze=!this.freeze}},this.onKeyUp=function(event){switch(event.keyCode){case 38:case 87:this.moveForward=!1;break;case 37:case 65:this.moveLeft=!1;break;case 40:case 83:this.moveBackward=!1;break;case 39:case 68:this.moveRight=!1;break;case 82:this.moveUp=!1;break;case 70:this.moveDown=!1}},this.update=function(delta){var actualMoveSpeed=0;if(!this.freeze){if(this.heightSpeed){var y=THREE.Math.clamp(this.object.position.y,this.heightMin,this.heightMax),heightDelta=y-this.heightMin;this.autoSpeedFactor=delta*heightDelta*this.heightCoef}else this.autoSpeedFactor=0;actualMoveSpeed=delta*this.movementSpeed,(this.moveForward||this.autoForward&&!this.moveBackward)&&this.object.translateZ(-(actualMoveSpeed+this.autoSpeedFactor)),this.moveBackward&&this.object.translateZ(actualMoveSpeed),this.moveLeft&&this.object.translateX(-actualMoveSpeed),this.moveRight&&this.object.translateX(actualMoveSpeed),this.moveUp&&this.object.translateY(actualMoveSpeed),this.moveDown&&this.object.translateY(-actualMoveSpeed);var actualLookSpeed=delta*this.lookSpeed;this.activeLook||(actualLookSpeed=0),this.lon+=this.mouseX*actualLookSpeed,this.lookVertical&&(this.lat-=this.mouseY*actualLookSpeed),this.lat=Math.max(-85,Math.min(85,this.lat)),this.phi=(90-this.lat)*Math.PI/180,this.theta=this.lon*Math.PI/180;var targetPosition=this.target,position=this.object.position;targetPosition.x=position.x+100*Math.sin(this.phi)*Math.cos(this.theta),targetPosition.y=position.y+100*Math.cos(this.phi),targetPosition.z=position.z+100*Math.sin(this.phi)*Math.sin(this.theta);var verticalLookRatio=1;this.constrainVertical&&(verticalLookRatio=Math.PI/(this.verticalMax-this.verticalMin)),this.lon+=this.mouseX*actualLookSpeed,this.lookVertical&&(this.lat-=this.mouseY*actualLookSpeed*verticalLookRatio),this.lat=Math.max(-85,Math.min(85,this.lat)),this.phi=(90-this.lat)*Math.PI/180,this.theta=this.lon*Math.PI/180,this.constrainVertical&&(this.phi=THREE.Math.mapLinear(this.phi,0,Math.PI,this.verticalMin,this.verticalMax));var targetPosition=this.target,position=this.object.position;targetPosition.x=position.x+100*Math.sin(this.phi)*Math.cos(this.theta),targetPosition.y=position.y+100*Math.cos(this.phi),targetPosition.z=position.z+100*Math.sin(this.phi)*Math.sin(this.theta),this.object.lookAt(targetPosition)}},this.domElement.addEventListener("contextmenu",function(event){event.preventDefault()},!1),this.domElement.addEventListener("mousemove",bind(this,this.onMouseMove),!1),this.domElement.addEventListener("mousedown",bind(this,this.onMouseDown),!1),this.domElement.addEventListener("mouseup",bind(this,this.onMouseUp),!1),this.domElement.addEventListener("keydown",bind(this,this.onKeyDown),!1),this.domElement.addEventListener("keyup",bind(this,this.onKeyUp),!1),this.handleResize()},THREE.PlaneGeometry=function(width,height,segmentsWidth,segmentsheight){THREE.Geometry.call(this);var ix,iz,width_half=width/2,height_half=height/2,gridX=segmentsWidth||1,gridZ=segmentsheight||1,gridX1=gridX+1,gridZ1=gridZ+1,segment_width=width/gridX,segment_height=height/gridZ,normal=new THREE.Vector3(0,0,1);for(iz=0;gridZ1>iz;iz++)for(ix=0;gridX1>ix;ix++){var x=ix*segment_width-width_half,y=iz*segment_height-height_half;this.vertices.push(new THREE.Vector3(x,-y,0))}for(iz=0;gridZ>iz;iz++)for(ix=0;gridX>ix;ix++){var a=ix+gridX1*iz,b=ix+gridX1*(iz+1),c=ix+1+gridX1*(iz+1),d=ix+1+gridX1*iz,face=new THREE.Face4(a,b,c,d);face.normal.copy(normal),face.vertexNormals.push(normal.clone(),normal.clone(),normal.clone(),normal.clone()),this.faces.push(face),this.faceVertexUvs[0].push([new THREE.UV(ix/gridX,1-iz/gridZ),new THREE.UV(ix/gridX,1-(iz+1)/gridZ),new THREE.UV((ix+1)/gridX,1-(iz+1)/gridZ),new THREE.UV((ix+1)/gridX,1-iz/gridZ)])}this.computeCentroids()},THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.SphereGeometry=function(radius,segmentsWidth,segmentsHeight,phiStart,phiLength,thetaStart,thetaLength){THREE.Geometry.call(this),radius=radius||50,phiStart=void 0!==phiStart?phiStart:0,phiLength=void 0!==phiLength?phiLength:2*Math.PI,thetaStart=void 0!==thetaStart?thetaStart:0,thetaLength=void 0!==thetaLength?thetaLength:Math.PI;var x,y,segmentsX=Math.max(3,Math.floor(segmentsWidth)||8),segmentsY=Math.max(2,Math.floor(segmentsHeight)||6),vertices=[],uvs=[];for(y=0;segmentsY>=y;y++){var verticesRow=[],uvsRow=[];for(x=0;segmentsX>=x;x++){var u=x/segmentsX,v=y/segmentsY,vertex=new THREE.Vector3;vertex.x=-radius*Math.cos(phiStart+u*phiLength)*Math.sin(thetaStart+v*thetaLength),vertex.y=radius*Math.cos(thetaStart+v*thetaLength),vertex.z=radius*Math.sin(phiStart+u*phiLength)*Math.sin(thetaStart+v*thetaLength),this.vertices.push(vertex),verticesRow.push(this.vertices.length-1),uvsRow.push(new THREE.UV(u,1-v))}vertices.push(verticesRow),uvs.push(uvsRow)}for(y=0;segmentsY>y;y++)for(x=0;segmentsX>x;x++){var v1=vertices[y][x+1],v2=vertices[y][x],v3=vertices[y+1][x],v4=vertices[y+1][x+1],n1=this.vertices[v1].clone().normalize(),n2=this.vertices[v2].clone().normalize(),n3=this.vertices[v3].clone().normalize(),n4=this.vertices[v4].clone().normalize(),uv1=uvs[y][x+1].clone(),uv2=uvs[y][x].clone(),uv3=uvs[y+1][x].clone(),uv4=uvs[y+1][x+1].clone();Math.abs(this.vertices[v1].y)==radius?(this.faces.push(new THREE.Face3(v1,v3,v4,[n1,n3,n4])),this.faceVertexUvs[0].push([uv1,uv3,uv4])):Math.abs(this.vertices[v3].y)==radius?(this.faces.push(new THREE.Face3(v1,v2,v3,[n1,n2,n3])),this.faceVertexUvs[0].push([uv1,uv2,uv3])):(this.faces.push(new THREE.Face4(v1,v2,v3,v4,[n1,n2,n3,n4])),this.faceVertexUvs[0].push([uv1,uv2,uv3,uv4]))}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere={radius:radius}},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this),this.render=function(){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare=function(texture,size,distance,blending,color){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,this.customUpdateCallback=void 0,void 0!==texture&&this.add(texture,size,distance,blending,color)},THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare.prototype.add=function(texture,size,distance,blending,color,opacity){void 0===size&&(size=-1),void 0===distance&&(distance=0),void 0===opacity&&(opacity=1),void 0===color&&(color=new THREE.Color(16777215)),void 0===blending&&(blending=THREE.NormalBlending),distance=Math.min(distance,Math.max(0,distance)),this.lensFlares.push({texture:texture,size:size,distance:distance,x:0,y:0,z:0,scale:1,rotation:1,opacity:opacity,color:color,blending:blending})},THREE.LensFlare.prototype.updateLensFlares=function(){var f,flare,fl=this.lensFlares.length,vecX=2*-this.positionScreen.x,vecY=2*-this.positionScreen.y;for(f=0;fl>f;f++)flare=this.lensFlares[f],flare.x=this.positionScreen.x+vecX*flare.distance,flare.y=this.positionScreen.y+vecY*flare.distance,flare.wantedRotation=.25*flare.x*Math.PI,flare.rotation+=.25*(flare.wantedRotation-flare.rotation)},THREE.DepthPassPlugin=function(){this.enabled=!1,this.renderTarget=null;var _gl,_renderer,_depthMaterial,_depthMaterialMorph,_frustum=new THREE.Frustum,_projScreenMatrix=new THREE.Matrix4;this.init=function(renderer){_gl=renderer.context,_renderer=renderer;var depthShader=THREE.ShaderLib.depthRGBA,depthUniforms=THREE.UniformsUtils.clone(depthShader.uniforms);_depthMaterial=new THREE.ShaderMaterial({fragmentShader:depthShader.fragmentShader,vertexShader:depthShader.vertexShader,uniforms:depthUniforms}),_depthMaterialMorph=new THREE.ShaderMaterial({fragmentShader:depthShader.fragmentShader,vertexShader:depthShader.vertexShader,uniforms:depthUniforms,morphTargets:!0}),_depthMaterial._shadowPass=!0,_depthMaterialMorph._shadowPass=!0},this.render=function(scene,camera){this.enabled&&this.update(scene,camera)},this.update=function(scene,camera){var j,jl,buffer,material,webglObject,object,renderList,fog=null;for(_gl.clearColor(1,1,1,1),_gl.disable(_gl.BLEND),_renderer.setDepthTest(!0),_renderer.autoUpdateScene&&scene.updateMatrixWorld(),camera._viewMatrixArray||(camera._viewMatrixArray=new Float32Array(16)),camera._projectionMatrixArray||(camera._projectionMatrixArray=new Float32Array(16)),camera.matrixWorldInverse.getInverse(camera.matrixWorld),camera.matrixWorldInverse.flattenToArray(camera._viewMatrixArray),camera.projectionMatrix.flattenToArray(camera._projectionMatrixArray),_projScreenMatrix.multiply(camera.projectionMatrix,camera.matrixWorldInverse),_frustum.setFromMatrix(_projScreenMatrix),_renderer.setRenderTarget(this.renderTarget),_renderer.clear(),renderList=scene.__webglObjects,j=0,jl=renderList.length;jl>j;j++)webglObject=renderList[j],object=webglObject.object,webglObject.render=!1,object.visible&&(object instanceof THREE.Mesh&&object.frustumCulled&&!_frustum.contains(object)||(object._modelViewMatrix.multiply(camera.matrixWorldInverse,object.matrixWorld),webglObject.render=!0));for(j=0,jl=renderList.length;jl>j;j++)webglObject=renderList[j],webglObject.render&&(object=webglObject.object,buffer=webglObject.buffer,object.material&&_renderer.setMaterialFaces(object.material),material=object.customDepthMaterial?object.customDepthMaterial:object.geometry.morphTargets.length?_depthMaterialMorph:_depthMaterial,buffer instanceof THREE.BufferGeometry?_renderer.renderBufferDirect(camera,scene.__lights,fog,material,buffer,object):_renderer.renderBuffer(camera,scene.__lights,fog,material,buffer,object));for(renderList=scene.__webglObjectsImmediate,j=0,jl=renderList.length;jl>j;j++)webglObject=renderList[j],object=webglObject.object,object.visible&&object.castShadow&&(object._modelViewMatrix.multiply(camera.matrixWorldInverse,object.matrixWorld),_renderer.renderImmediateObject(camera,scene.__lights,fog,_depthMaterial,object));var clearColor=_renderer.getClearColor(),clearAlpha=_renderer.getClearAlpha();_gl.clearColor(clearColor.r,clearColor.g,clearColor.b,clearAlpha),_gl.enable(_gl.BLEND)}},THREE.ShadowMapPlugin=function(){function createVirtualLight(light,cascade){var virtualLight=new THREE.DirectionalLight;virtualLight.isVirtual=!0,virtualLight.onlyShadow=!0,virtualLight.castShadow=!0,virtualLight.shadowCameraNear=light.shadowCameraNear,virtualLight.shadowCameraFar=light.shadowCameraFar,virtualLight.shadowCameraLeft=light.shadowCameraLeft,virtualLight.shadowCameraRight=light.shadowCameraRight,virtualLight.shadowCameraBottom=light.shadowCameraBottom,virtualLight.shadowCameraTop=light.shadowCameraTop,virtualLight.shadowCameraVisible=light.shadowCameraVisible,virtualLight.shadowDarkness=light.shadowDarkness,virtualLight.shadowBias=light.shadowCascadeBias[cascade],virtualLight.shadowMapWidth=light.shadowCascadeWidth[cascade],virtualLight.shadowMapHeight=light.shadowCascadeHeight[cascade],virtualLight.pointsWorld=[],virtualLight.pointsFrustum=[];for(var pointsWorld=virtualLight.pointsWorld,pointsFrustum=virtualLight.pointsFrustum,i=0;8>i;i++)pointsWorld[i]=new THREE.Vector3,pointsFrustum[i]=new THREE.Vector3;var nearZ=light.shadowCascadeNearZ[cascade],farZ=light.shadowCascadeFarZ[cascade];return pointsFrustum[0].set(-1,-1,nearZ),pointsFrustum[1].set(1,-1,nearZ),pointsFrustum[2].set(-1,1,nearZ),pointsFrustum[3].set(1,1,nearZ),pointsFrustum[4].set(-1,-1,farZ),pointsFrustum[5].set(1,-1,farZ),pointsFrustum[6].set(-1,1,farZ),pointsFrustum[7].set(1,1,farZ),virtualLight}function updateVirtualLight(light,cascade){var virtualLight=light.shadowCascadeArray[cascade];virtualLight.position.copy(light.position),virtualLight.target.position.copy(light.target.position),virtualLight.lookAt(virtualLight.target),virtualLight.shadowCameraVisible=light.shadowCameraVisible,virtualLight.shadowDarkness=light.shadowDarkness,virtualLight.shadowBias=light.shadowCascadeBias[cascade];var nearZ=light.shadowCascadeNearZ[cascade],farZ=light.shadowCascadeFarZ[cascade],pointsFrustum=virtualLight.pointsFrustum;pointsFrustum[0].z=nearZ,pointsFrustum[1].z=nearZ,pointsFrustum[2].z=nearZ,pointsFrustum[3].z=nearZ,pointsFrustum[4].z=farZ,pointsFrustum[5].z=farZ,pointsFrustum[6].z=farZ,pointsFrustum[7].z=farZ}function updateShadowCamera(camera,light){var shadowCamera=light.shadowCamera,pointsFrustum=light.pointsFrustum,pointsWorld=light.pointsWorld;_min.set(1/0,1/0,1/0),_max.set(-1/0,-1/0,-1/0);for(var i=0;8>i;i++){var p=pointsWorld[i];p.copy(pointsFrustum[i]),THREE.ShadowMapPlugin.__projector.unprojectVector(p,camera),shadowCamera.matrixWorldInverse.multiplyVector3(p),p.x<_min.x&&(_min.x=p.x),p.x>_max.x&&(_max.x=p.x),p.y<_min.y&&(_min.y=p.y),p.y>_max.y&&(_max.y=p.y),p.z<_min.z&&(_min.z=p.z),p.z>_max.z&&(_max.z=p.z)}shadowCamera.left=_min.x,shadowCamera.right=_max.x,shadowCamera.top=_max.y,shadowCamera.bottom=_min.y,shadowCamera.updateProjectionMatrix()}var _gl,_renderer,_depthMaterial,_depthMaterialMorph,_depthMaterialSkin,_depthMaterialMorphSkin,_frustum=new THREE.Frustum,_projScreenMatrix=new THREE.Matrix4,_min=new THREE.Vector3,_max=new THREE.Vector3;this.init=function(renderer){_gl=renderer.context,_renderer=renderer;var depthShader=THREE.ShaderLib.depthRGBA,depthUniforms=THREE.UniformsUtils.clone(depthShader.uniforms);_depthMaterial=new THREE.ShaderMaterial({fragmentShader:depthShader.fragmentShader,vertexShader:depthShader.vertexShader,uniforms:depthUniforms}),_depthMaterialMorph=new THREE.ShaderMaterial({fragmentShader:depthShader.fragmentShader,vertexShader:depthShader.vertexShader,uniforms:depthUniforms,morphTargets:!0}),_depthMaterialSkin=new THREE.ShaderMaterial({fragmentShader:depthShader.fragmentShader,vertexShader:depthShader.vertexShader,uniforms:depthUniforms,skinning:!0}),_depthMaterialMorphSkin=new THREE.ShaderMaterial({fragmentShader:depthShader.fragmentShader,vertexShader:depthShader.vertexShader,uniforms:depthUniforms,morphTargets:!0,skinning:!0}),_depthMaterial._shadowPass=!0,_depthMaterialMorph._shadowPass=!0,_depthMaterialSkin._shadowPass=!0,_depthMaterialMorphSkin._shadowPass=!0},this.render=function(scene,camera){_renderer.shadowMapEnabled&&_renderer.shadowMapAutoUpdate&&this.update(scene,camera)},this.update=function(scene,camera){var i,il,j,jl,n,shadowMap,shadowMatrix,shadowCamera,buffer,material,webglObject,object,light,renderList,lights=[],k=0,fog=null;for(_gl.clearColor(1,1,1,1),_gl.disable(_gl.BLEND),_gl.enable(_gl.CULL_FACE),_gl.frontFace(_gl.CCW),_renderer.shadowMapCullFrontFaces?_gl.cullFace(_gl.FRONT):_gl.cullFace(_gl.BACK),_renderer.setDepthTest(!0),i=0,il=scene.__lights.length;il>i;i++)if(light=scene.__lights[i],light.castShadow)if(light instanceof THREE.DirectionalLight&&light.shadowCascade)for(n=0;light.shadowCascadeCount>n;n++){var virtualLight;if(light.shadowCascadeArray[n])virtualLight=light.shadowCascadeArray[n];else{virtualLight=createVirtualLight(light,n),virtualLight.originalCamera=camera;var gyro=new THREE.Gyroscope;gyro.position=light.shadowCascadeOffset,gyro.add(virtualLight),gyro.add(virtualLight.target),camera.add(gyro),light.shadowCascadeArray[n]=virtualLight,console.log("Created virtualLight",virtualLight)}updateVirtualLight(light,n),lights[k]=virtualLight,k++}else lights[k]=light,k++;for(i=0,il=lights.length;il>i;i++){if(light=lights[i],!light.shadowMap){var pars={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat};light.shadowMap=new THREE.WebGLRenderTarget(light.shadowMapWidth,light.shadowMapHeight,pars),light.shadowMapSize=new THREE.Vector2(light.shadowMapWidth,light.shadowMapHeight),light.shadowMatrix=new THREE.Matrix4}if(!light.shadowCamera){if(light instanceof THREE.SpotLight)light.shadowCamera=new THREE.PerspectiveCamera(light.shadowCameraFov,light.shadowMapWidth/light.shadowMapHeight,light.shadowCameraNear,light.shadowCameraFar);else{if(!(light instanceof THREE.DirectionalLight)){console.error("Unsupported light type for shadow");continue}light.shadowCamera=new THREE.OrthographicCamera(light.shadowCameraLeft,light.shadowCameraRight,light.shadowCameraTop,light.shadowCameraBottom,light.shadowCameraNear,light.shadowCameraFar)}scene.add(light.shadowCamera),_renderer.autoUpdateScene&&scene.updateMatrixWorld()}for(light.shadowCameraVisible&&!light.cameraHelper&&(light.cameraHelper=new THREE.CameraHelper(light.shadowCamera),light.shadowCamera.add(light.cameraHelper)),light.isVirtual&&virtualLight.originalCamera==camera&&updateShadowCamera(camera,light),shadowMap=light.shadowMap,shadowMatrix=light.shadowMatrix,shadowCamera=light.shadowCamera,shadowCamera.position.copy(light.matrixWorld.getPosition()),shadowCamera.lookAt(light.target.matrixWorld.getPosition()),shadowCamera.updateMatrixWorld(),shadowCamera.matrixWorldInverse.getInverse(shadowCamera.matrixWorld),light.cameraHelper&&(light.cameraHelper.visible=light.shadowCameraVisible),light.shadowCameraVisible&&light.cameraHelper.update(),shadowMatrix.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),shadowMatrix.multiplySelf(shadowCamera.projectionMatrix),shadowMatrix.multiplySelf(shadowCamera.matrixWorldInverse),shadowCamera._viewMatrixArray||(shadowCamera._viewMatrixArray=new Float32Array(16)),shadowCamera._projectionMatrixArray||(shadowCamera._projectionMatrixArray=new Float32Array(16)),shadowCamera.matrixWorldInverse.flattenToArray(shadowCamera._viewMatrixArray),shadowCamera.projectionMatrix.flattenToArray(shadowCamera._projectionMatrixArray),_projScreenMatrix.multiply(shadowCamera.projectionMatrix,shadowCamera.matrixWorldInverse),_frustum.setFromMatrix(_projScreenMatrix),_renderer.setRenderTarget(shadowMap),_renderer.clear(),renderList=scene.__webglObjects,j=0,jl=renderList.length;jl>j;j++)webglObject=renderList[j],object=webglObject.object,webglObject.render=!1,object.visible&&object.castShadow&&(object instanceof THREE.Mesh&&object.frustumCulled&&!_frustum.contains(object)||(object._modelViewMatrix.multiply(shadowCamera.matrixWorldInverse,object.matrixWorld),webglObject.render=!0));
for(j=0,jl=renderList.length;jl>j;j++)webglObject=renderList[j],webglObject.render&&(object=webglObject.object,buffer=webglObject.buffer,material=object.customDepthMaterial?object.customDepthMaterial:object instanceof THREE.SkinnedMesh?object.geometry.morphTargets.length?_depthMaterialMorphSkin:_depthMaterialSkin:object.geometry.morphTargets.length?_depthMaterialMorph:_depthMaterial,buffer instanceof THREE.BufferGeometry?_renderer.renderBufferDirect(shadowCamera,scene.__lights,fog,material,buffer,object):_renderer.renderBuffer(shadowCamera,scene.__lights,fog,material,buffer,object));for(renderList=scene.__webglObjectsImmediate,j=0,jl=renderList.length;jl>j;j++)webglObject=renderList[j],object=webglObject.object,object.visible&&object.castShadow&&(object._modelViewMatrix.multiply(shadowCamera.matrixWorldInverse,object.matrixWorld),_renderer.renderImmediateObject(shadowCamera,scene.__lights,fog,_depthMaterial,object))}var clearColor=_renderer.getClearColor(),clearAlpha=_renderer.getClearAlpha();_gl.clearColor(clearColor.r,clearColor.g,clearColor.b,clearAlpha),_gl.enable(_gl.BLEND),_renderer.shadowMapCullFrontFaces&&_gl.cullFace(_gl.BACK)}},THREE.ShadowMapPlugin.__projector=new THREE.Projector,THREE.SpritePlugin=function(){function createProgram(shader){var program=_gl.createProgram(),fragmentShader=_gl.createShader(_gl.FRAGMENT_SHADER),vertexShader=_gl.createShader(_gl.VERTEX_SHADER);return _gl.shaderSource(fragmentShader,shader.fragmentShader),_gl.shaderSource(vertexShader,shader.vertexShader),_gl.compileShader(fragmentShader),_gl.compileShader(vertexShader),_gl.attachShader(program,fragmentShader),_gl.attachShader(program,vertexShader),_gl.linkProgram(program),program}function painterSort(a,b){return b.z-a.z}var _gl,_renderer,_sprite={};this.init=function(renderer){_gl=renderer.context,_renderer=renderer,_sprite.vertices=new Float32Array(16),_sprite.faces=new Uint16Array(6);var i=0;_sprite.vertices[i++]=-1,_sprite.vertices[i++]=-1,_sprite.vertices[i++]=0,_sprite.vertices[i++]=0,_sprite.vertices[i++]=1,_sprite.vertices[i++]=-1,_sprite.vertices[i++]=1,_sprite.vertices[i++]=0,_sprite.vertices[i++]=1,_sprite.vertices[i++]=1,_sprite.vertices[i++]=1,_sprite.vertices[i++]=1,_sprite.vertices[i++]=-1,_sprite.vertices[i++]=1,_sprite.vertices[i++]=0,_sprite.vertices[i++]=1,i=0,_sprite.faces[i++]=0,_sprite.faces[i++]=1,_sprite.faces[i++]=2,_sprite.faces[i++]=0,_sprite.faces[i++]=2,_sprite.faces[i++]=3,_sprite.vertexBuffer=_gl.createBuffer(),_sprite.elementBuffer=_gl.createBuffer(),_gl.bindBuffer(_gl.ARRAY_BUFFER,_sprite.vertexBuffer),_gl.bufferData(_gl.ARRAY_BUFFER,_sprite.vertices,_gl.STATIC_DRAW),_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,_sprite.elementBuffer),_gl.bufferData(_gl.ELEMENT_ARRAY_BUFFER,_sprite.faces,_gl.STATIC_DRAW),_sprite.program=createProgram(THREE.ShaderSprite.sprite),_sprite.attributes={},_sprite.uniforms={},_sprite.attributes.position=_gl.getAttribLocation(_sprite.program,"position"),_sprite.attributes.uv=_gl.getAttribLocation(_sprite.program,"uv"),_sprite.uniforms.uvOffset=_gl.getUniformLocation(_sprite.program,"uvOffset"),_sprite.uniforms.uvScale=_gl.getUniformLocation(_sprite.program,"uvScale"),_sprite.uniforms.rotation=_gl.getUniformLocation(_sprite.program,"rotation"),_sprite.uniforms.scale=_gl.getUniformLocation(_sprite.program,"scale"),_sprite.uniforms.alignment=_gl.getUniformLocation(_sprite.program,"alignment"),_sprite.uniforms.color=_gl.getUniformLocation(_sprite.program,"color"),_sprite.uniforms.map=_gl.getUniformLocation(_sprite.program,"map"),_sprite.uniforms.opacity=_gl.getUniformLocation(_sprite.program,"opacity"),_sprite.uniforms.useScreenCoordinates=_gl.getUniformLocation(_sprite.program,"useScreenCoordinates"),_sprite.uniforms.affectedByDistance=_gl.getUniformLocation(_sprite.program,"affectedByDistance"),_sprite.uniforms.screenPosition=_gl.getUniformLocation(_sprite.program,"screenPosition"),_sprite.uniforms.modelViewMatrix=_gl.getUniformLocation(_sprite.program,"modelViewMatrix"),_sprite.uniforms.projectionMatrix=_gl.getUniformLocation(_sprite.program,"projectionMatrix"),_sprite.attributesEnabled=!1},this.render=function(scene,camera,viewportWidth,viewportHeight){var sprites=scene.__webglSprites,nSprites=sprites.length;if(nSprites){var attributes=_sprite.attributes,uniforms=_sprite.uniforms,invAspect=viewportHeight/viewportWidth,halfViewportWidth=.5*viewportWidth,halfViewportHeight=.5*viewportHeight,mergeWith3D=!0;_gl.useProgram(_sprite.program),_sprite.attributesEnabled||(_gl.enableVertexAttribArray(attributes.position),_gl.enableVertexAttribArray(attributes.uv),_sprite.attributesEnabled=!0),_gl.disable(_gl.CULL_FACE),_gl.enable(_gl.BLEND),_gl.depthMask(!0),_gl.bindBuffer(_gl.ARRAY_BUFFER,_sprite.vertexBuffer),_gl.vertexAttribPointer(attributes.position,2,_gl.FLOAT,!1,16,0),_gl.vertexAttribPointer(attributes.uv,2,_gl.FLOAT,!1,16,8),_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,_sprite.elementBuffer),_gl.uniformMatrix4fv(uniforms.projectionMatrix,!1,camera._projectionMatrixArray),_gl.activeTexture(_gl.TEXTURE0),_gl.uniform1i(uniforms.map,0);var i,sprite,size,scale=[];for(i=0;nSprites>i;i++)sprite=sprites[i],sprite.visible&&0!==sprite.opacity&&(sprite.useScreenCoordinates?sprite.z=-sprite.position.z:(sprite._modelViewMatrix.multiply(camera.matrixWorldInverse,sprite.matrixWorld),sprite.z=-sprite._modelViewMatrix.elements[14]));for(sprites.sort(painterSort),i=0;nSprites>i;i++)sprite=sprites[i],sprite.visible&&0!==sprite.opacity&&sprite.map&&sprite.map.image&&sprite.map.image.width&&(sprite.useScreenCoordinates?(_gl.uniform1i(uniforms.useScreenCoordinates,1),_gl.uniform3f(uniforms.screenPosition,(sprite.position.x-halfViewportWidth)/halfViewportWidth,(halfViewportHeight-sprite.position.y)/halfViewportHeight,Math.max(0,Math.min(1,sprite.position.z)))):(_gl.uniform1i(uniforms.useScreenCoordinates,0),_gl.uniform1i(uniforms.affectedByDistance,sprite.affectedByDistance?1:0),_gl.uniformMatrix4fv(uniforms.modelViewMatrix,!1,sprite._modelViewMatrix.elements)),size=sprite.map.image.width/(sprite.scaleByViewport?viewportHeight:1),scale[0]=size*invAspect*sprite.scale.x,scale[1]=size*sprite.scale.y,_gl.uniform2f(uniforms.uvScale,sprite.uvScale.x,sprite.uvScale.y),_gl.uniform2f(uniforms.uvOffset,sprite.uvOffset.x,sprite.uvOffset.y),_gl.uniform2f(uniforms.alignment,sprite.alignment.x,sprite.alignment.y),_gl.uniform1f(uniforms.opacity,sprite.opacity),_gl.uniform3f(uniforms.color,sprite.color.r,sprite.color.g,sprite.color.b),_gl.uniform1f(uniforms.rotation,sprite.rotation),_gl.uniform2fv(uniforms.scale,scale),sprite.mergeWith3D&&!mergeWith3D?(_gl.enable(_gl.DEPTH_TEST),mergeWith3D=!0):!sprite.mergeWith3D&&mergeWith3D&&(_gl.disable(_gl.DEPTH_TEST),mergeWith3D=!1),_renderer.setBlending(sprite.blending,sprite.blendEquation,sprite.blendSrc,sprite.blendDst),_renderer.setTexture(sprite.map,0),_gl.drawElements(_gl.TRIANGLES,6,_gl.UNSIGNED_SHORT,0));_gl.enable(_gl.CULL_FACE),_gl.enable(_gl.DEPTH_TEST),_gl.depthMask(!0)}}},THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:["uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform int renderType;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +","texture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +","texture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +","texture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +","texture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +","texture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +","texture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +","texture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +","texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility = (       visibility.r / 9.0 ) *","( 1.0 - visibility.g / 9.0 ) *","(       visibility.b / 9.0 ) *","( 1.0 - visibility.a / 9.0 );","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision mediump float;","uniform sampler2D map;","uniform float opacity;","uniform int renderType;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")},lensFlare:{vertexShader:["uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform int renderType;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision mediump float;","uniform sampler2D map;","uniform sampler2D occlusionMap;","uniform float opacity;","uniform int renderType;","uniform vec3 color;","varying vec2 vUV;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +","texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +","texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +","texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;","visibility = ( 1.0 - visibility / 4.0 );","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * visibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")}},THREE.ShaderSprite={sprite:{vertexShader:["uniform int useScreenCoordinates;","uniform int affectedByDistance;","uniform vec3 screenPosition;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 alignment;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position + alignment;","vec2 rotatedPosition;","rotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;","rotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;","vec4 finalPosition;","if( useScreenCoordinates != 0 ) {","finalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );","} else {","finalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition * ( affectedByDistance == 1 ? 1.0 : finalPosition.z );","}","gl_Position = finalPosition;","}"].join("\n"),fragmentShader:["precision mediump float;","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","}"].join("\n")}},THREE.LensFlarePlugin=function(){function createProgram(shader){var program=_gl.createProgram(),fragmentShader=_gl.createShader(_gl.FRAGMENT_SHADER),vertexShader=_gl.createShader(_gl.VERTEX_SHADER);return _gl.shaderSource(fragmentShader,shader.fragmentShader),_gl.shaderSource(vertexShader,shader.vertexShader),_gl.compileShader(fragmentShader),_gl.compileShader(vertexShader),_gl.attachShader(program,fragmentShader),_gl.attachShader(program,vertexShader),_gl.linkProgram(program),program}var _gl,_renderer,_lensFlare={};this.init=function(renderer){_gl=renderer.context,_renderer=renderer,_lensFlare.vertices=new Float32Array(16),_lensFlare.faces=new Uint16Array(6);var i=0;_lensFlare.vertices[i++]=-1,_lensFlare.vertices[i++]=-1,_lensFlare.vertices[i++]=0,_lensFlare.vertices[i++]=0,_lensFlare.vertices[i++]=1,_lensFlare.vertices[i++]=-1,_lensFlare.vertices[i++]=1,_lensFlare.vertices[i++]=0,_lensFlare.vertices[i++]=1,_lensFlare.vertices[i++]=1,_lensFlare.vertices[i++]=1,_lensFlare.vertices[i++]=1,_lensFlare.vertices[i++]=-1,_lensFlare.vertices[i++]=1,_lensFlare.vertices[i++]=0,_lensFlare.vertices[i++]=1,i=0,_lensFlare.faces[i++]=0,_lensFlare.faces[i++]=1,_lensFlare.faces[i++]=2,_lensFlare.faces[i++]=0,_lensFlare.faces[i++]=2,_lensFlare.faces[i++]=3,_lensFlare.vertexBuffer=_gl.createBuffer(),_lensFlare.elementBuffer=_gl.createBuffer(),_gl.bindBuffer(_gl.ARRAY_BUFFER,_lensFlare.vertexBuffer),_gl.bufferData(_gl.ARRAY_BUFFER,_lensFlare.vertices,_gl.STATIC_DRAW),_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,_lensFlare.elementBuffer),_gl.bufferData(_gl.ELEMENT_ARRAY_BUFFER,_lensFlare.faces,_gl.STATIC_DRAW),_lensFlare.tempTexture=_gl.createTexture(),_lensFlare.occlusionTexture=_gl.createTexture(),_gl.bindTexture(_gl.TEXTURE_2D,_lensFlare.tempTexture),_gl.texImage2D(_gl.TEXTURE_2D,0,_gl.RGB,16,16,0,_gl.RGB,_gl.UNSIGNED_BYTE,null),_gl.texParameteri(_gl.TEXTURE_2D,_gl.TEXTURE_WRAP_S,_gl.CLAMP_TO_EDGE),_gl.texParameteri(_gl.TEXTURE_2D,_gl.TEXTURE_WRAP_T,_gl.CLAMP_TO_EDGE),_gl.texParameteri(_gl.TEXTURE_2D,_gl.TEXTURE_MAG_FILTER,_gl.NEAREST),_gl.texParameteri(_gl.TEXTURE_2D,_gl.TEXTURE_MIN_FILTER,_gl.NEAREST),_gl.bindTexture(_gl.TEXTURE_2D,_lensFlare.occlusionTexture),_gl.texImage2D(_gl.TEXTURE_2D,0,_gl.RGBA,16,16,0,_gl.RGBA,_gl.UNSIGNED_BYTE,null),_gl.texParameteri(_gl.TEXTURE_2D,_gl.TEXTURE_WRAP_S,_gl.CLAMP_TO_EDGE),_gl.texParameteri(_gl.TEXTURE_2D,_gl.TEXTURE_WRAP_T,_gl.CLAMP_TO_EDGE),_gl.texParameteri(_gl.TEXTURE_2D,_gl.TEXTURE_MAG_FILTER,_gl.NEAREST),_gl.texParameteri(_gl.TEXTURE_2D,_gl.TEXTURE_MIN_FILTER,_gl.NEAREST),0>=_gl.getParameter(_gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(_lensFlare.hasVertexTexture=!1,_lensFlare.program=createProgram(THREE.ShaderFlares.lensFlare)):(_lensFlare.hasVertexTexture=!0,_lensFlare.program=createProgram(THREE.ShaderFlares.lensFlareVertexTexture)),_lensFlare.attributes={},_lensFlare.uniforms={},_lensFlare.attributes.vertex=_gl.getAttribLocation(_lensFlare.program,"position"),_lensFlare.attributes.uv=_gl.getAttribLocation(_lensFlare.program,"uv"),_lensFlare.uniforms.renderType=_gl.getUniformLocation(_lensFlare.program,"renderType"),_lensFlare.uniforms.map=_gl.getUniformLocation(_lensFlare.program,"map"),_lensFlare.uniforms.occlusionMap=_gl.getUniformLocation(_lensFlare.program,"occlusionMap"),_lensFlare.uniforms.opacity=_gl.getUniformLocation(_lensFlare.program,"opacity"),_lensFlare.uniforms.color=_gl.getUniformLocation(_lensFlare.program,"color"),_lensFlare.uniforms.scale=_gl.getUniformLocation(_lensFlare.program,"scale"),_lensFlare.uniforms.rotation=_gl.getUniformLocation(_lensFlare.program,"rotation"),_lensFlare.uniforms.screenPosition=_gl.getUniformLocation(_lensFlare.program,"screenPosition"),_lensFlare.attributesEnabled=!1},this.render=function(scene,camera,viewportWidth,viewportHeight){var flares=scene.__webglFlares,nFlares=flares.length;if(nFlares){var tempPosition=new THREE.Vector3,invAspect=viewportHeight/viewportWidth,halfViewportWidth=.5*viewportWidth,halfViewportHeight=.5*viewportHeight,size=16/viewportHeight,scale=new THREE.Vector2(size*invAspect,size),screenPosition=new THREE.Vector3(1,1,0),screenPositionPixels=new THREE.Vector2(1,1),uniforms=_lensFlare.uniforms,attributes=_lensFlare.attributes;_gl.useProgram(_lensFlare.program),_lensFlare.attributesEnabled||(_gl.enableVertexAttribArray(_lensFlare.attributes.vertex),_gl.enableVertexAttribArray(_lensFlare.attributes.uv),_lensFlare.attributesEnabled=!0),_gl.uniform1i(uniforms.occlusionMap,0),_gl.uniform1i(uniforms.map,1),_gl.bindBuffer(_gl.ARRAY_BUFFER,_lensFlare.vertexBuffer),_gl.vertexAttribPointer(attributes.vertex,2,_gl.FLOAT,!1,16,0),_gl.vertexAttribPointer(attributes.uv,2,_gl.FLOAT,!1,16,8),_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,_lensFlare.elementBuffer),_gl.disable(_gl.CULL_FACE),_gl.depthMask(!1);var i,j,jl,flare,sprite;for(i=0;nFlares>i;i++)if(size=16/viewportHeight,scale.set(size*invAspect,size),flare=flares[i],tempPosition.set(flare.matrixWorld.elements[12],flare.matrixWorld.elements[13],flare.matrixWorld.elements[14]),camera.matrixWorldInverse.multiplyVector3(tempPosition),camera.projectionMatrix.multiplyVector3(tempPosition),screenPosition.copy(tempPosition),screenPositionPixels.x=screenPosition.x*halfViewportWidth+halfViewportWidth,screenPositionPixels.y=screenPosition.y*halfViewportHeight+halfViewportHeight,_lensFlare.hasVertexTexture||screenPositionPixels.x>0&&viewportWidth>screenPositionPixels.x&&screenPositionPixels.y>0&&viewportHeight>screenPositionPixels.y)for(_gl.activeTexture(_gl.TEXTURE1),_gl.bindTexture(_gl.TEXTURE_2D,_lensFlare.tempTexture),_gl.copyTexImage2D(_gl.TEXTURE_2D,0,_gl.RGBA,screenPositionPixels.x-8,screenPositionPixels.y-8,16,16,0),_gl.uniform1i(uniforms.renderType,0),_gl.uniform2f(uniforms.scale,scale.x,scale.y),_gl.uniform3f(uniforms.screenPosition,screenPosition.x,screenPosition.y,screenPosition.z),_gl.disable(_gl.BLEND),_gl.enable(_gl.DEPTH_TEST),_gl.drawElements(_gl.TRIANGLES,6,_gl.UNSIGNED_SHORT,0),_gl.activeTexture(_gl.TEXTURE0),_gl.bindTexture(_gl.TEXTURE_2D,_lensFlare.occlusionTexture),_gl.copyTexImage2D(_gl.TEXTURE_2D,0,_gl.RGBA,screenPositionPixels.x-8,screenPositionPixels.y-8,16,16,0),_gl.uniform1i(uniforms.renderType,1),_gl.disable(_gl.DEPTH_TEST),_gl.activeTexture(_gl.TEXTURE1),_gl.bindTexture(_gl.TEXTURE_2D,_lensFlare.tempTexture),_gl.drawElements(_gl.TRIANGLES,6,_gl.UNSIGNED_SHORT,0),flare.positionScreen.copy(screenPosition),flare.customUpdateCallback?flare.customUpdateCallback(flare):flare.updateLensFlares(),_gl.uniform1i(uniforms.renderType,2),_gl.enable(_gl.BLEND),j=0,jl=flare.lensFlares.length;jl>j;j++)sprite=flare.lensFlares[j],sprite.opacity>.001&&sprite.scale>.001&&(screenPosition.x=sprite.x,screenPosition.y=sprite.y,screenPosition.z=sprite.z,size=sprite.size*sprite.scale/viewportHeight,scale.x=size*invAspect,scale.y=size,_gl.uniform3f(uniforms.screenPosition,screenPosition.x,screenPosition.y,screenPosition.z),_gl.uniform2f(uniforms.scale,scale.x,scale.y),_gl.uniform1f(uniforms.rotation,sprite.rotation),_gl.uniform1f(uniforms.opacity,sprite.opacity),_gl.uniform3f(uniforms.color,sprite.color.r,sprite.color.g,sprite.color.b),_renderer.setBlending(sprite.blending,sprite.blendEquation,sprite.blendSrc,sprite.blendDst),_renderer.setTexture(sprite.texture,1),_gl.drawElements(_gl.TRIANGLES,6,_gl.UNSIGNED_SHORT,0));_gl.enable(_gl.CULL_FACE),_gl.enable(_gl.DEPTH_TEST),_gl.depthMask(!0)}}},THREE.AudioListenerObject=function(camera){THREE.Object3D.call(this);var cameraPosition=new THREE.Vector3,oldCameraPosition=new THREE.Vector3,cameraDelta=new THREE.Vector3,cameraFront=new THREE.Vector3,cameraUp=new THREE.Vector3;this.updateMatrix=function(){(camera.matrixWorld.getPosition().x!=oldCameraPosition.x||camera.matrixWorld.getPosition().y!=oldCameraPosition.y||camera.matrixWorld.getPosition().z!=oldCameraPosition.z)&&(oldCameraPosition.copy(cameraPosition),cameraPosition.copy(camera.matrixWorld.getPosition()),cameraDelta.sub(cameraPosition,oldCameraPosition),cameraUp.copy(camera.up),cameraFront.set(0,0,-1),camera.matrixWorld.rotateAxis(cameraFront),cameraFront.normalize(),SCSound.setListenerPosition(cameraPosition.x,cameraPosition.y,cameraPosition.z,cameraDelta.x,cameraDelta.y,cameraDelta.z,cameraFront.x,cameraFront.y,cameraFront.z,cameraUp.x,cameraUp.y,cameraUp.z))}},THREE.AudioListenerObject.prototype=Object.create(THREE.Object3D.prototype),THREE.AudioListenerObject.prototype.context=null,THREE.AudioListenerObject.prototype.type=null,THREE.AudioObject=function(eventName){THREE.Object3D.call(this);var eventName=eventName,soundPosition=new THREE.Vector3,oldSoundPosition=new THREE.Vector3,oldSoundDelta=new THREE.Vector3,oldSoundUp=new THREE.Vector3,soundDelta=new THREE.Vector3,soundFront=new THREE.Vector3,soundUp=new THREE.Vector3,_this=this;this.updateMatrix=function(){soundPosition.copy(_this.position),soundDelta.sub(soundPosition,oldSoundPosition),soundFront.set(0,0,-1),this.matrixWorld.rotateAxis(soundFront),soundFront.normalize(),soundUp.copy(this.up),(soundPosition.x!=oldSoundPosition.x||soundPosition.y!=oldSoundPosition.y||soundPosition.z!=oldSoundPosition.z||soundDelta.x!=oldSoundDelta.x||soundDelta.y!=oldSoundDelta.y||soundDelta.z!=oldSoundDelta.z||soundUp.x!=oldSoundUp.x||soundUp.y!=oldSoundUp.y||soundUp.z!=oldSoundUp.z)&&(SCSound.setPannerPosition(eventName,soundPosition.x,soundPosition.y,soundPosition.z,soundDelta.x,soundDelta.y,soundDelta.z,soundFront.x,soundFront.y,soundFront.z,soundUp.x,soundUp.y,soundUp.z),oldSoundPosition.copy(soundPosition),oldSoundDelta.copy(soundDelta),oldSoundUp.copy(soundUp))}},THREE.AudioObject.prototype=Object.create(THREE.Object3D.prototype),THREE.AudioObject.prototype.context=null,THREE.AudioObject.prototype.type=null,THREE.ShaderExtras={screen:{uniforms:{tDiffuse:{type:"t",value:null},opacity:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","gl_FragColor = opacity * texel;","}"].join("\n")},convolution:{uniforms:{tDiffuse:{type:"t",value:null},uImageIncrement:{type:"v2",value:new THREE.Vector2(.001953125,0)},cKernel:{type:"fv1",value:[]}},vertexShader:["uniform vec2 uImageIncrement;","varying vec2 vUv;","void main() {","vUv = uv - ( ( KERNEL_SIZE - 1.0 ) / 2.0 ) * uImageIncrement;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float cKernel[ KERNEL_SIZE ];","uniform sampler2D tDiffuse;","uniform vec2 uImageIncrement;","varying vec2 vUv;","void main() {","vec2 imageCoord = vUv;","vec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );","for( int i = 0; i < KERNEL_SIZE; i ++ ) {","sum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];","imageCoord += uImageIncrement;","}","gl_FragColor = sum;","}"].join("\n")},film:{uniforms:{tDiffuse:{type:"t",value:null},time:{type:"f",value:0},nIntensity:{type:"f",value:.5},sIntensity:{type:"f",value:.05},sCount:{type:"f",value:4096},grayscale:{type:"i",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float time;","uniform bool grayscale;","uniform float nIntensity;","uniform float sIntensity;","uniform float sCount;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 cTextureScreen = texture2D( tDiffuse, vUv );","float x = vUv.x * vUv.y * time *  1000.0;","x = mod( x, 13.0 ) * mod( x, 123.0 );","float dx = mod( x, 0.01 );","vec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );","vec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );","cResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;","cResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );","if( grayscale ) {","cResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );","}","gl_FragColor =  vec4( cResult, cTextureScreen.a );","}"].join("\n")},bokeh:{uniforms:{tColor:{type:"t",value:null},tDepth:{type:"t",value:null},focus:{type:"f",value:1},aspect:{type:"f",value:1},aperture:{type:"f",value:.025},maxblur:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["varying vec2 vUv;","uniform sampler2D tColor;","uniform sampler2D tDepth;","uniform float maxblur;","uniform float aperture;","uniform float focus;","uniform float aspect;","void main() {","vec2 aspectcorrect = vec2( 1.0, aspect );","vec4 depth1 = texture2D( tDepth, vUv );","float factor = depth1.x - focus;","vec2 dofblur = vec2 ( clamp( factor * aperture, -maxblur, maxblur ) );","vec2 dofblur9 = dofblur * 0.9;","vec2 dofblur7 = dofblur * 0.7;","vec2 dofblur4 = dofblur * 0.4;","vec4 col = vec4( 0.0 );","col += texture2D( tColor, vUv.xy );","col += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.4,   0.0  ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur4 );","gl_FragColor = col / 41.0;","gl_FragColor.a = 1.0;","}"].join("\n")},dofmipmap:{uniforms:{tColor:{type:"t",value:null},tDepth:{type:"t",value:null},focus:{type:"f",value:1},maxblur:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float focus;","uniform float maxblur;","uniform sampler2D tColor;","uniform sampler2D tDepth;","varying vec2 vUv;","void main() {","vec4 depth = texture2D( tDepth, vUv );","float factor = depth.x - focus;","vec4 col = texture2D( tColor, vUv, 2.0 * maxblur * abs( focus - depth.x ) );","gl_FragColor = col;","gl_FragColor.a = 1.0;","}"].join("\n")},sepia:{uniforms:{tDiffuse:{type:"t",value:null},amount:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float amount;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 color = texture2D( tDiffuse, vUv );","vec3 c = color.rgb;","color.r = dot( c, vec3( 1.0 - 0.607 * amount, 0.769 * amount, 0.189 * amount ) );","color.g = dot( c, vec3( 0.349 * amount, 1.0 - 0.314 * amount, 0.168 * amount ) );","color.b = dot( c, vec3( 0.272 * amount, 0.534 * amount, 1.0 - 0.869 * amount ) );","gl_FragColor = vec4( min( vec3( 1.0 ), color.rgb ), color.a );","}"].join("\n")},dotscreen:{uniforms:{tDiffuse:{type:"t",value:null},tSize:{type:"v2",value:new THREE.Vector2(256,256)},center:{type:"v2",value:new THREE.Vector2(.5,.5)},angle:{type:"f",value:1.57},scale:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform vec2 center;","uniform float angle;","uniform float scale;","uniform vec2 tSize;","uniform sampler2D tDiffuse;","varying vec2 vUv;","float pattern() {","float s = sin( angle ), c = cos( angle );","vec2 tex = vUv * tSize - center;","vec2 point = vec2( c * tex.x - s * tex.y, s * tex.x + c * tex.y ) * scale;","return ( sin( point.x ) * sin( point.y ) ) * 4.0;","}","void main() {","vec4 color = texture2D( tDiffuse, vUv );","float average = ( color.r + color.g + color.b ) / 3.0;","gl_FragColor = vec4( vec3( average * 10.0 - 5.0 + pattern() ), color.a );","}"].join("\n")},vignette:{uniforms:{tDiffuse:{type:"t",value:null},offset:{type:"f",value:1},darkness:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float offset;","uniform float darkness;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","vec2 uv = ( vUv - vec2( 0.5 ) ) * vec2( offset );","gl_FragColor = vec4( mix( texel.rgb, vec3( 1.0 - darkness ), dot( uv, uv ) ), texel.a );","}"].join("\n")},bleachbypass:{uniforms:{tDiffuse:{type:"t",value:null},opacity:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 base = texture2D( tDiffuse, vUv );","vec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );","float lum = dot( lumCoeff, base.rgb );","vec3 blend = vec3( lum );","float L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );","vec3 result1 = 2.0 * base.rgb * blend;","vec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );","vec3 newColor = mix( result1, result2, L );","float A2 = opacity * base.a;","vec3 mixRGB = A2 * newColor.rgb;","mixRGB += ( ( 1.0 - A2 ) * base.rgb );","gl_FragColor = vec4( mixRGB, base.a );","}"].join("\n")},focus:{uniforms:{tDiffuse:{type:"t",value:null},screenWidth:{type:"f",value:1024},screenHeight:{type:"f",value:1024},sampleDistance:{type:"f",value:.94},waveFactor:{type:"f",value:.00125}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float screenWidth;","uniform float screenHeight;","uniform float sampleDistance;","uniform float waveFactor;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 color, org, tmp, add;","float sample_dist, f;","vec2 vin;","vec2 uv = vUv;","add = color = org = texture2D( tDiffuse, uv );","vin = ( uv - vec2( 0.5 ) ) * vec2( 1.4 );","sample_dist = dot( vin, vin ) * 2.0;","f = ( waveFactor * 100.0 + sample_dist ) * sampleDistance * 4.0;","vec2 sampleSize = vec2(  1.0 / screenWidth, 1.0 / screenHeight ) * vec2( f );","add += tmp = texture2D( tDiffuse, uv + vec2( 0.111964, 0.993712 ) * sampleSize );","if( tmp.b < color.b ) color = tmp;","add += tmp = texture2D( tDiffuse, uv + vec2( 0.846724, 0.532032 ) * sampleSize );","if( tmp.b < color.b ) color = tmp;","add += tmp = texture2D( tDiffuse, uv + vec2( 0.943883, -0.330279 ) * sampleSize );","if( tmp.b < color.b ) color = tmp;","add += tmp = texture2D( tDiffuse, uv + vec2( 0.330279, -0.943883 ) * sampleSize );","if( tmp.b < color.b ) color = tmp;","add += tmp = texture2D( tDiffuse, uv + vec2( -0.532032, -0.846724 ) * sampleSize );","if( tmp.b < color.b ) color = tmp;","add += tmp = texture2D( tDiffuse, uv + vec2( -0.993712, -0.111964 ) * sampleSize );","if( tmp.b < color.b ) color = tmp;","add += tmp = texture2D( tDiffuse, uv + vec2( -0.707107, 0.707107 ) * sampleSize );","if( tmp.b < color.b ) color = tmp;","color = color * vec4( 2.0 ) - ( add / vec4( 8.0 ) );","color = color + ( add / vec4( 8.0 ) - color ) * ( vec4( 1.0 ) - vec4( sample_dist * 0.5 ) );","gl_FragColor = vec4( color.rgb * color.rgb * vec3( 0.95 ) + color.rgb, 1.0 );","}"].join("\n")},triangleBlur:{uniforms:{texture:{type:"t",value:null},delta:{type:"v2",value:new THREE.Vector2(1,1)}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["#define ITERATIONS 10.0","uniform sampler2D texture;","uniform vec2 delta;","varying vec2 vUv;","float random( vec3 scale, float seed ) {","return fract( sin( dot( gl_FragCoord.xyz + seed, scale ) ) * 43758.5453 + seed );","}","void main() {","vec4 color = vec4( 0.0 );","float total = 0.0;","float offset = random( vec3( 12.9898, 78.233, 151.7182 ), 0.0 );","for ( float t = -ITERATIONS; t <= ITERATIONS; t ++ ) {","float percent = ( t + offset - 0.5 ) / ITERATIONS;","float weight = 1.0 - abs( percent );","color += texture2D( texture, vUv + delta * percent ) * weight;","total += weight;","}","gl_FragColor = color / total;","}"].join("\n")},basic:{uniforms:{},vertexShader:["void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["void main() {","gl_FragColor = vec4( 1.0, 0.0, 0.0, 0.5 );","}"].join("\n")},horizontalBlur:{uniforms:{tDiffuse:{type:"t",value:null},h:{type:"f",value:1/512}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform float h;","varying vec2 vUv;","void main() {","vec4 sum = vec4( 0.0 );","sum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;","sum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;","sum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;","sum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ) * 0.1531;","sum += texture2D( tDiffuse, vec2( vUv.x, 		  	vUv.y ) ) * 0.1633;","sum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ) * 0.1531;","sum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;","sum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;","sum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;","gl_FragColor = sum;","}"].join("\n")},verticalBlur:{uniforms:{tDiffuse:{type:"t",value:null},v:{type:"f",value:1/512}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform float v;","varying vec2 vUv;","void main() {","vec4 sum = vec4( 0.0 );","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y			  ) ) * 0.1633;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;","gl_FragColor = sum;","}"].join("\n")},horizontalTiltShift:{uniforms:{tDiffuse:{type:"t",value:null},h:{type:"f",value:1/512},r:{type:"f",value:.35}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform float h;","uniform float r;","varying vec2 vUv;","void main() {","vec4 sum = vec4( 0.0 );","float hh = h * abs( r - vUv.y );","sum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;","sum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;","sum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;","sum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;","sum += texture2D( tDiffuse, vec2( vUv.x, 		  	 vUv.y ) ) * 0.1633;","sum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;","sum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;","sum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;","sum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;","gl_FragColor = sum;","}"].join("\n")},verticalTiltShift:{uniforms:{tDiffuse:{type:"t",value:null},v:{type:"f",value:1/512},r:{type:"f",value:.35}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform float v;","uniform float r;","varying vec2 vUv;","void main() {","vec4 sum = vec4( 0.0 );","float vv = v * abs( r - vUv.y );","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y			   ) ) * 0.1633;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;","gl_FragColor = sum;","}"].join("\n")},blend:{uniforms:{tDiffuse1:{type:"t",value:null},tDiffuse2:{type:"t",value:null},mixRatio:{type:"f",value:.5},opacity:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float opacity;","uniform float mixRatio;","uniform sampler2D tDiffuse1;","uniform sampler2D tDiffuse2;","varying vec2 vUv;","void main() {","vec4 texel1 = texture2D( tDiffuse1, vUv );","vec4 texel2 = texture2D( tDiffuse2, vUv );","gl_FragColor = opacity * mix( texel1, texel2, mixRatio );","}"].join("\n")},fxaa:{uniforms:{tDiffuse:{type:"t",value:null},resolution:{type:"v2",value:new THREE.Vector2(1/1024,1/512)}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform vec2 resolution;","varying vec2 vUv;","#define FXAA_REDUCE_MIN   (1.0/128.0)","#define FXAA_REDUCE_MUL   (1.0/8.0)","#define FXAA_SPAN_MAX     8.0","void main() {","vec3 rgbNW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ).xyz;","vec3 rgbNE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ).xyz;","vec3 rgbSW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ).xyz;","vec3 rgbSE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ).xyz;","vec4 rgbaM  = texture2D( tDiffuse,  gl_FragCoord.xy  * resolution );","vec3 rgbM  = rgbaM.xyz;","float opacity  = rgbaM.w;","vec3 luma = vec3( 0.299, 0.587, 0.114 );","float lumaNW = dot( rgbNW, luma );","float lumaNE = dot( rgbNE, luma );","float lumaSW = dot( rgbSW, luma );","float lumaSE = dot( rgbSE, luma );","float lumaM  = dot( rgbM,  luma );","float lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );","float lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );","vec2 dir;","dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));","dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));","float dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );","float rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );","dir = min( vec2( FXAA_SPAN_MAX,  FXAA_SPAN_MAX),","max( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),","dir * rcpDirMin)) * resolution;","vec3 rgbA = 0.5 * (","texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 1.0 / 3.0 - 0.5 ) ).xyz +","texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 2.0 / 3.0 - 0.5 ) ).xyz );","vec3 rgbB = rgbA * 0.5 + 0.25 * (","texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * -0.5 ).xyz +","texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * 0.5 ).xyz );","float lumaB = dot( rgbB, luma );","if ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) ) {","gl_FragColor = vec4( rgbA, opacity );","} else {","gl_FragColor = vec4( rgbB, opacity );","}","}"].join("\n")},luminosity:{uniforms:{tDiffuse:{type:"t",value:null}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","vec3 luma = vec3( 0.299, 0.587, 0.114 );","float v = dot( texel.xyz, luma );","gl_FragColor = vec4( v, v, v, texel.w );","}"].join("\n")},colorCorrection:{uniforms:{tDiffuse:{type:"t",value:null},powRGB:{type:"v3",value:new THREE.Vector3(2,2,2)},mulRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform vec3 powRGB;","uniform vec3 mulRGB;","varying vec2 vUv;","void main() {","gl_FragColor = texture2D( tDiffuse, vUv );","gl_FragColor.rgb = mulRGB * pow( gl_FragColor.rgb, powRGB );","}"].join("\n")},normalmap:{uniforms:{heightMap:{type:"t",value:null},resolution:{type:"v2",value:new THREE.Vector2(512,512)},scale:{type:"v2",value:new THREE.Vector2(1,1)},height:{type:"f",value:.05}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float height;","uniform vec2 resolution;","uniform sampler2D heightMap;","varying vec2 vUv;","void main() {","float val = texture2D( heightMap, vUv ).x;","float valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;","float valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;","gl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );","}"].join("\n")},ssao:{uniforms:{tDiffuse:{type:"t",value:null},tDepth:{type:"t",value:null},size:{type:"v2",value:new THREE.Vector2(512,512)},cameraNear:{type:"f",value:1},cameraFar:{type:"f",value:100},fogNear:{type:"f",value:5},fogFar:{type:"f",value:100},fogEnabled:{type:"i",value:0},onlyAO:{type:"i",value:0},aoClamp:{type:"f",value:.3},lumInfluence:{type:"f",value:.9}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float cameraNear;","uniform float cameraFar;","uniform float fogNear;","uniform float fogFar;","uniform bool fogEnabled;","uniform bool onlyAO;","uniform vec2 size;","uniform float aoClamp;","uniform float lumInfluence;","uniform sampler2D tDiffuse;","uniform sampler2D tDepth;","varying vec2 vUv;","#define DL 2.399963229728653","#define EULER 2.718281828459045","float width = size.x;","float height = size.y;","float cameraFarPlusNear = cameraFar + cameraNear;","float cameraFarMinusNear = cameraFar - cameraNear;","float cameraCoef = 2.0 * cameraNear;","const int samples = 8;","const float radius = 5.0;","const bool useNoise = false;","const float noiseAmount = 0.0003;","const float diffArea = 0.4;","const float gDisplace = 0.4;","const vec3 onlyAOColor = vec3( 1.0, 0.7, 0.5 );","float unpackDepth( const in vec4 rgba_depth ) {","const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );","float depth = dot( rgba_depth, bit_shift );","return depth;","}","vec2 rand( const vec2 coord ) {","vec2 noise;","if ( useNoise ) {","float nx = dot ( coord, vec2( 12.9898, 78.233 ) );","float ny = dot ( coord, vec2( 12.9898, 78.233 ) * 2.0 );","noise = clamp( fract ( 43758.5453 * sin( vec2( nx, ny ) ) ), 0.0, 1.0 );","} else {","float ff = fract( 1.0 - coord.s * ( width / 2.0 ) );","float gg = fract( coord.t * ( height / 2.0 ) );","noise = vec2( 0.25, 0.75 ) * vec2( ff ) + vec2( 0.75, 0.25 ) * gg;","}","return ( noise * 2.0  - 1.0 ) * noiseAmount;","}","float doFog() {","float zdepth = unpackDepth( texture2D( tDepth, vUv ) );","float depth = -cameraFar * cameraNear / ( zdepth * cameraFarMinusNear - cameraFar );","return smoothstep( fogNear, fogFar, depth );","}","float readDepth( const in vec2 coord ) {","return cameraCoef / ( cameraFarPlusNear - unpackDepth( texture2D( tDepth, coord ) ) * cameraFarMinusNear );","}","float compareDepths( const in float depth1, const in float depth2, inout int far ) {","float garea = 2.0;","float diff = ( depth1 - depth2 ) * 100.0;","if ( diff < gDisplace ) {","garea = diffArea;","} else {","far = 1;","}","float dd = diff - gDisplace;","float gauss = pow( EULER, -2.0 * dd * dd / ( garea * garea ) );","return gauss;","}","float calcAO( float depth, float dw, float dh ) {","float dd = radius - depth * radius;","vec2 vv = vec2( dw, dh );","vec2 coord1 = vUv + dd * vv;","vec2 coord2 = vUv - dd * vv;","float temp1 = 0.0;","float temp2 = 0.0;","int far = 0;","temp1 = compareDepths( depth, readDepth( coord1 ), far );","if ( far > 0 ) {","temp2 = compareDepths( readDepth( coord2 ), depth, far );","temp1 += ( 1.0 - temp1 ) * temp2;","}","return temp1;","}","void main() {","vec2 noise = rand( vUv );","float depth = readDepth( vUv );","float tt = clamp( depth, aoClamp, 1.0 );","float w = ( 1.0 / width )  / tt + ( noise.x * ( 1.0 - noise.x ) );","float h = ( 1.0 / height ) / tt + ( noise.y * ( 1.0 - noise.y ) );","float pw;","float ph;","float ao;","float dz = 1.0 / float( samples );","float z = 1.0 - dz / 2.0;","float l = 0.0;","for ( int i = 0; i <= samples; i ++ ) {","float r = sqrt( 1.0 - z );","pw = cos( l ) * r;","ph = sin( l ) * r;","ao += calcAO( depth, pw * w, ph * h );","z = z - dz;","l = l + DL;","}","ao /= float( samples );","ao = 1.0 - ao;","if ( fogEnabled ) {","ao = mix( ao, 1.0, doFog() );","}","vec3 color = texture2D( tDiffuse, vUv ).rgb;","vec3 lumcoeff = vec3( 0.299, 0.587, 0.114 );","float lum = dot( color.rgb, lumcoeff );","vec3 luminance = vec3( lum );","vec3 final = vec3( color * mix( vec3( ao ), vec3( 1.0 ), luminance * lumInfluence ) );","if ( onlyAO ) {","final = onlyAOColor * vec3( mix( vec3( ao ), vec3( 1.0 ), luminance * lumInfluence ) );","}","gl_FragColor = vec4( final, 1.0 );","}"].join("\n")},colorify:{uniforms:{tDiffuse:{type:"t",value:null},color:{type:"c",value:new THREE.Color(16777215)}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform vec3 color;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","vec3 luma = vec3( 0.299, 0.587, 0.114 );","float v = dot( texel.xyz, luma );","gl_FragColor = vec4( v * color, texel.w );","}"].join("\n")},unpackDepthRGBA:{uniforms:{tDiffuse:{type:"t",value:null},opacity:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","float unpackDepth( const in vec4 rgba_depth ) {","const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );","float depth = dot( rgba_depth, bit_shift );","return depth;","}","void main() {","float depth = 1.0 - unpackDepth( texture2D( tDiffuse, vUv ) );","gl_FragColor = opacity * vec4( vec3( depth ), 1.0 );","}"].join("\n")},buildKernel:function(sigma){function gauss(x,sigma){return Math.exp(-(x*x)/(2*sigma*sigma))
}var i,values,sum,halfWidth,kMaxKernelSize=25,kernelSize=2*Math.ceil(3*sigma)+1;for(kernelSize>kMaxKernelSize&&(kernelSize=kMaxKernelSize),halfWidth=.5*(kernelSize-1),values=Array(kernelSize),sum=0,i=0;kernelSize>i;++i)values[i]=gauss(i-halfWidth,sigma),sum+=values[i];for(i=0;kernelSize>i;++i)values[i]/=sum;return values}},CustomImageUtils={crossOrigin:"anonymous",cacheTextures:!0,loadedCompressedTextures:{},parsedCompressedTextures:{},loadedTextures:{},loadTexture:function(url,mapping,onLoad,onProgress,onError,textureIndex){var image=new Image,texture=new THREE.Texture(image,mapping);if(texture.name="PNG_"+url,void 0!=CustomImageUtils.loadedTextures[url])return texture.image=CustomImageUtils.loadedTextures[url],texture.needsUpdate=!0,onProgress&&onProgress(1,textureIndex),onLoad&&onLoad(texture,textureIndex),texture;var loader=new CustomImageLoader(url);return loader.onLoadCallback=function(event){texture.image=event.content,texture.needsUpdate=!0,CustomImageUtils.cacheTextures&&(CustomImageUtils.loadedTextures[url]=event.content),onLoad&&onLoad(texture,textureIndex)},loader.onProgressCallback=function(event){onProgress&&onProgress(event.progress,textureIndex)},loader.onErrorCallback=function(event){onError&&onError(event.message)},loader.crossOrigin=this.crossOrigin,loader.load(url,image),texture.sourceFile=url,texture},loadCompressedTexture:function(url,mapping,onLoad,onProgress,onError,skipParse,textureIndex){var texture=new THREE.CompressedTexture;if(texture.mapping=mapping,texture.name="DDS_"+url,void 0!=CustomImageUtils.loadedCompressedTextures[url]){if(!skipParse){var dds,buffer=CustomImageUtils.loadedCompressedTextures[url];if(void 0!=CustomImageUtils.parsedCompressedTextures[url])dds=CustomImageUtils.parsedCompressedTextures[url];else try{dds=THREE.ImageUtils.parseDDS(buffer,!0),CustomImageUtils.cacheTextures&&(CustomImageUtils.parsedCompressedTextures[url]=dds)}catch(error){return onError&&onError(texture,error),texture}texture.format=dds.format,texture.mipmaps=dds.mipmaps,texture.image.width=dds.width,texture.image.height=dds.height}return texture.generateMipmaps=!1,texture.needsUpdate=!0,onProgress&&onProgress(1,textureIndex),onLoad&&onLoad(texture,textureIndex),texture}var request=new XMLHttpRequest;return request.onload=function(){var buffer=request.response;if(!skipParse){var dds,dds;if(void 0!=CustomImageUtils.parsedCompressedTextures[url])dds=CustomImageUtils.parsedCompressedTextures[url];else try{dds=THREE.ImageUtils.parseDDS(buffer,!0),CustomImageUtils.cacheTextures&&(CustomImageUtils.parsedCompressedTextures[url]=dds)}catch(error){return onError&&onError(texture,error),texture}texture.format=dds.format,texture.mipmaps=dds.mipmaps,texture.image.width=dds.width,texture.image.height=dds.height}texture.generateMipmaps=!1,texture.needsUpdate=!0,CustomImageUtils.cacheTextures&&(CustomImageUtils.loadedCompressedTextures[url]=buffer),onLoad&&onLoad(texture,textureIndex)},request.onprogress=function(evt){if(evt.lengthComputable){var prog=evt.loaded/evt.total;onProgress&&onProgress(prog,textureIndex)}},request.onerror=onError,request.open("GET",url,!0),request.responseType="arraybuffer",request.send(null),texture}};var CustomImageLoader=function(){function CustomImageLoader(){this._urlToLoad="test",this._preload=new createjs.PreloadJS,this.onLoadCallback=null,this.onProgressCallback=null,this.onErrorCallback=null}return CustomImageLoader.prototype.load=function(url){var self=this;this._urlToLoad=url,this._preload.onFileLoad=function(event){self.onLoadCallback&&self.onLoadCallback({type:"load",content:event.result})},this._preload.onFileProgress=function(event){self.onProgressCallback&&self.onProgressCallback({type:"progress",progress:event.progress})},this._preload.onError=function(){self.onErrorCallback&&self.onErrorCallback({type:"error",message:"Couldn't load URL ["+self._urlToLoad+"]"})},this._preload.loadFile(url)},CustomImageLoader}();THREE.EffectComposer=function(renderer,renderTarget){if(this.renderer=renderer,this.renderTarget1=renderTarget,void 0===this.renderTarget1){var width=window.innerWidth||1,height=window.innerHeight||1;this.renderTargetParameters={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat,stencilBuffer:!1},this.renderTarget1=new THREE.WebGLRenderTarget(width,height,this.renderTargetParameters)}this.renderTarget2=this.renderTarget1.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.passes=[],this.copyPass=new THREE.ShaderPass(THREE.ShaderExtras.screen)},THREE.EffectComposer.prototype={swapBuffers:function(){var tmp=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=tmp},addPass:function(pass){this.passes.push(pass)},render:function(delta){this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2;var pass,i,maskActive=!1,il=this.passes.length;for(i=0;il>i;i++)if(pass=this.passes[i],pass.enabled){if(pass.render(this.renderer,this.writeBuffer,this.readBuffer,delta,maskActive),pass.needsSwap){if(maskActive){var context=this.renderer.context;context.stencilFunc(context.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,delta),context.stencilFunc(context.EQUAL,1,4294967295)}this.swapBuffers()}pass instanceof THREE.MaskPass?maskActive=!0:pass instanceof THREE.ClearMaskPass&&(maskActive=!1)}},reset:function(renderTarget){this.renderTarget1=renderTarget,void 0===this.renderTarget1&&(this.renderTarget1=new THREE.WebGLRenderTarget(window.innerWidth,window.innerHeight,this.renderTargetParameters)),this.renderTarget2=this.renderTarget1.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}},THREE.EffectComposer.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1),THREE.EffectComposer.quad=new THREE.Mesh(new THREE.PlaneGeometry(2,2),null),THREE.EffectComposer.quad.name="effect_composer_quad",THREE.EffectComposer.scene=new THREE.Scene,THREE.EffectComposer.scene.add(THREE.EffectComposer.quad),THREE.RenderPass=function(scene,camera,overrideMaterial,clearColor,clearAlpha){this.scene=scene,this.camera=camera,this.overrideMaterial=overrideMaterial,this.clearColor=clearColor,this.clearAlpha=void 0!==clearAlpha?clearAlpha:1,this.oldClearColor=new THREE.Color,this.oldClearAlpha=1,this.enabled=!0,this.clear=!0,this.needsSwap=!1},THREE.RenderPass.prototype={render:function(renderer,writeBuffer,readBuffer){this.scene.overrideMaterial=this.overrideMaterial,this.clearColor&&(this.oldClearColor.copy(renderer.getClearColor()),this.oldClearAlpha=renderer.getClearAlpha(),renderer.setClearColor(this.clearColor,this.clearAlpha)),renderer.render(this.scene,this.camera,readBuffer,this.clear),this.clearColor&&renderer.setClearColor(this.oldClearColor,this.oldClearAlpha),this.scene.overrideMaterial=null}},THREE.BloomPass=function(strength,kernelSize,sigma,resolution){strength=void 0!==strength?strength:1,kernelSize=void 0!==kernelSize?kernelSize:25,sigma=void 0!==sigma?sigma:4,resolution=void 0!==resolution?resolution:256;var pars={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat};this.renderTargetX=new THREE.WebGLRenderTarget(resolution,resolution,pars),this.renderTargetY=new THREE.WebGLRenderTarget(resolution,resolution,pars);var screenShader=THREE.ShaderExtras.screen;this.screenUniforms=THREE.UniformsUtils.clone(screenShader.uniforms),this.screenUniforms.opacity.value=strength,this.materialScreen=new THREE.ShaderMaterial({uniforms:this.screenUniforms,vertexShader:screenShader.vertexShader,fragmentShader:screenShader.fragmentShader,blending:THREE.AdditiveBlending,transparent:!0}),this.materialScreen.name="postprocessing_screenshader";var convolutionShader=THREE.ShaderExtras.convolution;this.convolutionUniforms=THREE.UniformsUtils.clone(convolutionShader.uniforms),this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurx,this.convolutionUniforms.cKernel.value=THREE.ShaderExtras.buildKernel(sigma),this.materialConvolution=new THREE.ShaderMaterial({uniforms:this.convolutionUniforms,vertexShader:"#define KERNEL_SIZE "+kernelSize+".0\n"+convolutionShader.vertexShader,fragmentShader:"#define KERNEL_SIZE "+kernelSize+"\n"+convolutionShader.fragmentShader}),this.materialConvolution.name="postprocessing_convolutionshader",this.enabled=!0,this.needsSwap=!1,this.clear=!1},THREE.BloomPass.prototype={render:function(renderer,writeBuffer,readBuffer,delta,maskActive){maskActive&&renderer.context.disable(renderer.context.STENCIL_TEST),THREE.EffectComposer.quad.material=this.materialConvolution,this.convolutionUniforms.tDiffuse.value=readBuffer,this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurX,renderer.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,this.renderTargetX,!0),this.convolutionUniforms.tDiffuse.value=this.renderTargetX,this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurY,renderer.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,this.renderTargetY,!0),THREE.EffectComposer.quad.material=this.materialScreen,this.screenUniforms.tDiffuse.value=this.renderTargetY,maskActive&&renderer.context.enable(renderer.context.STENCIL_TEST),renderer.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,readBuffer,this.clear)}},THREE.BloomPass.blurX=new THREE.Vector2(.001953125,0),THREE.BloomPass.blurY=new THREE.Vector2(0,.001953125),THREE.ShaderPass=function(shader,textureID){this.textureID=void 0!==textureID?textureID:"tDiffuse",this.uniforms=THREE.UniformsUtils.clone(shader.uniforms),this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:shader.vertexShader,fragmentShader:shader.fragmentShader}),this.material.name=shader.name,this.renderToScreen=!1,this.enabled=!0,this.needsSwap=!0,this.clear=!1},THREE.ShaderPass.prototype={render:function(renderer,writeBuffer,readBuffer){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=readBuffer),THREE.EffectComposer.quad.material=this.material,this.renderToScreen?renderer.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera):renderer.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,writeBuffer,this.clear)}},THREE.MaskPass=function(scene,camera){this.scene=scene,this.camera=camera,this.enabled=!0,this.clear=!0,this.needsSwap=!1,this.inverse=!1},THREE.MaskPass.prototype={render:function(renderer,writeBuffer,readBuffer){var context=renderer.context;context.colorMask(!1,!1,!1,!1),context.depthMask(!1);var writeValue,clearValue;this.inverse?(writeValue=0,clearValue=1):(writeValue=1,clearValue=0),context.enable(context.STENCIL_TEST),context.stencilOp(context.REPLACE,context.REPLACE,context.REPLACE),context.stencilFunc(context.ALWAYS,writeValue,4294967295),context.clearStencil(clearValue),renderer.render(this.scene,this.camera,readBuffer,this.clear),renderer.render(this.scene,this.camera,writeBuffer,this.clear),context.colorMask(!0,!0,!0,!0),context.depthMask(!0),context.stencilFunc(context.EQUAL,1,4294967295),context.stencilOp(context.KEEP,context.KEEP,context.KEEP)}},THREE.ClearMaskPass=function(){this.enabled=!0},THREE.ClearMaskPass.prototype={render:function(renderer){var context=renderer.context;context.disable(context.STENCIL_TEST)}},THREE.SavePass=function(renderTarget){var shader=THREE.ShaderExtras.screen;this.textureID="tDiffuse",this.uniforms=THREE.UniformsUtils.clone(shader.uniforms),this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:shader.vertexShader,fragmentShader:shader.fragmentShader}),this.renderTarget=renderTarget,void 0===this.renderTarget&&(this.renderTargetParameters={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat,stencilBuffer:!1},this.renderTarget=new THREE.WebGLRenderTarget(window.innerWidth,window.innerHeight,this.renderTargetParameters)),this.enabled=!0,this.needsSwap=!1,this.clear=!1},THREE.SavePass.prototype={render:function(renderer,writeBuffer,readBuffer){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=readBuffer),THREE.EffectComposer.quad.material=this.material,renderer.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,this.renderTarget,this.clear)}},THREE.FilmPass=function(noiseIntensity,scanlinesIntensity,scanlinesCount,grayscale){var shader=THREE.ShaderExtras.film;this.uniforms=THREE.UniformsUtils.clone(shader.uniforms),this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:shader.vertexShader,fragmentShader:shader.fragmentShader}),void 0!==grayscale&&(this.uniforms.grayscale.value=grayscale),void 0!==noiseIntensity&&(this.uniforms.nIntensity.value=noiseIntensity),void 0!==scanlinesIntensity&&(this.uniforms.sIntensity.value=scanlinesIntensity),void 0!==scanlinesCount&&(this.uniforms.sCount.value=scanlinesCount),this.enabled=!0,this.renderToScreen=!1,this.needsSwap=!0},THREE.FilmPass.prototype={render:function(renderer,writeBuffer,readBuffer,delta){this.uniforms.tDiffuse.value=readBuffer,this.uniforms.time.value+=delta,THREE.EffectComposer.quad.material=this.material,this.renderToScreen?renderer.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera):renderer.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,writeBuffer,!1)}},THREE.BokehShader={uniforms:{tColor:{type:"t",value:null},tDepth:{type:"t",value:null},focus:{type:"f",value:1},aspect:{type:"f",value:1},aperture:{type:"f",value:.025},maxblur:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["varying vec2 vUv;","uniform sampler2D tColor;","uniform sampler2D tDepth;","uniform float maxblur;","uniform float aperture;","uniform float focus;","uniform float aspect;","void main() {","vec2 aspectcorrect = vec2( 1.0, aspect );","vec4 depth1 = texture2D( tDepth, vUv );","float factor = depth1.x - focus;","float blr = clamp( factor * aperture, -maxblur, maxblur );","vec2 dofblur = vec2 ( blr, blr );","vec2 dofblur9 = dofblur * 0.9;","vec2 dofblur7 = dofblur * 0.7;","vec2 dofblur4 = dofblur * 0.4;","vec4 col = vec4( 0.0 );","col += texture2D( tColor, vUv.xy );","col += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.4,   0.0  ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur4 );","gl_FragColor = col * 0.024;","gl_FragColor.a = 1.0;","}"].join("\n")},THREE.ShaderGodRays={godrays_generate:{uniforms:{tInput:{type:"t",value:null},fStepSize:{type:"f",value:1},vSunPositionScreenSpace:{type:"v2",value:new THREE.Vector2(.5,.5)}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["#define TAPS_PER_PASS 6.0","varying vec2 vUv;","uniform sampler2D tInput;","uniform vec2 vSunPositionScreenSpace;","uniform float fStepSize;","void main() {","vec2 delta = vSunPositionScreenSpace - vUv;","float dist = length( delta );","vec2 stepv = fStepSize * delta / dist;","float iters = dist/fStepSize;","vec2 uv = vUv.xy;","float col = 0.0;","for ( float i = 0.0; i < TAPS_PER_PASS; i += 1.0 ) {","float addCol = texture2D( tInput, uv ).r;","if(i <= iters && uv.y < 1.0) {","col += addCol;","}","uv += stepv;","}","gl_FragColor = vec4( col/TAPS_PER_PASS );","gl_FragColor.a = 1.0;","}"].join("\n")},godrays_combine:{uniforms:{tColors:{type:"t",value:null},tColors2:{type:"t",value:null},tGodRays:{type:"t",value:null},fGodRayIntensity:{type:"f",value:4},vSunPositionScreenSpace:{type:"v2",value:new THREE.Vector2(.5,.5)}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["varying vec2 vUv;","uniform sampler2D tColors;","uniform sampler2D tColors2;","uniform sampler2D tGodRays;","uniform vec2 vSunPositionScreenSpace;","uniform float fGodRayIntensity;","void main() {","vec4 godRayColInv = vec4( 1.0 - ( texture2D( tGodRays, vUv ).r * fGodRayIntensity) );","godRayColInv = clamp( godRayColInv , 0.0, 1.0);","gl_FragColor = ( texture2D( tColors, vUv ) ) * ( godRayColInv );","gl_FragColor.a = 1.0;","}"].join("\n")},godrays_fake_sun:{uniforms:{vSunPositionScreenSpace:{type:"v2",value:new THREE.Vector2(.5,.5)},fAspect:{type:"f",value:1},sunColor:{type:"c",value:new THREE.Color(16772608)},bgColor:{type:"c",value:new THREE.Color(0)}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["varying vec2 vUv;","uniform vec2 vSunPositionScreenSpace;","uniform float fAspect;","uniform vec3 sunColor;","uniform vec3 bgColor;","void main() {","vec2 diff = vUv - vSunPositionScreenSpace;","diff.x *= fAspect;","float prop = clamp( length( diff ) / 0.5, 0.0, 1.0 );","prop = 0.35 * pow( 1.0 - prop, 3.0 );","gl_FragColor.xyz = mix( sunColor, bgColor, 1.0 - prop );","gl_FragColor.w = 1.0;","}"].join("\n")}};var UTILS=UTILS||{};UTILS.deg2rad=function(angle){return Math.PI*angle/180},UTILS.rad2deg=function(angle){return 180*angle/Math.PI},UTILS.lerp=function(step,a,b){return(b-a)*step+a},UTILS.lerp1f=function(step,a,b){return step=.5*(step+1),(b-a)*step+a},UTILS.lerpv3=function(step,a,b,r){return r.x=(b.x-a.x)*step+a.x,r.y=(b.y-a.y)*step+a.y,r.z=(b.z-a.z)*step+a.z,r},UTILS.time01=function(cur,ini,len){if(len>0){if(cur>ini){var dt=cur-ini;return dt>len&&(dt=len),dt/len}return 0}return 1},UTILS.time10=function(cur,ini,len){return 1-UTILS.time01(cur,ini,len)},UTILS.clamp=function(v,min,max){return Math.max(min,Math.min(max,v))};var Hud=function(renderer,w,h,flipx,flipy){this.renderer=renderer,this.w=w,this.h=h,this.flipx=flipx,this.flipy=flipy,this.renderTarget=null,this.defaultMaterial=new THREE.MeshBasicMaterial({color:16777215}),this.defaultMaterial.name="HUD_DefaultMaterial",this.plane=new THREE.PlaneGeometry(1,1),this.plane.dynamic=!0,this.quad=new THREE.Mesh(this.plane,this.defaultMaterial),this.quad.name="HUD_Quad",this.quad.doubleSided=!0,this.camera=new THREE.OrthographicCamera(0,w,0,h,1e3,-1e3),this.scene=new THREE.Scene,this.scene.autoClear=!1,this.scene.add(this.quad),this.scene.add(this.camera)};Hud.prototype.resize=function(w,h){this.w!=w&&this.h!=h&&(this.w=w,this.h=h,this.camera.right=w,this.camera.bottom=h,this.camera.updateProjectionMatrix(),this.camera.updateMatrixWorld())},Hud.prototype.renderDef=function(x,y,w,h,rotz,fade,blending,texsrc){void 0===rotz&&(rotz=0),void 0===fade&&(fade=1),void 0===blending&&(blending=THREE.NormalBlending),texsrc?this.setQuadSrc(texsrc.x,texsrc.y,texsrc.w,texsrc.h):this.setQuadSrc(0,0,1,1),this.setQuad(x,y,w,h,rotz),this.quad.material.opacity=fade,this.quad.material.blending=blending,this.quad.material.side=THREE.DoubleSide,this.quad.material.transparent=!0,this.quad.material.depthTest=!1,this.quad.material.depthWrite=!1,this.renderer.render(this.scene,this.camera,this.renderTarget,!1)},Hud.prototype.render=function(texture,x,y,w,h,rotz,fade,blending,texsrc){this.quad.material=this.defaultMaterial,this.quad.material.map=texture,this.renderDef(x,y,w,h,rotz,fade,blending,texsrc)},Hud.prototype.renderMaterial=function(material,x,y,w,h,rotz,fade,blending,texsrc){this.quad.material=material,this.renderDef(x,y,w,h,rotz,fade,blending,texsrc)},Hud.prototype.setQuadSrc=function(x,y,w,h){this.quad.geometry.faceVertexUvs[0][0][0].set(x,y),this.quad.geometry.faceVertexUvs[0][0][1].set(x,y+h),this.quad.geometry.faceVertexUvs[0][0][2].set(x+w,y+h),this.quad.geometry.faceVertexUvs[0][0][3].set(x+w,y),this.quad.geometry.__dirtyUvs=!0,this.quad.geometry.uvsNeedUpdate=!0},Hud.prototype.setQuad=function(x,y,w,h,rotz){var xt=x+.5*w,yt=y+.5*h,rotx=0,roty=0;1==this.flipx&&(xt=this.w-xt,roty=UTILS.deg2rad(180)),1==this.flipy&&(yt=this.h-yt,rotx=UTILS.deg2rad(180)),this.quad.rotation.set(rotx+UTILS.deg2rad(180),roty,rotz),this.quad.position.set(xt,yt,1),this.quad.scale.set(w,h,1)};