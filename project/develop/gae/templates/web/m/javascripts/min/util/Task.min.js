/*global Poof *//*global Package *//*global Class *//*global Task */Package("util",[Class("public abstract Task",{_public_static:{EVENT_PROGRESS:"Task.Event.Progress",EVENT_DONE:"Task.Event.Done"},_public:{ownWeight:0,ownProgress:0,subtasks:[],weight:0,progress:0,done:!1,Task:function(e,t){this.ownWeight=e;this.subtasks=t?t:[];this.recalculateWeight()},bindEvents:function(){for(var e=0;e<this.subtasks.length;e++){this.subtasks[e].on(Task.EVENT_PROGRESS,Poof.retainContext(this,this.onSubtaskProgress));this.subtasks[e].on(Task.EVENT_COMPLETE,Poof.retainContext(this,this.onSubtaskComplete))}},unbindEvents:function(){for(var e=0;e<this.subtasks.length;e++){this.subtasks[e].off(Task.EVENT_PROGRESS);this.subtasks[e].off(Task.EVENT_COMPLETE)}},recalculateWeight:function(){this.weight=this.ownWeight;for(var e=0;e<this.subtasks.length;e++)this.weight+=this.subtasks[e].weight},recalculateProgress:function(){var e=this.ownProgress*this.ownWeight;for(var t=0;t<this.subtasks.length;t++)e+=this.subtasks[t].progress*this.subtasks[t].weight;this.progress=e/this.weight},execute:function(){this.bindEvents();for(var e=0;e<this.subtasks.length;e++)this.subtasks[e].execute();this.run()},run:function(){},notifyProgress:function(e){this.ownProgress=e;this.recalculateProgress();this.dispatch(Task.EVENT_PROGRESS,{progress:this.progress,weight:this.weight});if(this.progress===1){this.done=!0;this.unbindEvents();this.dispatch(Task.EVENT_COMPLETE,{progress:this.progress,weight:this.weight})}},notifyComplete:function(){this.notifyProgress(1)},onSubtaskProgress:function(e){Poof.suppressUnused(e);this.notifyProgress(this.progress)},onSubtaskComplete:function(e){Poof.suppressUnused(e);this.notifyProgress(this.progress)}}})]);